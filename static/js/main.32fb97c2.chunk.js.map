{"version":3,"sources":["logo.svg","App.js","page.js","menu.js","loading.js","graph/loading.js","graph/opinionLeaderView/authorTable.js","graph/userBehaviorView/timelineView.js","graph/userBehaviorView/dataprocess.js","graph/userBehaviorView/userActivityView.js","graph/userBehaviorView/uerBehavior.js","graph/userBehaviorView/articleSummaryView.js","graph/opinionLeaderView/opinionleaderTreemap.js","graph/newVis.js","grid.js","reportWebVitals.js","index.js","graph/jLouvain.js"],"names":["App","Page","props","getCR","e","str","onSubmit","setState","type","state","init","this","show","pagename","since","until","wordfilter","authorfilter","idfilter","contentfilter","commentfilter","handlePT","onChange","id","className","htmlFor","name","list","value","placeholder","Button","size","onClick","React","Component","defaultProps","Menu","openTab","evt","tabName","showPage1","handleCloseTab","menuprops","bind","initPage1","handlePT1","Loading","isLoading","responseError","errorType","message","loading","temp","total","svg","console","log","parseFloat","d3","style","w","color","selectAll","remove","append","attr","text","Math","round","AuthorTable","nodes","div","$this","callback","h","authorList","JSON","parse","stringify","noCuttedAuthorIdList","forEach","n","new_id","split","oldId","clickType","property","selectedNode","node","link","start","Date","termNode","l","pushTagWeight","tag","children","commentNumOfArticlesArr","responder","map","a","message_count","count","max","e1","push","pageRank","post","article","articleId","reply","weight","every","e2","existedNode","find","push_userid","author","push_tag","existedLink","source","target","num","computeSentimentMatrix","node_data","link_data","l1","abs","computeTotalWeightOfEachNode","d","total_num","length","link_num","tolerance","loopMax","k","newPageRank","i","total_rightFormula","j","temp_link","adjNode","sumOfEdgeWeightFromAdjNode","err","m","minPageRank","min","findMinimumPagerank","authorNode","leaderPageRank","influence","boo","neutral","sort","b","topicWithSelectedAuthor","authorTable","th","tr","data","enter","on","pushAuthor","some","index","findIndex","splice","x","Number","toFixed","reduce","messages","filter","timelineView","user","begin","end","original_date1","setHours","original_date2","filteredArticles","select","sliderRange","slider","width","tickFormat","ticks","default","fill","val","date1","date2","timeScale","domain","isClicked","article_id","postYear","date","getFullYear","fixedSvg","dateFormat","commentTime","setFullYear","nextDate","tempDate","setDate","getDate","tempDatePos","nextDatePos","workHour","getHours","workHourPos","userID","range","userScaleRange","filteredSortedArticles","sortedArticles","article_title","substring","y1","y2","articleId1","replace","articleId2","includesUser1","mes","includes","includesUser2","line","curve","y","pointerOffset","art","each","_d","beginDateMinusTwo","slice","_index","aDay","call","tickSizeInner","update","gRange","u","userList","time","userIndex","push_ipdatetime","month","getMonth","hours","pushTime","timeIndex","earliestDate","latestDate","diffTime","diffDays","ceil","totalDate","computeUserListByReplyCountPerHours","pushTypeColor","userScale","yDomain","be","en","beginDate","endDate","arr","getYDomain","xDomain","oneToNArray","Tooltip","padding","click","tooltipForArticle","includesUser","pointerWidth","transition","duration","filteredMessages","bandwidth","commentTypeColor","mouseover","mouseout","Array","isArray","html","push_content","pageX","pageY","originalId","repostId","getDay","setMinutes","setSeconds","midnight","community","percentOfUsersReplyScale","tickSizeOuter","angleDeg","atan2","PI","legendsGroup","repostLinkMouseOver","postTime","getMinutes","url","dat","splitedDate","concat","jLouvainClustering","edges","nodeData3","edgeData3","community3","jLouvain","originalNodeData","forceSimulation","force","key","links","communityAssignmentResult","final","keys","Object","countForCom","existed","filtered","userActivityView","beginDateOfQuery","endDateOfQuery","articles","submit","svgScale","commentTimelineSvg","margin","height","colorArray","leftMyColor","userSimilarity","userAuthorRelationShipArr","userListArray","repliedArticle","next","tempdiff","o1","o2","nextdiff","intersectArticles","sim","dp","newUserAxisValues","datas","users","similaritys","selectedUser","adjacencyMatrixNoAuthor","similarity","simThresh","artThresh","extent","scaleExtent","group","transform","ds","us","sims","simTh","artTh","copyDs","copyUsers","isBelowThreshold","currentValue","removeUnusedSims","filteredDs","filteredUs","filteredSim","axisDomain","communityWord","titleWordScore","communityWordArr","comNums","wordList","usr","usrCom","usrTotalWordCount","acc","obj","score","repliedArticles","cuttedTitle","word","existedWord","c","userArr","articleArray","existedArticle","userCommuniy","array","intersect","union","articleSimilarity","articlesCommunity","mat","origMat","sourceUserIndex","targetUserIndex","matrix","origMatrix","exponent","userAxis","com","reorder","perm","origGra","tempUser","permutedMat","originalMat","iCom","matCom","permuted_mat","permuted_origMat","maxCommunity","p","comArr","permutedOrigMat","secondOrdering_mat","secondOrdering_origMat","groupIndex","tempCom","existedCommunity","leftSvg","selectedArticles","rectClick","bothRepliedArticles","_a","sortedUs","groupLegend","floor","rectMargin","maxReplied","maxSize","fixedSize","bandWidthScale","positionScale","scale","computePosition","leftSvgGroup","xUser","yUser","bothReplied","usr2","bothSize","indX","indY","xUserID","yUserID","user1","user2","drawArticleSimilarity","quantileFilter","checked","empty","xUserRepliedTime","getAllReplyTime","yUserRepliedTime","replyTime","thisTimeRectwidth","thisTimeMaxLong","_n","quantile","q","initX","initY","q1_minutes","q1_long","q3_minutes","q3_long","fixedLong","q2_minutes","q2_long","step","drawNewReplyTimeWithQuantile","selectedGroup","ind","offset","drawUserPath","articleArr","diff","reverseScale","widthOfHeatmap","brush","sqrt","sourceEvent","s","selection","fixedX1","fixedX2","__brush","context","brushPathOffset","tickClick","move","rangeSelectingUsers","drawNewHeatmap","radial","numOfArtCom","numOfArtOfEachComunity","tempCommunity","existedCommunityOfArticle","artComPie","numOfUserCom","comunityIndexY","articleGroupWidthScale","articleGroupIndexArray","articleGroupYScale","articlesOfCommunityI","articleGroupOfUserCommunity","numOfUser","drawRelationRatio","userCount","communityIndexDatas","communityIndexArticles","findArticle","existedComunity","computeNumOfArticlesOfEachCommunity","communityEachLevelCount","levelOne","levelTwo","levelThree","levelFour","levelFive","level","positionOfArticleCom","numberOfArticles","prePosition","position","groupRadial","tem","maxWidth_tem","drawBlankAreaOfArticleCommunity","drawBipartiteOfUserAndArticles","drawIntersectionOfUserCommunities","svgGroup","maxWidth","tempIndex","totalArticlesOfThisCommunityOfArticle","thisWidthScale","_nodes","arts","communityIndex","haveReplied","positionIndex","diffAterSame","nextCom","pIndex","nex","maxWidth_nex","temCommunity","nextArticleCommunity","artNum","heightScale","levelIndex","sameArticles","drawNewCoClusterGraph","drawUserGroupBipartiteRelations","similarThreshDiv","articleThreshDiv","drawFilterDiv","simOptionsDiv","fiveLevelOption","replyQuantileOption","getActivityDiv","xID","yID","drawOptionDiv","UserBehavior","userData","undefined","userSimilaritySvg","fixedUserArr","display","paddingLeft","viewBox","borderBottom","articleSummaryView","yAxisRange","timeScaleObjArr","afterThreeDays","scaleX","scaleY","articleIndex","xAxis","articleDate","afterSixHours","commentTimeScale","afterArticlePostTimeFormat","dateMinusPostTime","makeXAxis","yAxis_left","makeYAxis","yAxis_right","articleYear","xScale","commentScoreScale","axis","info","window","open","datum","newData","pre","preTime","nexTime","t","makeDataFitLineChart","commentTimeData","linkCoordinateWithSameUser","direction","_i","d2","i2","n2","_d2","_i2","_n2","class","x1","x2","treemap","cellNodes","articleTreemap","selectedArticleNodes","authorNodes","pagrRank","articleNodes","totalComments","colname","root","sum","paddingInner","leaves","x0","y0","parent","drawSelectedUserTable","articleNodeClicked","descendants","depth","selectedUserDiv","test","selectedUserClick","network_h","table","parseInt","clickUserTable","Graph","myRef","createRef","nextProps","nextState","thisSet","set","nextSet","thisUserData","nextUserData","drawwithlabels","refData","handleSubmit","getReqstr","boardname","searchBegin","searchEnd","opState","initParameter","varname1","var1","minvar1","min1","maxvar1","max1","posttype","keyword3","strminvar1","strmaxvar1","strposttype","strpage1","strtime1","strtime2","struser1","strkeyword3","stractivity","myRequest","betweenDate","newBeginDate","newEndDate","encodeURI","Request","method","resArr","recursiveFetch","req","fetch","then","response","json","existedUser","responseUser","totalReplyCount","wordScore","wl","orig_group","userIdArr","catch","propsSet","ref","marginLeft","alignSelf","fontSize","chekced","overflowY","Grid","var2","min2","max2","submitType","visprops","$gte","$lt","getFilename","changeList","handleTab","pagename1","keyword1","author1","commentThreshold","strauthor1","strkeyword1","strcommentThreshold","strco","prevState","preventDefault","status","error","Error","statusText","res","title","datalist","collection","previous","tab","Lodash","cloneDeep","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById","original_graph_nodes","original_graph_edges","partition_init","original_graph","edge_index","make_set","obj_values","vals","hasOwnProperty","get_degree_for_node","graph","neighbours","_assoc_mat","neighbour","get_neighbours_of_node","get_edge_weight","node1","node2","make_assoc_mat","edge_list","edge","clone","constructor","init_status","part","nodes_to_com","total_weight","internals","degrees","gdegrees","loops","get_graph_size","deg","TypeError","inc","__modularity","result","in_degree","degree","pow","__neighcom","weights","neighbourcom","__insert","__remove","__renumber","dict","ret","new_values","new_value","__one_level","modif","nb_pass_done","cur_mod","new_mod","com_node","degc_totw","neigh_communities","best_com","best_increase","incr","induced_graph","partition","w_prec","partition_values","com1","com2","update_assoc_mat","add_edge_to_graph","self","define","core","dendogram","part_init","mod","status_list","current_graph","generate_dendogram","partition_at_level","nds","arguments","edgs","assoc_mat","prttn"],"mappings":"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","file":"static/js/main.32fb97c2.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import logo from './logo.svg';\nimport './App.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <p>\n          Edit <code>src/App.js</code> and save to reload.\n        </p>\n        <a\n          className=\"App-link\"\n          href=\"https://reactjs.org\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          Learn React\n        </a>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","// @flow\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\n// import InputGroup from 'react-bootstrap/InputGroup';\r\n// import FormControl from 'react-bootstrap/FormControl';\r\nimport Button from 'react-bootstrap/Button';\r\n// import { Row } from 'antd';\r\n// import './style/input.css';\r\n\r\nclass Page extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = props.init;\r\n    /*\r\n    this.state = {\r\n      pagename1: props.init.pagename1,\r\n      since1: props.init.since1,\r\n      until1: props.init.until1,\r\n      wordfilter1: props.init.wordfilter1,\r\n      idfilter1: props.init.idfilter1,\r\n      contentfilter1: props.init.contentfilter1,\r\n    };\r\n    */\r\n  }\r\n\r\n  /*\r\n  handleClick = () => {\r\n    this.props = '';\r\n  };\r\n  */\r\n  getCR = (e, str) => {\r\n    const { onSubmit } = this.props;\r\n    this.setState(() => ({\r\n      type: str,\r\n    }));\r\n    // console.log(e);\r\n    onSubmit(e);\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      show,\r\n      init: {\r\n        pagename, since, until, wordfilter, authorfilter, idfilter, contentfilter, commentfilter,\r\n      },\r\n      onChange,\r\n      handlePT,\r\n    } = this.props;\r\n    const actions = [\r\n      'Gossiping',\r\n      'Soft_Job',\r\n      'Tech_Job',\r\n    ];\r\n    const pagenamelist = {\r\n      listid: 'pagenamelist',\r\n      selectid: 'pagename',\r\n      name: 'pagename',\r\n      lists: actions,\r\n    };\r\n    if (show) {\r\n      return (\r\n        <div id=\"Page1\" className=\"tabcontent\">\r\n          {/* <span\r\n            className=\"topright\"\r\n            role=\"button\"\r\n            tabIndex=\"0\"\r\n            onClick={onChange}\r\n            onKeyDown={onChange}\r\n          >\r\n              x\r\n          </span> */}\r\n          <fieldset>\r\n            {/* <legend>Query date1</legend> */}\r\n            <label htmlFor=\"x\">\r\n                Board:\r\n              <input\r\n                className=\"form-control\"\r\n                name=\"pagename\"\r\n                id=\"pagename1\"\r\n                type=\"text\"\r\n                list=\"pagenamelist\"\r\n                value={pagename}\r\n                onChange={handlePT}\r\n              />\r\n            </label>\r\n            <label htmlFor=\"x\">\r\n                Time:\r\n              <input\r\n                className=\"form-control date\"\r\n                type=\"date\"\r\n                name=\"since\"\r\n                id=\"date1\"\r\n                placeholder=\"date\"\r\n                value={since}\r\n                onChange={handlePT}\r\n              />\r\n            </label>\r\n            <span>~ &nbsp; </span>\r\n            <label htmlFor=\"x\">\r\n              <input\r\n                className=\"form-control date\"\r\n                type=\"date\"\r\n                name=\"until\"\r\n                id=\"date2\"\r\n                placeholder=\"date\"\r\n                value={until}\r\n                onChange={handlePT}\r\n              />\r\n            </label>\r\n            <label htmlFor=\"x\">\r\n                Title:\r\n              <input\r\n                className=\"form-control\"\r\n                type=\"keyword1\"\r\n                name=\"wordfilter\"\r\n                id=\"keyword1\"\r\n                placeholder=\"keyword ex: 總統|大選\"\r\n                value={wordfilter}\r\n                onChange={handlePT}\r\n              />\r\n            </label>\r\n            <label htmlFor=\"x\">\r\n                AuthorID:\r\n              <input\r\n                className=\"form-control\"\r\n                type=\"authorid1\"\r\n                name=\"authorfilter\"\r\n                id=\"authorid1\"\r\n                placeholder=\"authorid\"\r\n                value={authorfilter}\r\n                onChange={handlePT}\r\n              />\r\n            </label>\r\n            <label htmlFor=\"x\">\r\n                UserID:\r\n              <input\r\n                className=\"form-control\"\r\n                type=\"userid1\"\r\n                name=\"idfilter\"\r\n                id=\"userid1\"\r\n                placeholder=\"userid\"\r\n                value={idfilter}\r\n                onChange={handlePT}\r\n              />\r\n            </label>\r\n            <label htmlFor=\"x\">\r\n                Content word:\r\n              <input\r\n                className=\"form-control\"\r\n                type=\"keyword3\"\r\n                name=\"contentfilter\"\r\n                id=\"keyword3\"\r\n                placeholder=\"keyword\"\r\n                value={contentfilter}\r\n                onChange={handlePT}\r\n              />\r\n            </label>\r\n            <label htmlFor=\"x\">\r\n                #comments &gt;\r\n              <input\r\n                className=\"form-control\"\r\n                type=\"commentThreshold\"\r\n                name=\"commentfilter\"\r\n                id=\"commentThreshold\"\r\n                placeholder=\"500\"\r\n                value={commentfilter}\r\n                onChange={handlePT}\r\n              />\r\n            </label>\r\n            <Button name=\"submit\" type=\"button\" size=\"sm\" onClick={e => this.getCR(e, 'All')}>\r\n              Query Submit\r\n            </Button>\r\n          </fieldset>\r\n        </div>\r\n      );\r\n    }\r\n    return null;\r\n  }\r\n}\r\n\r\nPage.defaultProps = {};\r\nPage.propTypes = {\r\n  show: PropTypes.bool.isRequired,\r\n  init: PropTypes.shape({\r\n    pagename: PropTypes.string,\r\n    since: PropTypes.string,\r\n    until: PropTypes.string,\r\n    wordfilter: PropTypes.string,\r\n    idfilter: PropTypes.string,\r\n    authorfilter: PropTypes.string,\r\n    contentfilter: PropTypes.string,\r\n    commentfilter: PropTypes.number,\r\n  }).isRequired,\r\n  onChange: PropTypes.func.isRequired,\r\n  handlePT: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Page;\r\n","// @flow\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\n// import ParameterTab from './parameter';\r\nimport Page from './page';\r\n// import SubmitTab from './submit';\r\n// import DownloadtTab from './download';\r\n// import\r\n\r\nclass Menu extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      ...props.menuprops,\r\n      showPage1: true,\r\n      // showSubmit: false,\r\n    };\r\n    this.openTab = this.openTab.bind(this);\r\n    this.handleCloseTab = this.handleCloseTab.bind(this);\r\n  }\r\n\r\n  openTab = (evt, tabName) => {\r\n    switch (tabName) {\r\n      case 'Page1':\r\n        this.setState(() => ({\r\n          showPage1: true,\r\n        }));\r\n        break;\r\n      default:\r\n    }\r\n  };\r\n\r\n  handleCloseTab = () => {\r\n    this.setState(() => ({\r\n      showPage1: true,\r\n    }));\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      showPage1,\r\n    } = this.state;\r\n\r\n    const {\r\n      onSubmit,\r\n      menuprops: {\r\n        initPage1,\r\n      },\r\n      handlePT1,\r\n    } = this.props;\r\n\r\n    return (\r\n      <div className=\"box menu\">\r\n        <Page\r\n          show={showPage1}\r\n          init={initPage1}\r\n          onChange={this.handleCloseTab}\r\n          handlePT={handlePT1}\r\n          onSubmit={onSubmit}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nMenu.defaultProps = {};\r\nMenu.propTypes = {\r\n  menuprops: PropTypes.shape({\r\n    showParameter: PropTypes.bool,\r\n    showPage1: PropTypes.bool,\r\n    showPage2: PropTypes.bool,\r\n    showSubmit: PropTypes.bool,\r\n    showDownload: PropTypes.bool,\r\n    initPage1: PropTypes.shape({\r\n      pagename: PropTypes.string,\r\n      since: PropTypes.string,\r\n      until: PropTypes.string,\r\n      wordfilter: PropTypes.string,\r\n      idfilter: PropTypes.string,\r\n      contentfilter: PropTypes.string,\r\n    }),\r\n    submitType: PropTypes.string,\r\n  }).isRequired,\r\n  onSubmit: PropTypes.func.isRequired,\r\n  handlePT1: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Menu;\r\n","// @flow\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './style/loading.css';\r\n\r\ntype LoadingProps = {\r\n  isLoading: boolean,\r\n  responseError: boolean,\r\n  errorType: string,\r\n};\r\n\r\nconst Loading = (props: LoadingProps) => {\r\n  const { isLoading, responseError, errorType } = props;\r\n  // console.log(props);\r\n  if (responseError) {\r\n    return (\r\n      <div className=\"wrapperresponding\">\r\n        <div className=\"responseerror\">\r\n          <span id=\"x\">X</span>\r\n        </div>\r\n        <p className=\"text\">{errorType.message}</p>\r\n      </div>\r\n    );\r\n  }\r\n  if (isLoading) {\r\n    return (\r\n      <div className=\"wrapperloading\">\r\n        <div className=\"loading up\" />\r\n        <div className=\"loading down\" />\r\n      </div>\r\n    );\r\n  }\r\n  return null;\r\n};\r\n\r\nexport default Loading;\r\n","/* eslint-disable no-underscore-dangle */\r\n/* eslint-disable no-console */\r\n/* eslint-disable linebreak-style */\r\n/* eslint-disable react/prop-types */\r\n/* eslint-disable no-unused-vars */\r\n/* eslint-disable no-use-before-define */\r\n/* eslint-disable camelcase */\r\n/* eslint-disable no-param-reassign */\r\n// @flow\r\nimport * as d3 from 'd3';\r\nimport React from 'react';\r\n\r\nexport default function loading(temp: number, total: number, svg: React.ElementRef<'svg'>) {\r\n  console.log(temp, total, svg);\r\n  const h = parseFloat(d3.select('#timeLine').style('height'));\r\n  const w = parseFloat(d3.select('#timeLine').style('width'));\r\n  const color = d3.schemeTableau10;\r\n  if (temp === 0) {\r\n    // d3.select('#submitUsers')\r\n    //   .style('visibility', 'hidden');\r\n    svg.selectAll('*').remove();\r\n    svg.append('rect')\r\n      .attr('x', w / 2 - 100)\r\n      .attr('y', 50)\r\n      .attr('height', 10)\r\n      .attr('width', 1)\r\n      .attr('fill', color[0]);\r\n    svg.append('text')\r\n      .text(`${1} %`)\r\n      .attr('x', (w / 2 - 100) + 1 + 10)\r\n      .attr('y', 60);\r\n  }\r\n\r\n  if (temp > 0) {\r\n    svg.selectAll('rect')\r\n      .attr('x', w / 2 - 100)\r\n      .attr('y', 50)\r\n      .attr('height', 10)\r\n      // .transition()\r\n      // .duration(1000)\r\n      .attr('width', (): number => 200 * (temp / total));\r\n    svg.selectAll('text')\r\n      .text(`${Math.round(100 * (temp / total))} %`)\r\n      // .transition()\r\n      // .duration(1000)\r\n      .attr('x', (w / 2 - 100) + 200 * (temp / total) + 10)\r\n      .attr('y', 60);\r\n  }\r\n}\r\nexport { loading };\r\n","/* eslint-disable no-underscore-dangle */\r\n/* eslint-disable no-console */\r\n/* eslint-disable linebreak-style */\r\n/* eslint-disable react/prop-types */\r\n/* eslint-disable no-unused-vars */\r\n/* eslint-disable no-use-before-define */\r\n/* eslint-disable camelcase */\r\n/* eslint-disable no-param-reassign */\r\nimport React, { Component, PureComponent } from 'react';\r\nimport * as d3 from 'd3';\r\nimport _ from 'lodash';\r\nimport { loading } from '../loading';\r\n\r\nexport default function AuthorTable(nodes, div, $this, callback) {\r\n  div.selectAll('*').remove();\r\n  const h = parseFloat(d3.select('.authorList').style('height'));\r\n  const authorList = JSON.parse(JSON.stringify(nodes));\r\n  const threshold = 0;\r\n  const noCuttedAuthorIdList = JSON.parse(JSON.stringify(nodes));\r\n  authorIdPreprocessing(authorList);\r\n  const clickType = d3.select('input[name=\"pageRank\"]').property('checked');\r\n  if (clickType) leaderPageRank(authorList);\r\n  // computeSentimentMatrix(authorList);\r\n  const articleCellSvg = d3.select('#graph');\r\n  let authorIndex = 0;\r\n  // compute author's influence\r\n  authorList.forEach((author) => {\r\n    let influence = 0;\r\n    author.responder.forEach((article) => {\r\n      // influence += article.message.length;\r\n      influence += article.message_count.push;\r\n      influence -= article.message_count.boo;\r\n      influence += article.message_count.neutral / 2;\r\n    });\r\n    author.influence = influence;\r\n    author.pageRank = author.pageRank || influence;\r\n  });\r\n  // authorList.children = authorList.children.filter(author => author.influence >= 100);\r\n  authorList.sort((a, b) => d3.descending(a.pageRank, b.pageRank));\r\n  let topicWithSelectedAuthor = JSON.parse(JSON.stringify(noCuttedAuthorIdList));\r\n  topicWithSelectedAuthor = [];\r\n  callback(authorList, 'test');\r\n  // console.log(authorList.children);\r\n  // console.log(div);\r\n  div = div.append('div')\r\n    .style('max-height', `${h}px`);\r\n  const authorTable = div.append('table');\r\n  // console.log(authorTable);\r\n  const th = authorTable.append('tr');\r\n  th.append('th').attr('class', 'tableHeader id')\r\n    .attr('width', '30%')\r\n    .text('AuthorID');\r\n  th.append('th').attr('class', 'tableHeader deltaLength')\r\n    .attr('width', '20%')\r\n    .text('LPR');\r\n  th.append('th').attr('class', 'tableHeader articleCount')\r\n    .attr('width', '25%')\r\n    .text('# Of Articles');\r\n  th.append('th').attr('class', 'tableHeader messageCount')\r\n    .attr('width', '25%')\r\n    .text('Total Comments');\r\n\r\n  authorTable.selectAll('.tableHeader')\r\n    .style('background', d3.schemeTableau10[0])\r\n    .style('color', 'white');\r\n\r\n  // Create a table with rows and bind a data row to each table row\r\n  const tr = authorTable.selectAll('tr.data')\r\n    .data(authorList)\r\n    .enter()\r\n    .append('tr')\r\n    .attr('class', 'datarow')\r\n    .on('click', clicked);\r\n\r\n  tr.append('td').text(d => d.id);\r\n  tr.append('td').text(d => `${financial(d.pageRank)}`);\r\n  tr.append('td').text(d => d.responder.length);\r\n  tr.append('td')\r\n    .text((d) => {\r\n      const totalComment = d.responder.reduce((total, n) => total + n.messages.length, 0);\r\n      return totalComment;\r\n    });\r\n  d3.selectAll('.datarow').filter(':nth-child(even)')\r\n    .style('background', 'whitesmoke');\r\n\r\n  function clicked(d) {\r\n    console.log('table clicked');\r\n    const pushAuthor = JSON.parse(JSON.stringify(d));\r\n    pushAuthor.id = pushAuthor.oldId;\r\n    if (!topicWithSelectedAuthor.some(e => e.id === pushAuthor.id)) {\r\n      topicWithSelectedAuthor.push(pushAuthor);\r\n      console.log(topicWithSelectedAuthor, pushAuthor);\r\n      callback(topicWithSelectedAuthor, pushAuthor.id);\r\n      authorIndex += 1;\r\n    } else {\r\n      const index = topicWithSelectedAuthor.findIndex(e => e.id === pushAuthor.id);\r\n      if (topicWithSelectedAuthor.length > 1) {\r\n        topicWithSelectedAuthor.splice(index, 1);\r\n        console.log(topicWithSelectedAuthor, pushAuthor);\r\n        callback(topicWithSelectedAuthor, topicWithSelectedAuthor[0].id);\r\n      }\r\n    }\r\n  }\r\n\r\n  function financial(x) {\r\n    return Number.parseFloat(x).toFixed(2);\r\n  }\r\n\r\n  function authorIdPreprocessing(node_data) {\r\n    node_data.forEach((n) => {\r\n      if (n.id) {\r\n        const new_id = n.id.split(' ');\r\n        n.oldId = n.id;\r\n        [n.id] = new_id;\r\n      }\r\n    });\r\n  }\r\n\r\n  function leaderPageRank(selectedNode) {\r\n    const node = [];\r\n    const link = [];\r\n    const alpha = 0.85;\r\n    const start = new Date();\r\n    computeSentimentMatrix(selectedNode, node, link);\r\n    computeTotalWeightOfEachNode(node, link);\r\n    pageRank(node, link, alpha);\r\n    // console.log(node, link);\r\n    const minPageRank = findMinimumPagerank(node);\r\n    selectedNode.children.forEach((e) => {\r\n      const authorNode = node.find(e1 => e1.id === e.id);\r\n      // console.log(authorNode);\r\n      e.pageRank = authorNode\r\n        ? authorNode.pageRank + Math.abs(minPageRank) + 1 : Math.abs(minPageRank) + 1;\r\n    });\r\n    // console.log(node);\r\n    console.log(selectedNode.children);\r\n    console.log(start - new Date());\r\n\r\n    function computeSentimentMatrix(termNode, n, l) {\r\n      termNode.children.forEach((e) => {\r\n        const commentNumOfArticlesArr = e.responder.map(a => a.message_count[0].count);\r\n        if (Math.max(...commentNumOfArticlesArr) >= threshold) {\r\n          e.responder.forEach((e1) => {\r\n            n.push({\r\n              id: e.id,\r\n              pageRank: 0.25,\r\n              post: [{ article: e1.articleId }],\r\n              reply: [],\r\n              weight: 0,\r\n            });\r\n            let count = 1;\r\n            if (e1.message_count[0].count >= threshold) {\r\n              e1.message.every((e2) => {\r\n                const existedNode = n.find(a => a.id === e2.push_userid);\r\n                if (!existedNode) {\r\n                  n.push({\r\n                    id: e2.push_userid,\r\n                    pageRank: 0.25,\r\n                    reply: [{ author: e.id, article: e1.articleId, tag: e2.push_tag }],\r\n                    weight: 0,\r\n                  });\r\n                } else {\r\n                  // console.log(existedNode);\r\n                  existedNode.reply.push({\r\n                    author: e.id,\r\n                    article: e1.articleId,\r\n                    tag: e2.push_tag,\r\n                  });\r\n                }\r\n                const existedLink = l.find(a => a.source === e2.push_userid && a.target === e.id);\r\n                if (!existedLink) {\r\n                  l.push({\r\n                    source: e2.push_userid,\r\n                    target: e.id,\r\n                    value: pushTagWeight(e2.push_tag),\r\n                    num: 1,\r\n                  });\r\n                } else {\r\n                  existedLink.value += pushTagWeight(e2.push_tag);\r\n                  existedLink.num += 1;\r\n                }\r\n                count += 1;\r\n                return count > 0;\r\n              });\r\n            }\r\n          });\r\n        }\r\n      });\r\n      function pushTagWeight(tag) {\r\n        switch (tag) {\r\n          case '推':\r\n            return 1;\r\n          case '噓':\r\n            return -2;\r\n          default:\r\n            return 0.5;\r\n        }\r\n      }\r\n    }\r\n    function computeTotalWeightOfEachNode(node_data, link_data) {\r\n      link_data.forEach((l1) => {\r\n        const n1 = node_data.find(n => n.id === l1.source);\r\n        n1.weight += Math.abs(l1.value / l1.num);\r\n      });\r\n    }\r\n    function pageRank(node_data, link_data, d) {\r\n      const total_num = node_data.length;\r\n      const link_num = link_data.length;\r\n      const tolerance = 1e-6;\r\n      // const clickType = d3.select('input[name=\"pageRank\"]').property('checked');\r\n      const loopMax = clickType ? 100 : 1;\r\n      // const loopMax = 1;\r\n      for (let k = 0; k < loopMax; k += 1) {\r\n        const newPageRank = [];\r\n        for (let i = 0; i < total_num; i += 1) {\r\n          let total_rightFormula = 0;\r\n          for (let j = 0; j < link_num; j += 1) {\r\n            const temp_link = link_data[j];\r\n            if (temp_link.target === node_data[i].id) {\r\n            // console.log(node_data[i].id);\r\n              const adjNode = node_data.find(e => e.id === temp_link.source);\r\n              // console.log(adjencentNode);\r\n              let sumOfEdgeWeightFromAdjNode = 0;\r\n              if (adjNode.weight !== 0) {\r\n                sumOfEdgeWeightFromAdjNode = adjNode.pageRank\r\n                  * ((temp_link.value / temp_link.num) / adjNode.weight);\r\n              }\r\n              total_rightFormula += sumOfEdgeWeightFromAdjNode;\r\n            }\r\n          }\r\n          newPageRank.push(((1 - d) / total_num) + (d * total_rightFormula));\r\n        }\r\n        let err = 0;\r\n        for (let i = 0; i < total_num; i += 1) {\r\n          err += Math.abs(node_data[i].pageRank - newPageRank[i]);\r\n        }\r\n\r\n        for (let m = 0; m < total_num; m += 1) {\r\n          node_data[m].pageRank = newPageRank[m];\r\n        }\r\n        loading(k, loopMax, d3.select('#graph'));\r\n        console.log(`leaderPageRank: ${err}, total_num * tolerance: ${total_num * tolerance}`);\r\n        if (err <= total_num * tolerance) break;\r\n      }\r\n    }\r\n    function findMinimumPagerank(node_data) {\r\n      let min = 0;\r\n      node_data.forEach((n) => {\r\n        if (n.pageRank < min) min = n.pageRank;\r\n      });\r\n      return min;\r\n    }\r\n  }\r\n}\r\n\r\nexport { AuthorTable };\r\n","/* eslint-disable max-len */\r\n/* eslint-disable no-loop-func */\r\n/* eslint-disable no-underscore-dangle */\r\n/* eslint-disable no-console */\r\n/* eslint-disable linebreak-style */\r\n/* eslint-disable react/prop-types */\r\n/* eslint-disable no-unused-vars */\r\n/* eslint-disable no-use-before-define */\r\n/* eslint-disable camelcase */\r\n/* eslint-disable no-param-reassign */\r\nimport * as d3 from 'd3';\r\nimport * as slider from 'd3-simple-slider';\r\n// import AuthorTable from './authorTable';\r\n\r\nexport default function timelineView(data, user, svg, begin, end) {\r\n  // console.log(begin);\r\n  svg.selectAll('*').remove();\r\n  // const h = parseFloat(d3.select('.commentTimeline').style('height'));\r\n  // const w = parseFloat(d3.select('.commentTimeline').style('width'));\r\n  // const h = parseFloat(d3.select('#context').style('height')) - 220;\r\n  const h = 822 - 220;\r\n  // const w = parseFloat(d3.select('#context').style('width'));\r\n  const w = 512;\r\n  let original_date1 = new Date(begin);\r\n  original_date1.setHours(0, 0, 0);\r\n  let original_date2 = new Date(end);\r\n  original_date2.setHours(23, 59, 59);\r\n  // console.log(original_date1, original_date2);\r\n  let filteredArticles = [];\r\n  // Range\r\n  d3.select('div#slider-range').select('svg').remove();\r\n  const sliderRange = slider.sliderBottom()\r\n    .min(original_date1)\r\n    .max(original_date2)\r\n    .width(w * (2 / 3) - 5)\r\n    .tickFormat(d3.timeFormat('%m/%d %H'))\r\n    .ticks(5)\r\n    .default([original_date1, original_date2])\r\n    .fill('#2196f3')\r\n    .on('onchange', val => {\r\n      update(new Date(val[0]), new Date(val[1]));\r\n      original_date1 = new Date(val[0]);\r\n      original_date2 = new Date(val[1]);\r\n    });\r\n\r\n  const gRange = d3\r\n    .select('div#slider-range')\r\n    .append('svg')\r\n    .attr('viewBox', '-10 0 320 50')\r\n    .append('g')\r\n    .attr('transform', 'scale(0.8, 1.2) translate(20,10)');\r\n\r\n  gRange.call(sliderRange);\r\n  gRange.select('.axis')\r\n    .attr('transform', 'translate(0, 0)')\r\n    .selectAll('text')\r\n    .attr('y', 10);\r\n  gRange.selectAll('.parameter-value')\r\n    .selectAll('text')\r\n    .attr('y', 15);\r\n  d3.select('p#value-range').text('Time Range')\r\n    .style('text-align', 'right')\r\n    .style('margin-right', '7px');\r\n\r\n  //----------------\r\n\r\n  svg.selectAll('*').remove();\r\n  const gridSize = 12;\r\n  const userListByReplyCountPerHours = computeUserListByReplyCountPerHours(data, user);\r\n  // console.log(userListByReplyCountPerHours);\r\n  const color = [\r\n    d3.interpolateBlues,\r\n    d3.interpolateOranges,\r\n    d3.interpolateGreens,\r\n    d3.interpolatePurples,\r\n    d3.interpolateReds,\r\n    d3.interpolateYlOrBr,\r\n    d3.interpolateGnBu,\r\n    d3.interpolateGreys,\r\n    d3.interpolateBlues,\r\n    d3.interpolateOranges,\r\n    d3.interpolateGreens,\r\n    d3.interpolatePurples,\r\n    d3.interpolateReds,\r\n    d3.interpolateYlOrBr,\r\n    d3.interpolateGnBu,\r\n    d3.interpolateGreys,\r\n  ];\r\n  const pushTypeColor = d3.schemeTableau10;\r\n  const myColor = d3.scaleLinear()\r\n    .range([d3.interpolateYlGn(0), d3.interpolateYlGn(0.8)])\r\n    .domain([0, 10]);\r\n  const xScale = getXScale(original_date1, original_date2);\r\n  const timeScale = d3.scaleTime().domain([original_date1, original_date2]).range([0, h]);\r\n  // console.log('height', h);\r\n  const userScaleRange = 330;\r\n  const userID = user.map(e => e.id);\r\n  const userScale = d3.scaleBand().domain(userID).range([0, userScaleRange]);\r\n  const yDomain = getYDomain(original_date1, original_date2);\r\n  // console.log(yDomain);\r\n  const xDomain = oneToNArray(24);\r\n  const x = d3.scaleBand()\r\n    .range([0, 24 * gridSize])\r\n    .domain(xDomain)\r\n    .padding(0.05);\r\n  const y = d3.scaleBand()\r\n    .range([0, yDomain.length * gridSize])\r\n    .domain(yDomain)\r\n    .padding(0.05);\r\n  const Tooltip = d3.select('.tooltip');\r\n  let isClicked = null;\r\n  const click = article => {\r\n    isClicked = isClicked ? null : article.article_id;\r\n    console.log('isClicked', isClicked);\r\n    Tooltip\r\n      .style('opacity', 0)\r\n      .style('left', '0px')\r\n      .style('top', '0px');\r\n    if (isClicked) {\r\n      tooltipForArticle(article);\r\n    }\r\n    fixedSvg.selectAll('.repostLink')\r\n      .attr('opacity', isClicked ? 0 : 1);\r\n    fixedSvg.selectAll('.pointer')\r\n      .attr('opacity', isClicked ? 0 : 1);\r\n    fixedSvg.selectAll('.article')\r\n      .attr('opacity', isClicked ? 0 : 1);\r\n    const articleId = article.article_id.replace(/\\./gi, '');\r\n    fixedSvg.selectAll(`.pointer.articleID_${articleId}`)\r\n      .attr('opacity', 1);\r\n    const includesUser = [];\r\n    article.messages.forEach(mes => {\r\n      if (userID.includes(mes.push_userid)) {\r\n        if (!includesUser.includes(mes.push_userid)) {\r\n          includesUser.push(mes.push_userid);\r\n        }\r\n      }\r\n    });\r\n    const pointerWidth = d3.scaleLinear().domain([0, userID.length]).range([0, -80]);\r\n    fixedSvg.selectAll(`.pointer.articleID_${articleId}`)\r\n      .selectAll('rect')\r\n      .transition()\r\n      .duration(1000)\r\n      .attr('width', isClicked ? -pointerWidth(includesUser.length) + userScale.range()[1] : -pointerWidth(includesUser.length));\r\n    console.log(article);\r\n    if (isClicked) {\r\n      const postYear = new Date(article.date).getFullYear();\r\n      const filteredMessages = article.messages.filter(e => userID.includes(e.push_userid));\r\n      fixedSvg.selectAll()\r\n        .data(filteredMessages)\r\n        .enter()\r\n        .append('circle')\r\n        .attr('class', 'commentTime')\r\n        .attr('cx', d => userScale(d.push_userid) + userScale.bandwidth() / 2)\r\n        .attr('r', 4)\r\n        // .attr('width', userScale.bandwidth())\r\n        .style('fill', d => commentTypeColor(d.push_tag))\r\n        .attr('opacity', (d, index) => {\r\n          const date = dateFormat(d);\r\n          const commentTime = new Date(new Date(date).setFullYear(postYear));\r\n          return timeScale(commentTime) < h ? 1 : 0;\r\n        })\r\n        .on('mouseover', d => mouseover(article, d))\r\n        .on('mouseout', d => mouseout(d, article.article_id))\r\n        .attr('cy', timeScale(new Date(article.date)))\r\n        .transition()\r\n        .duration(1000)\r\n        .attr('cy', (d, index) => {\r\n          const date = dateFormat(d);\r\n          const commentTime = new Date(new Date(date).setFullYear(postYear));\r\n          return timeScale(commentTime);\r\n        });\r\n    } else {\r\n      fixedSvg.selectAll('.commentTime').remove();\r\n    }\r\n  };\r\n\r\n  const mouseover = (d, e) => {\r\n    // console.log(d, e, isClicked);\r\n    if (isClicked) {\r\n      if (d.article_id === isClicked) {\r\n        if (Array.isArray(e)) {\r\n          tooltipForArticle(d);\r\n        } else {\r\n          Tooltip\r\n            .style('opacity', 1)\r\n            .html(`<p style=\"color: white;\">${e.push_tag} ${e.push_userid}: ${e.push_content} ${e.push_ipdatetime}</p>`)\r\n            .style('left', `${d3.event.pageX + 25}px`)\r\n            .style('top', `${d3.event.pageY + 25}px`);\r\n          d3.select(this)\r\n            .style('stroke', 'black')\r\n            .style('opacity', 1);\r\n        }\r\n      }\r\n      if (d !== isClicked) return;\r\n    }\r\n\r\n    if (Array.isArray(e)) {\r\n      const title = d.article_title || '';\r\n      tooltipForArticle(d);\r\n      fixedSvg.selectAll('.repostLink')\r\n        .attr('opacity', '0');\r\n      fixedSvg.selectAll('.pointer')\r\n        .attr('opacity', '0');\r\n      fixedSvg.selectAll('.article')\r\n        .attr('opacity', '0');\r\n      const articleId = d.article_id.replace(/\\./gi, '');\r\n      fixedSvg.selectAll(`.articleID_${articleId}`)\r\n        .attr('opacity', '1');\r\n      for (let i = 0; i < e.length; i += 1) {\r\n        if (d.article_title[0] === 'R') {\r\n          if (d.article_title.substring(4) === e[i].article_title) {\r\n            const originalId = e[i].article_id.replace(/\\./gi, '');\r\n            fixedSvg.selectAll(`.articleID_${originalId}`)\r\n              .attr('opacity', '1');\r\n            fixedSvg.selectAll(`.repostLink.${originalId}`)\r\n              .attr('opacity', '1');\r\n          }\r\n        } else if (d.article_title === e[i].article_title.substring(4)) {\r\n          const originalId = d.article_id.replace(/\\./gi, '');\r\n          const repostId = e[i].article_id.replace(/\\./gi, '');\r\n          fixedSvg.selectAll(`.articleID_${repostId}`)\r\n            .attr('opacity', '1');\r\n          fixedSvg.selectAll(`.repostLink.${originalId}`)\r\n            .attr('opacity', '1');\r\n        }\r\n      }\r\n    } else {\r\n      Tooltip\r\n        .style('opacity', 1)\r\n        .html(`<p style=\"color: white;\">${e.push_tag} ${e.push_userid}: ${e.push_content} ${e.push_ipdatetime}</p>`)\r\n        .style('left', `${d3.event.pageX + 25}px`)\r\n        .style('top', `${d3.event.pageY + 25}px`);\r\n      d3.select(this)\r\n        .style('stroke', 'black')\r\n        .style('opacity', 1);\r\n    }\r\n  };\r\n  const mouseout = (d, articleId) => {\r\n    console.log(d);\r\n    if (!isClicked) {\r\n      Tooltip\r\n        .style('opacity', 0)\r\n        .style('left', '0px')\r\n        .style('top', '0px');\r\n      fixedSvg.selectAll('.repostLink')\r\n        .attr('opacity', 1);\r\n      fixedSvg.selectAll('.article')\r\n        .attr('opacity', 1);\r\n      fixedSvg.selectAll('.pointer')\r\n        .attr('opacity', 1);\r\n      d3.select(this)\r\n        .style('stroke', 'none')\r\n        .style('opacity', 0.8);\r\n    }\r\n  };\r\n\r\n  const repostLinkMouseOver = d => {\r\n    if (!isClicked) {\r\n      fixedSvg.selectAll('.repostLink')\r\n        .attr('opacity', '0');\r\n      fixedSvg.selectAll('.article')\r\n        .attr('opacity', '0');\r\n      fixedSvg.selectAll('.pointer')\r\n        .attr('opacity', '0');\r\n      const articleId1 = d[0].replace(/\\./gi, '');\r\n      console.log(articleId1);\r\n      fixedSvg.selectAll(`.articleID_${articleId1}`)\r\n        .attr('opacity', '1');\r\n      const articleId2 = d[1].replace(/\\./gi, '');\r\n      fixedSvg.selectAll(`.articleID_${articleId2}`)\r\n        .attr('opacity', '1');\r\n      fixedSvg.selectAll(`#${articleId1}_${articleId2}`)\r\n        .attr('opacity', '1');\r\n    }\r\n  };\r\n\r\n  const userOffset = 0;\r\n\r\n  const fixedSvg = svg.append('g')\r\n    .attr('transform', `translate(${w - userScaleRange - 50}, 100)`);\r\n\r\n  // add gray area for off day\r\n  for (let i = timeScale.domain()[0]; i < timeScale.domain()[1]; i = new Date(i).setDate(new Date(i).getDate() + 1)) {\r\n    if (new Date(i).getDay() > 5 || new Date(i).getDay() < 1) {\r\n      fixedSvg.selectAll()\r\n        .data([i])\r\n        .enter()\r\n        .append('rect')\r\n        .attr('class', 'offday')\r\n        .attr('x', 0)\r\n        .attr('y', d => timeScale(new Date(d)))\r\n        .attr('fill', 'lightgray')\r\n        .attr('width', userScale.range()[1])\r\n        .attr('height', d => {\r\n          const nextDate = new Date(d);\r\n          const temp = new Date(d);\r\n          nextDate.setDate(nextDate.getDate() + 1);\r\n          return timeScale(nextDate) - timeScale(temp);\r\n        });\r\n    } else {\r\n      fixedSvg.selectAll()\r\n        .data([new Date(new Date(new Date(i).setHours(0)).setMinutes(0)).setSeconds(0)])\r\n        .enter()\r\n        .append('rect')\r\n        .attr('class', 'beforWork')\r\n        .attr('x', 0)\r\n        .attr('y', d => timeScale(new Date(d)))\r\n        .attr('fill', 'lightgray')\r\n        .attr('width', userScale.range()[1])\r\n        .attr('height', d => {\r\n          const workHour = new Date(d);\r\n          const temp = new Date(d);\r\n          workHour.setHours(workHour.getHours() + 9);\r\n          return timeScale(workHour) - timeScale(temp);\r\n        });\r\n      fixedSvg.selectAll()\r\n        .data([new Date(new Date(new Date(i).setHours(18)).setMinutes(0)).setSeconds(0)])\r\n        .enter()\r\n        .append('rect')\r\n        .attr('class', 'afterWork')\r\n        .attr('x', 0)\r\n        .attr('y', d => timeScale(new Date(d)))\r\n        .attr('fill', 'lightgray')\r\n        .attr('width', userScale.range()[1])\r\n        .attr('height', d => {\r\n          const midnight = new Date(d);\r\n          const temp = new Date(d);\r\n          midnight.setHours(midnight.getHours() + 6);\r\n          return timeScale(midnight) - timeScale(temp);\r\n        });\r\n    }\r\n  }\r\n  // user axis\r\n  fixedSvg.append('g')\r\n    .attr('class', 'xAxis')\r\n    .call(d3.axisTop(userScale).tickSizeInner([-h]))\r\n    .each((d, index, nodes) => {\r\n      d3.select(nodes[index])\r\n        .selectAll('text')\r\n        .style('text-anchor', 'start')\r\n        .attr('font-size', 14)\r\n        .attr('fill', _d => color[user.find(e => e.id === _d).community](0.8))\r\n        .attr('dx', '0.8em')\r\n        .attr('dy', '0.5em')\r\n        .attr('transform', 'rotate(-45) translate(-5, -10)');\r\n\r\n      d3.select(nodes[index])\r\n        .append('text')\r\n        .text('User accounts')\r\n        .attr('stroke', 'black')\r\n        .attr('font-size', 'small')\r\n        .attr('transform', `translate(${userScale.range()[1] / 2}, -70)`);\r\n    });\r\n\r\n  // date axis\r\n  fixedSvg.append('g')\r\n    .attr('class', 'yAxis')\r\n    .call(d3.axisLeft(timeScale)\r\n      .ticks(d3.timeDay.every(1))\r\n      .tickFormat(d3.timeFormat('%m/%d'))\r\n      .tickSizeInner([100]))\r\n    .selectAll('path')\r\n    .attr('stroke-width', '2px');\r\n\r\n  // article reply by users axis\r\n  // const percentOfUsersReplyScale = d3.scaleLinear().domain(['0%', '25%', '50%', '75%', '100%']).range([0, -80]);\r\n  const percentOfUsersReplyScale = d3.scaleLinear().domain([0, 100]).range([0, -80]);\r\n  fixedSvg.append('g')\r\n    .attr('class', 'xAxis')\r\n    .call(d3.axisTop(percentOfUsersReplyScale)\r\n      .tickSizeOuter([0])\r\n      .tickSizeInner([-h])\r\n      .ticks(3)\r\n      .tickFormat(d => `${d}`))\r\n    .each((d, index, nodes) => {\r\n      d3.select(nodes[index])\r\n        .append('text')\r\n        .text('Reply rate(%)')\r\n        .attr('stroke', 'black')\r\n        .attr('font-size', 'small')\r\n        .attr('transform', `translate(${percentOfUsersReplyScale.range()[1] / 2}, -70)`);\r\n      const horizontalOffset = 10;\r\n      const angleDeg = (Math.atan2(20, horizontalOffset) * 180) / Math.PI;\r\n      d3.select(nodes[index]).selectAll('.tick').selectAll('text')\r\n        .style('text-anchor', 'end')\r\n        .attr('font-size', 14)\r\n        .attr('dx', '0.8em')\r\n        .attr('dy', '0.5em')\r\n        .attr('transform', `rotate(${angleDeg}) translate(-40, 0)`);\r\n      d3.select(nodes[index]).selectAll('.tick')\r\n        .append('line')\r\n        .attr('stroke', 'black')\r\n        .attr('x1', -horizontalOffset)\r\n        .attr('y1', -20)\r\n        .attr('x2', 0)\r\n        .attr('y2', 0);\r\n    });\r\n\r\n  const legendsGroup = fixedSvg.append('g')\r\n    .attr('transform', 'translate(0, -30)');\r\n  // legend\r\n  legendsGroup.append('circle')\r\n    .attr('cx', -80)\r\n    .attr('cy', h + 45)\r\n    .attr('r', 5)\r\n    .attr('fill', color[0](0.7));\r\n  legendsGroup.append('text')\r\n    .text('Article')\r\n    .attr('x', -70)\r\n    .attr('y', h + 50);\r\n  legendsGroup.append('circle')\r\n    .attr('cx', 10)\r\n    .attr('cy', h + 45)\r\n    .attr('r', 5)\r\n    .attr('fill', commentTypeColor('推'));\r\n  legendsGroup.append('text')\r\n    .text('push')\r\n    .attr('x', 20)\r\n    .attr('y', h + 50);\r\n  legendsGroup.append('circle')\r\n    .attr('cx', 70)\r\n    .attr('cy', h + 45)\r\n    .attr('r', 5)\r\n    .attr('fill', commentTypeColor('→'));\r\n  legendsGroup.append('text')\r\n    .text('→')\r\n    .attr('x', 80)\r\n    .attr('y', h + 50);\r\n  legendsGroup.append('circle')\r\n    .attr('cx', 120)\r\n    .attr('cy', h + 45)\r\n    .attr('r', 5)\r\n    .attr('fill', commentTypeColor('噓'));\r\n  legendsGroup.append('text')\r\n    .text('boo')\r\n    .attr('x', 130)\r\n    .attr('y', h + 50);\r\n\r\n  legendsGroup.append('text')\r\n    .text('White area: weekday 9:00 - 18:00')\r\n    .attr('x', 10)\r\n    .attr('y', h + 70);\r\n  // add repost link\r\n  const pointerScale = d3.scaleLinear().domain([0, userID.length]).range([0, 10]);\r\n  const pointerOffset = d3.scaleLinear().domain([0, userID.length]).range([0, -80]);\r\n  const sortedArticles = data.sort((a, b) => new Date(a.date) - new Date(b.date))\r\n    .filter(art => art.messages.some(mes => userID.includes(mes.push_userid)));\r\n  // console.log(sortedArticles);\r\n  const curveOffset = d3.scaleLinear().domain([0, 610]).range([-30, -100]);\r\n  for (let i = 0; i < sortedArticles.length; i += 1) {\r\n    for (let j = i + 1; j < sortedArticles.length; j += 1) {\r\n      if (!sortedArticles[i].article_title || !sortedArticles[j].article_title) break;\r\n      if (sortedArticles[i].article_title === sortedArticles[j].article_title.substring(4)) {\r\n        const y1 = timeScale(new Date(sortedArticles[i].date));\r\n        const y2 = timeScale(new Date(sortedArticles[j].date));\r\n        const articleId1 = sortedArticles[i].article_id.replace(/\\./gi, '');\r\n        const articleId2 = sortedArticles[j].article_id.replace(/\\./gi, '');\r\n        const includesUser1 = [];\r\n        sortedArticles[i].messages.forEach(mes => {\r\n          if (userID.includes(mes.push_userid)) {\r\n            if (!includesUser1.includes(mes.push_userid)) {\r\n              includesUser1.push(mes.push_userid);\r\n            }\r\n          }\r\n        });\r\n        const includesUser2 = [];\r\n        sortedArticles[j].messages.forEach(mes => {\r\n          if (userID.includes(mes.push_userid)) {\r\n            if (!includesUser2.includes(mes.push_userid)) {\r\n              includesUser2.push(mes.push_userid);\r\n            }\r\n          }\r\n        });\r\n        const line = d3.line()\r\n          .curve(d3.curveBasis)\r\n          .x(d => d.x)\r\n          .y(d => d.y);\r\n        fixedSvg.append('path')\r\n          .attr('class', `repostLink ${articleId1}`)\r\n          .attr('id', `${articleId1}_${articleId2}`)\r\n          .attr('d', line([\r\n            { x: pointerOffset(includesUser1.length), y: y1 },\r\n            { x: Math.min(pointerOffset(includesUser1.length) - 20, pointerOffset(includesUser2.length) - 20), y: (y1 + y2) / 2 },\r\n            { x: pointerOffset(includesUser2.length), y: y2 },\r\n          ]))\r\n          .attr('stroke', 'gray')\r\n          .attr('stroke-width', '4px')\r\n          .attr('fill', 'none')\r\n          .on('mouseover', () => repostLinkMouseOver([sortedArticles[i].article_id, sortedArticles[j].article_id]))\r\n          .on('mouseout', mouseout);\r\n      }\r\n    }\r\n  }\r\n\r\n  // add article pointers\r\n  for (let i = 0; i < data.length; i += 1) {\r\n    if (data[i].messages.some(mes => userID.includes(mes.push_userid))) {\r\n      const articleId = data[i].article_id.replace(/\\./gi, '');\r\n      const includesUser = [];\r\n      data[i].messages.forEach(mes => {\r\n        if (userID.includes(mes.push_userid)) {\r\n          if (!includesUser.includes(mes.push_userid)) {\r\n            includesUser.push(mes.push_userid);\r\n          }\r\n        }\r\n      });\r\n      fixedSvg.append('g')\r\n        .attr('class', `pointer articleID_${articleId}`)\r\n        .attr('transform', 'translate(0, 0)')\r\n        .selectAll()\r\n        .data([data[i]])\r\n        .enter()\r\n        .each((d, index, nodes) => {\r\n          d3.select(nodes[index]).append('rect')\r\n            .attr('y', _d => {\r\n              const postTime = new Date(_d.date);\r\n              return timeScale(postTime);\r\n            })\r\n            .attr('opacity', _d => {\r\n              const postTime = new Date(_d.date);\r\n              return timeScale(postTime) < h ? 1 : 0;\r\n            })\r\n            .attr('x', pointerOffset(includesUser.length))\r\n            .attr('width', -pointerOffset(includesUser.length))\r\n            .attr('height', 2)\r\n            .style('fill', color[0](0.8))\r\n            .on('mouseover', _d => mouseover(_d, data))\r\n            .on('mouseout', mouseout);\r\n          d3.select(nodes[index]).append('circle')\r\n            .attr('cy', _d => {\r\n              const postTime = new Date(_d.date);\r\n              return timeScale(postTime) + 1;\r\n            })\r\n            .attr('opacity', _d => {\r\n              const postTime = new Date(_d.date);\r\n              return timeScale(postTime) < h ? 1 : 0;\r\n            })\r\n            .attr('cx', pointerOffset(includesUser.length))\r\n            // .attr('r', pointerScale(includesUser.length))\r\n            .attr('r', 5)\r\n            .attr('stroke', 'black')\r\n            .attr('stroke-width', _d => {\r\n              if (!_d.article_title) return '0px';\r\n              return _d.article_title[0] !== 'R' ? '2px' : '0px';\r\n            })\r\n            .style('fill', color[0](0.8))\r\n            .on('mouseover', _d => mouseover(_d, data))\r\n            .on('mouseout', mouseout)\r\n            .on('click', click);\r\n        });\r\n\r\n      const postYear = new Date(data[i].date).getFullYear();\r\n      const filteredMessages = data[i].messages.filter(e => userID.includes(e.push_userid));\r\n      fixedSvg.append('g')\r\n        .attr('class', `article articleID_${articleId}`)\r\n        .selectAll()\r\n        .data(filteredMessages)\r\n        .enter()\r\n        .append('circle')\r\n        .attr('cy', (d, index) => {\r\n          const date = dateFormat(d);\r\n          const commentTime = new Date(new Date(date).setFullYear(postYear));\r\n          return timeScale(commentTime);\r\n          // const postTime = new Date(data[i].date);\r\n          // return timeScale(postTime);\r\n        })\r\n        .attr('opacity', (d, index) => {\r\n          const date = dateFormat(d);\r\n          const commentTime = new Date(new Date(date).setFullYear(postYear));\r\n          return timeScale(commentTime) < h ? 1 : 0;\r\n          // const postTime = new Date(data[i].date);\r\n          // return timeScale(postTime);\r\n        })\r\n        .attr('cx', d => userScale(d.push_userid) + userScale.bandwidth() / 2)\r\n        .attr('r', 4)\r\n        // .attr('width', userScale.bandwidth())\r\n        .style('fill', d => commentTypeColor(d.push_tag))\r\n        .attr('stroke', 'black')\r\n        .on('mouseover', d => mouseover(data[i], d))\r\n        .on('mouseout', mouseout)\r\n        .on('click', click);\r\n    }\r\n  }\r\n\r\n  function tooltipForArticle(d) {\r\n    const date = new Date(d.date);\r\n    Tooltip\r\n      .style('opacity', 1)\r\n      .html(`<p style=\"color: white;\">Title: ${d.article_title}<br>\r\n        Date: ${date.getFullYear()}/${date.getMonth() + 1}/${date.getDate()} ${date.getHours()}:${date.getMinutes()}<br>\r\n        <a href=\"${d.url}\" target=\"_blank\" style=\"color: cornflowerblue;\">Go To Post Page</a></p>`)\r\n      .style('left', `${d3.event.pageX + 25}px`)\r\n      .style('top', `${d3.event.pageY - 130}px`);\r\n  }\r\n  function computeUserListByReplyCountPerHours(d, u) {\r\n    const userList = [];\r\n    u.forEach(e => {\r\n      userList.push({ id: e, time: [] });\r\n    });\r\n    d.forEach(article => {\r\n      article.messages.forEach(mes => {\r\n        const userIndex = userList.findIndex(e => e.id === mes.push_userid);\r\n        if (userIndex !== -1) {\r\n          // console.log(userIndex);\r\n          const date = new Date(mes.push_ipdatetime).getDate();\r\n          const month = new Date(mes.push_ipdatetime).getMonth();\r\n          const hours = new Date(mes.push_ipdatetime).getHours();\r\n          const pushTime = `${month}/${date}/${hours}`;\r\n          const timeIndex = userList[userIndex].time.findIndex(e => e.pushTime === pushTime);\r\n          if (timeIndex !== -1) {\r\n            userList[userIndex].time[timeIndex].reply.push(mes);\r\n          } else {\r\n            userList[userIndex].time.push({\r\n              pushTime,\r\n              month,\r\n              hours,\r\n              date,\r\n              reply: [mes],\r\n            });\r\n          }\r\n        }\r\n      });\r\n    });\r\n    // console.log(userList);\r\n    userList.forEach(e => {\r\n      if (!e.time[0]) e.totalDate = 0;\r\n      else {\r\n        const earliestDate = new Date(`${e.time[0].month}/${e.time[0].date}`);\r\n        const latestDate = new Date(`${e.time[e.time.length - 1].month}/${e.time[e.time.length - 1].date}`);\r\n        const diffTime = Math.abs(latestDate - earliestDate);\r\n        const diffDays = Math.ceil(diffTime / (1000 * 60 * 60 * 24));\r\n        e.totalDate = diffDays;\r\n      }\r\n    });\r\n    return userList;\r\n  }\r\n  function oneToNArray(n) {\r\n    const arr = [];\r\n    for (let i = 0; i < n; i += 1) {\r\n      arr.push(i);\r\n    }\r\n    return arr;\r\n  }\r\n  function getYDomain(be, en) {\r\n    const beginDate = new Date(be);\r\n    const endDate = new Date(en);\r\n    // console.log(beginDate, endDate);\r\n    const diffTime = Math.abs(endDate - beginDate);\r\n    const diffDays = Math.ceil(diffTime / (1000 * 60 * 60 * 24));\r\n    const month = beginDate.getMonth();\r\n    const date = beginDate.getDate();\r\n    const arr = [];\r\n    arr.push(`${beginDate.getMonth() + 1}/${beginDate.getDate()}`);\r\n    for (let i = 0; i < diffDays + 3; i += 1) {\r\n      const tempDate = new Date(beginDate.setDate(beginDate.getDate() + 1));\r\n      // console.log(tempDate);\r\n      arr.push(`${tempDate.getMonth() + 1}/${tempDate.getDate()}`);\r\n    }\r\n    return arr;\r\n  }\r\n  function getXScale() {\r\n    const totalMinutes = 60 * 24;\r\n    return d3.scaleTime().domain([0, totalMinutes]).range([100, 1000]);\r\n  }\r\n  function dateFormat(mes) {\r\n    let dat = '';\r\n    const splitedDate = mes.push_ipdatetime.split(' ');\r\n    if (splitedDate.length === 3) {\r\n      dat = dat.concat('', splitedDate[1]);\r\n      dat = dat.concat(' ', splitedDate[2]);\r\n      return dat;\r\n    }\r\n    return mes.push_ipdatetime;\r\n  }\r\n  function commentTypeColor(tag) {\r\n    switch (tag) {\r\n      case '推':\r\n        return pushTypeColor[4];\r\n      case '噓':\r\n        return pushTypeColor[2];\r\n      case '→':\r\n        return pushTypeColor[5];\r\n      default:\r\n        return 'black';\r\n    }\r\n  }\r\n  function update(date1, date2) {\r\n    timeScale.domain([new Date(date1), new Date(date2)]);\r\n    if (isClicked) {\r\n      const article = data.find(e => e.article_id === isClicked);\r\n      const postYear = new Date(article.date).getFullYear();\r\n      fixedSvg.selectAll('.commentTime')\r\n        .attr('cy', d => {\r\n          const date = dateFormat(d);\r\n          const commentTime = new Date(new Date(date).setFullYear(postYear));\r\n          return timeScale(commentTime);\r\n        })\r\n        .attr('opacity', d => {\r\n          const date = dateFormat(d);\r\n          const commentTime = new Date(new Date(date).setFullYear(postYear));\r\n          return timeScale(commentTime) < h && timeScale(commentTime) > 0 ? 1 : 0;\r\n        });\r\n    }\r\n    // update offday rect\r\n    fixedSvg.selectAll('.offday')\r\n      .attr('y', d => (timeScale(new Date(d)) > 0 ? timeScale(new Date(d)) : 0))\r\n      .attr('height', d => {\r\n        const nextDate = new Date(d);\r\n        const tempDate = new Date(d);\r\n        nextDate.setDate(nextDate.getDate() + 1);\r\n        const tempDatePos = timeScale(tempDate) > 0 ? timeScale(tempDate) : 0;\r\n        const nextDatePos = timeScale(nextDate) < h ? timeScale(nextDate) : h;\r\n        return Math.max(0, nextDatePos - tempDatePos);\r\n      })\r\n      .attr('opacity', d => (timeScale(new Date(d)) < h ? 1 : 0));\r\n    // update beforeWorl rect\r\n    fixedSvg.selectAll('.beforWork')\r\n      .attr('y', d => (timeScale(new Date(d)) > 0 ? timeScale(new Date(d)) : 0))\r\n      .attr('height', d => {\r\n        const workHour = new Date(d);\r\n        const tempDate = new Date(d);\r\n        workHour.setHours(workHour.getHours() + 9);\r\n        const tempDatePos = timeScale(tempDate) > 0 ? timeScale(tempDate) : 0;\r\n        const workHourPos = timeScale(workHour) < h ? timeScale(workHour) : h;\r\n        return Math.max(0, workHourPos - tempDatePos);\r\n      })\r\n      .attr('opacity', d => (timeScale(new Date(d)) < h ? 1 : 0));\r\n    // update afterWork rect\r\n    fixedSvg.selectAll('.afterWork')\r\n      .attr('y', d => (timeScale(new Date(d)) > 0 ? timeScale(new Date(d)) : 0))\r\n      .attr('height', d => {\r\n        const workHour = new Date(d);\r\n        const tempDate = new Date(d);\r\n        workHour.setHours(workHour.getHours() + 6);\r\n        const tempDatePos = timeScale(tempDate) > 0 ? timeScale(tempDate) : 0;\r\n        const workHourPos = timeScale(workHour) < h ? timeScale(workHour) : h;\r\n        return Math.max(0, workHourPos - tempDatePos);\r\n      })\r\n      .attr('opacity', d => (timeScale(new Date(d)) < h ? 1 : 0));\r\n    // fixedSvg.selectAll('path').remove();\r\n    // const updateYScale = d3.scaleTime().domain([new Date(date1), new Date(date2)]).range([0, h]);\r\n    const updateXScale = d3.scaleBand().domain(userID).range([0, userScaleRange]);\r\n    // const curveOffset = d3.scaleLinear().domain([0, 610]).range([-30, -100]);\r\n    const filteredSortedArticles = sortedArticles.filter(e => new Date(date1) < new Date(e.date) && new Date(date2) > new Date(e.date));\r\n    // update reposting link\r\n    fixedSvg.selectAll('path.repostLink').attr('visibility', 'hidden');\r\n    for (let i = 0; i < filteredSortedArticles.length; i += 1) {\r\n      for (let j = i + 1; j < filteredSortedArticles.length; j += 1) {\r\n        if (!filteredSortedArticles[i].article_title || !filteredSortedArticles[j].article_title) break;\r\n        if (filteredSortedArticles[i].article_title === filteredSortedArticles[j].article_title.substring(4)) {\r\n          const y1 = timeScale(new Date(filteredSortedArticles[i].date));\r\n          const y2 = timeScale(new Date(filteredSortedArticles[j].date));\r\n          const articleId1 = filteredSortedArticles[i].article_id.replace(/\\./gi, '');\r\n          const articleId2 = filteredSortedArticles[j].article_id.replace(/\\./gi, '');\r\n          const includesUser1 = [];\r\n          filteredSortedArticles[i].messages.forEach(mes => {\r\n            if (userID.includes(mes.push_userid)) {\r\n              if (!includesUser1.includes(mes.push_userid)) {\r\n                includesUser1.push(mes.push_userid);\r\n              }\r\n            }\r\n          });\r\n          const includesUser2 = [];\r\n          filteredSortedArticles[j].messages.forEach(mes => {\r\n            if (userID.includes(mes.push_userid)) {\r\n              if (!includesUser2.includes(mes.push_userid)) {\r\n                includesUser2.push(mes.push_userid);\r\n              }\r\n            }\r\n          });\r\n          const line = d3.line()\r\n            .curve(d3.curveBasis)\r\n            .x(d => d.x)\r\n            .y(d => d.y);\r\n          fixedSvg.select(`path#${articleId1}_${articleId2}`)\r\n            .attr('visibility', 'visible')\r\n            .attr('d', line([\r\n              { x: pointerOffset(includesUser1.length), y: y1 },\r\n              { x: Math.min(pointerOffset(includesUser1.length) - 20, pointerOffset(includesUser2.length) - 20) - 20, y: (y1 + y2) / 2 },\r\n              { x: pointerOffset(includesUser2.length), y: y2 },\r\n            ]));\r\n        }\r\n      }\r\n    }\r\n    if (original_date1 < new Date(date1) || original_date2 > new Date(date2)) {\r\n      filteredArticles.forEach(art => {\r\n        const article_id = art.article_id.replace(/\\./gi, '');\r\n        fixedSvg.selectAll(`.articleID_${article_id}`)\r\n          .each((d, index, nodes) => {\r\n            if (d3.select(nodes[index]).attr('class')[0] === 'p') {\r\n              // article pointers\r\n              if (new Date(art.date) > new Date(date1) && new Date(art.date) < new Date(date2)) {\r\n                d3.select(nodes[index])\r\n                  .attr('visibility', 'visible')\r\n                  .selectAll('rect')\r\n                  .attr('y', _d => timeScale(new Date(_d.date)))\r\n                  .attr('opacity', _d => (timeScale(new Date(_d.date)) < h && timeScale(new Date(_d.date)) > 0 ? 1 : 0));\r\n                d3.select(nodes[index])\r\n                  .selectAll('circle')\r\n                  .attr('cy', _d => timeScale(new Date(_d.date)) + 1)\r\n                  .attr('opacity', _d => (timeScale(new Date(_d.date)) < h && timeScale(new Date(_d.date)) > 0 ? 1 : 0));\r\n              } else {\r\n                d3.select(nodes[index])\r\n                  .attr('visibility', 'hidden');\r\n              }\r\n            } else {\r\n              // user activities\r\n              const postYear = new Date(art.date).getFullYear();\r\n              const beginDateMinusTwo = new Date(date1);\r\n              beginDateMinusTwo.setDate(beginDateMinusTwo.getDate() - 2);\r\n              if (new Date(art.date) > beginDateMinusTwo && new Date(art.date) < new Date(date2)) {\r\n                d3.select(nodes[index])\r\n                  .attr('visibility', 'visible')\r\n                  .selectAll('circle')\r\n                  .attr('cy', (e, i) => {\r\n                    const date = dateFormat(e);\r\n                    const commentTime = new Date(new Date(date).setFullYear(postYear));\r\n                    return timeScale(commentTime);\r\n                    // const postDate = new Date(art.date);\r\n                    // return timeScale(postDate);\r\n                  })\r\n                  .attr('opacity', (e, i) => {\r\n                    const date = dateFormat(e);\r\n                    const commentTime = new Date(new Date(date).setFullYear(postYear));\r\n                    return timeScale(commentTime) < h && timeScale(commentTime) > 0 ? 1 : 0;\r\n                    // const postDate = new Date(art.date);\r\n                    // return timeScale(postDate) < h && timeScale(postDate) > 0 ? 1 : 0;\r\n                  });\r\n              } else {\r\n                d3.select(nodes[index])\r\n                  .attr('visibility', 'hidden');\r\n              }\r\n            }\r\n          });\r\n      });\r\n    } else {\r\n      // article pointers\r\n      fixedSvg.selectAll('.pointer')\r\n        .each((d, index, nodes) => {\r\n          const article_id = d3.select(nodes[index]).attr('class').slice(18);\r\n          const article = data.find(e => e.article_id.replace(/\\./gi, '') === article_id);\r\n          if (new Date(article.date) > new Date(date1) && new Date(article.date) < new Date(date2)) {\r\n            d3.select(nodes[index])\r\n              .attr('visibility', 'visible')\r\n              .selectAll('rect')\r\n              .attr('y', _d => timeScale(new Date(_d.date)))\r\n              .attr('opacity', _d => (timeScale(new Date(_d.date)) < h && timeScale(new Date(_d.date)) > 0 ? 1 : 0));\r\n            d3.select(nodes[index])\r\n              .selectAll('circle')\r\n              .attr('cy', _d => timeScale(new Date(_d.date)) + 1)\r\n              .attr('opacity', _d => (timeScale(new Date(_d.date)) < h && timeScale(new Date(_d.date)) > 0 ? 1 : 0));\r\n          } else {\r\n            d3.select(nodes[index])\r\n              .attr('visibility', 'hidden');\r\n          }\r\n        });\r\n      // user activities\r\n      fixedSvg.selectAll('.article')\r\n        .each((d, index, nodes) => {\r\n          const article_id = d3.select(nodes[index]).attr('class').slice(18);\r\n          const article = data.find(e => e.article_id.replace(/\\./gi, '') === article_id);\r\n          const postYear = new Date(article.date).getFullYear();\r\n          const beginDateMinusTwo = new Date(date1);\r\n          beginDateMinusTwo.setDate(beginDateMinusTwo.getDate() - 2);\r\n          if (new Date(article.date) > beginDateMinusTwo && new Date(article.date) < new Date(date2)) {\r\n            d3.select(nodes[index])\r\n              .attr('visibility', 'visible')\r\n              .selectAll('circle')\r\n              .attr('cy', (_d, _index) => {\r\n                const date = dateFormat(_d);\r\n                const commentTime = new Date(new Date(date).setFullYear(postYear));\r\n                return timeScale(commentTime);\r\n                // const postDate = new Date(article.date);\r\n                // return timeScale(postDate);\r\n              })\r\n              .attr('opacity', (_d, _index) => {\r\n                const date = dateFormat(_d);\r\n                const commentTime = new Date(new Date(date).setFullYear(postYear));\r\n                return timeScale(commentTime) < h && timeScale(commentTime) > 0 ? 1 : 0;\r\n                // const postDate = new Date(article.date);\r\n                // return timeScale(postDate) < h && timeScale(postDate) > 0 ? 1 : 0;\r\n              });\r\n          } else {\r\n            d3.select(nodes[index])\r\n              .attr('visibility', 'hidden');\r\n          }\r\n        });\r\n    }\r\n\r\n    filteredArticles = data.filter(e => {\r\n      const beginDateMinusTwo = new Date(date1);\r\n      beginDateMinusTwo.setDate(beginDateMinusTwo.getDate() - 2);\r\n      return new Date(beginDateMinusTwo) < new Date(e.date) && new Date(date2) > new Date(e.date);\r\n    });\r\n\r\n    // fixedSvg.select('.xAxis')\r\n    //   .call(d3.axisTop(updateXScale).tickSizeInner([-h]))\r\n    //   .attr('stroke-width', '0.5px');\r\n    const aDay = 60 * 60 * 24 * 1000;\r\n    if ((date2 - date1) / aDay <= 1) {\r\n      fixedSvg.select('.yAxis')\r\n        .call(d3.axisLeft(timeScale).tickFormat(d3.timeFormat('%H:%M')).tickSizeInner([40]));\r\n    } else if ((date2 - date1) / aDay < 5) {\r\n      fixedSvg.select('.yAxis')\r\n        .call(d3.axisLeft(timeScale).ticks(d3.timeDay.every(1)).tickFormat(d3.timeFormat('%m/%d %H:%M')).tickSizeInner([40]));\r\n    } else if ((date2 - date1) / aDay < 15) {\r\n      fixedSvg.select('.yAxis')\r\n        .call(d3.axisLeft(timeScale).ticks(d3.timeDay.every(3)).tickFormat(d3.timeFormat('%m/%d')).tickSizeInner([40]));\r\n    } else if ((date2 - date1) / aDay < 30) {\r\n      fixedSvg.select('.yAxis')\r\n        .call(d3.axisLeft(timeScale).ticks(d3.timeDay.every(5)).tickFormat(d3.timeFormat('%m/%d')).tickSizeInner([40]));\r\n    } else if ((date2 - date1) / aDay < 60) {\r\n      fixedSvg.select('.yAxis')\r\n        .call(d3.axisLeft(timeScale).ticks(d3.timeDay.every(10)).tickFormat(d3.timeFormat('%m/%d')).tickSizeInner([40]));\r\n    } else {\r\n      fixedSvg.select('.yAxis')\r\n        .call(d3.axisLeft(timeScale).ticks(d3.timeDay.every(1)).tickFormat(d3.timeFormat('%m/%d')).tickSizeInner([40]));\r\n    }\r\n    // fixedSvg.selectAll('path').remove();\r\n  }\r\n}\r\n\r\nexport { timelineView };\r\n","/* eslint-disable no-console */\r\n/* eslint-disable no-use-before-define */\r\n/* eslint-disable no-unused-vars */\r\n/* eslint-disable max-len */\r\n// @flow\r\nimport * as d3 from 'd3';\r\nimport * as science from 'science';\r\nimport * as Queue from 'tiny-queue';\r\nimport * as reorder from 'reorder.js';\r\nimport jLouvain from '../jLouvain';\r\n\r\ntype ArticleObjType = {\r\n  article_id: string,\r\n  article_title: string\r\n};\r\n\r\ntype UserObjType = {\r\n  id: string,\r\n  community: number,\r\n  repliedArticle: Array<ArticleObjType>\r\n};\r\n\r\ntype SimilarityObjType = {\r\n  source: string,\r\n  target: string,\r\n  value: number,\r\n  weight?: number\r\n};\r\n\r\ntype CommunityObjType = {\r\n  id: string,\r\n  community: number\r\n};\r\n\r\ntype WordObjType = {\r\n  word: string,\r\n  score: number,\r\n  push: number,\r\n  boo: number,\r\n  neutral: number\r\n};\r\n\r\ntype CommunityWordObjType = {\r\n  community: number,\r\n  wordList: Array<WordObjType>\r\n};\r\n\r\ndeclare type NestedArray<T> = Array<T | NestedArray<T>>;\r\n\r\n\r\nfunction computeUserSimilarityByArticles(userAuthorRelationShipArr: Array<UserObjType>): Array<SimilarityObjType> {\r\n  const similarityScale = d3.scaleLinear().domain([0, 2]).range([1, 0]);\r\n  const userListArray = [];\r\n  for (let i = 0; i < userAuthorRelationShipArr.length - 1; i += 1) {\r\n    const temp = userAuthorRelationShipArr[i].repliedArticle;\r\n    for (let j = i + 1; j < userAuthorRelationShipArr.length; j += 1) {\r\n      const next = userAuthorRelationShipArr[j].repliedArticle;\r\n      const tempdiff = temp.filter(\r\n        (o1: ArticleObjType): boolean => next.filter((o2: ArticleObjType): boolean => o2.article_id === o1.article_id).length === 0,\r\n      );\r\n      const nextdiff = next.filter(\r\n        (o1: ArticleObjType): boolean => temp.filter((o2: ArticleObjType): boolean => o2.article_id === o1.article_id).length === 0,\r\n      );\r\n      const intersectArticles = temp.length - tempdiff.length;\r\n      const nextintersectArticles = next.length - nextdiff.length;\r\n      const sim = intersectArticles / (temp.length + next.length - intersectArticles);\r\n      userListArray.push({\r\n        source: userAuthorRelationShipArr[i].id,\r\n        target: userAuthorRelationShipArr[j].id,\r\n        value: sim,\r\n      });\r\n    }\r\n  }\r\n  return userListArray;\r\n}\r\n\r\nfunction computeArticleSimilarity(userArr: Array<UserObjType>): Array<Array<ArticleObjType>, Array<SimilarityObjType>> {\r\n  const articleArray: Array<ArticleObjType> = [];\r\n  userArr.forEach((u: UserObjType) => {\r\n    u.repliedArticle.forEach((a: ArticleObjType) => {\r\n      const existedArticle = articleArray.find((e: ArticleObjType): boolean => e.article_id === a.article_id);\r\n      if (!existedArticle) {\r\n        articleArray.push({ ...a, userCommuniy: [u.community] });\r\n      } else {\r\n        existedArticle.userCommuniy.push(u.community);\r\n      }\r\n    });\r\n  });\r\n  // use userCommunity\r\n  const array = [];\r\n  for (let i = 0; i < articleArray.length; i += 1) {\r\n    const temp = JSON.parse(JSON.stringify(articleArray[i]));\r\n    for (let j = i + 1; j < articleArray.length; j += 1) {\r\n      const next = JSON.parse(JSON.stringify(articleArray[j]));\r\n      const intersect = [];\r\n      const union = [];\r\n      temp.userCommuniy.forEach((c: number) => {\r\n        const existed = next.userCommuniy.findIndex((e: number): boolean => e === c);\r\n        union.push(c);\r\n        if (existed >= 0) {\r\n          intersect.push(c);\r\n          next.userCommuniy.splice(existed, 1);\r\n        }\r\n      });\r\n      union.push(...next.userCommuniy);\r\n      const sim = intersect.length / union.length;\r\n      if (sim) {\r\n        array.push({\r\n          source: temp.article_id,\r\n          target: next.article_id,\r\n          value: sim,\r\n        });\r\n      }\r\n    }\r\n  }\r\n  return [articleArray, array];\r\n}\r\n\r\nfunction jLouvainClustering(nodes: Array<string>, edges: Array<SimilarityObjType>): Array<CommunityObjType> | boolean {\r\n  if (!nodes) return false;\r\n  const edgeData = edges.map((e: SimilarityObjType): SimilarityObjType => {\r\n    e.weight = e.value * 10;\r\n    return e;\r\n  });\r\n\r\n  // console.log('Input Node Data2', nodes);\r\n  // console.log('Input Edge Data2', edgeData);\r\n\r\n  const nodeData3 = [];\r\n  for (let i = 0; i < nodes.length; i += 1) {\r\n    nodeData3.push(i);\r\n  }\r\n  let edgeData3 = [];\r\n  edgeData3 = edges.map((e: SimilarityObjType): SimilarityObjType => {\r\n    const s = nodes.findIndex((d: string): boolean => d === e.source);\r\n    const t = nodes.findIndex((d: string): boolean => d === e.target);\r\n    return { source: s, target: t, weight: e.weight };\r\n  });\r\n\r\n  // console.log('Input Node Data3', nodeData3);\r\n  // console.log('Input Edge Data3', edgeData3);\r\n\r\n  const community3 = jLouvain().nodes(nodeData3).edges(edgeData3);\r\n  // console.log(community3());\r\n  // Drawing code\r\n  const originalNodeData = d3.entries(nodes);\r\n  // console.log(originalNodeData);\r\n\r\n  const forceSimulation = d3.forceSimulation()\r\n    .force('link', d3.forceLink().id(d => d.key));\r\n  forceSimulation\r\n    .nodes(originalNodeData);\r\n\r\n  forceSimulation\r\n    .force('link')\r\n    .links(edgeData3);\r\n  // Communnity detection on click event\r\n  const communityAssignmentResult = community3();\r\n  // console.log(originalNodeData);\r\n  // console.log('Resulting Community Data', communityAssignmentResult);\r\n  const final = [];\r\n  const keys = Object.keys(communityAssignmentResult);\r\n  for (let i = 0; i < keys.length; i += 1) {\r\n    final.push({ id: nodes[keys[i]], community: communityAssignmentResult[keys[i]] });\r\n  }\r\n  // console.log('node after clustering', final);\r\n  for (let i = 0; i < 100; i += 1) {\r\n    const countForCom = [];\r\n    for (let j = 0; j < final.length; j += 1) {\r\n      const existed = countForCom.find(e => e.community === final[j].community);\r\n      if (existed) existed.count += 1;\r\n      else countForCom.push({ community: final[j].community, count: 1 });\r\n    }\r\n    console.log(`communityCount: ${countForCom.length} mergeCount: ${i + 1}`);\r\n    if (countForCom.length > 50) {\r\n      const filtered = countForCom.filter(e => e.count <= (i + 1));\r\n      final.forEach((e) => {\r\n        e.community = filtered.some(e1 => e1.community === e.community) ? filtered[0].community : e.community;\r\n      });\r\n    } else {\r\n      break;\r\n    }\r\n  }\r\n  return final;\r\n}\r\n\r\nfunction filterAlwaysNonSimilarUser(ds: Array<UserObjType>, us: Array<string>, sims: Array<SimilarityObjType>, simTh: number, artTh: number): Array<Array<UserObjType>, Array<string>, Array<SimilarityObjType>> {\r\n  let copyDs = ds.filter((e: UserObjType): boolean => e.repliedArticle.length > artTh);\r\n  const copyUsers = ds.map((e: UserObjType): string => e.id);\r\n  const isBelowThreshold = (currentValue: number): boolean => currentValue.value < simTh;\r\n  let removeUnusedSims = sims.filter((e1: SimilarityObjType): boolean => copyUsers.includes(e1.source) && copyUsers.includes(e1.target));\r\n  copyUsers.forEach((e: string) => {\r\n    const filteredSimilarity = removeUnusedSims.filter((e1: SimilarityObjType): boolean => e1.source === e || e1.target === e);\r\n    // console.log(e, filteredSimilarity);\r\n    if (filteredSimilarity.filter((e1: SimilarityObjType): boolean => e1.source !== e1.target).every(isBelowThreshold)) {\r\n    //   console.log('underthreshold');\r\n      removeUnusedSims = removeUnusedSims.filter((e1: SimilarityObjType): boolean => !(e1.source === e || e1.target === e));\r\n      copyDs = copyDs.filter((e1: string): boolean => e1.id !== e);\r\n      copyDs = copyDs.filter((e1: string): boolean => e1 !== e);\r\n    }\r\n  });\r\n  const filteredDs = copyDs;\r\n  const filteredUs = filteredDs.map((e: UserObjType): string => e.id);\r\n  const filteredSim = removeUnusedSims.filter((e: SimilarityObjType): boolean => filteredDs.some((e1: UserObjType): boolean => e1.id === e.source) && filteredDs.some((e1: UserObjType): boolean => e1.id === e.target));\r\n  return [filteredDs, filteredUs, filteredSim];\r\n}\r\n\r\nfunction computeCommunityTitleWordScore(userList: Array<UserObjType>): Array<CommunityWordObjType> {\r\n  if (!userList[0].titleWordScore) return [];\r\n  const communityWordArr = [];\r\n  const comNums = Math.max(...userList.map(e => e.community)) + 1;\r\n  for (let i = 0; i < comNums; i += 1) {\r\n    communityWordArr.push({ community: i, wordList: [] });\r\n  }\r\n  userList.forEach((usr) => {\r\n    // user's communty\r\n    const usrCom = communityWordArr.find(e => e.community === usr.community);\r\n    // user's top-50 words\r\n    const filteredTitleWord = usr.titleWordScore.filter((e, index) => index < 50);\r\n    // total number of words which user has used\r\n    const usrTotalWordCount = filteredTitleWord.reduce((acc, obj) => acc + obj.score, 0);\r\n    // user's replied articles\r\n    const repliedArticles = usr.repliedArticle;\r\n    usr.titleWordScore.every((e: {word: string, score: number}, index: number): boolean => {\r\n      let push = 0;\r\n      let boo = 0;\r\n      let neutral = 0;\r\n      repliedArticles.forEach((art) => {\r\n        if (art.cuttedTitle.some(w => w.word === e.word)) {\r\n          const mes = art.messages.filter(m => m.push_userid === usr.id);\r\n          push += mes.filter(m => m.push_tag === '推').length;\r\n          boo += mes.filter(m => m.push_tag === '噓').length;\r\n          neutral += mes.filter(m => m.push_tag === '→').length;\r\n        }\r\n      });\r\n      const existedWord = usrCom.wordList.find(c => c.word === e.word);\r\n      if (existedWord) {\r\n        existedWord.score += (e.score / usrTotalWordCount);\r\n        existedWord.push += push;\r\n        existedWord.boo += boo;\r\n        existedWord.neutral += neutral;\r\n      } else {\r\n        usrCom.wordList.push({\r\n          word: e.word, score: e.score / usrTotalWordCount, push, boo, neutral,\r\n        });\r\n      }\r\n      return index < (50 - 1);\r\n    });\r\n  });\r\n\r\n  // each score divide by the number of the user of the community\r\n  communityWordArr.forEach((e) => {\r\n    const count = userList.filter(usr => usr.community === e.community).length;\r\n    e.wordList.forEach((list) => {\r\n      list.score = Math.round(list.score / count * 1000) / 1000;\r\n      list.push = Math.round(list.push / count * 1000) / 1000;\r\n      list.boo = Math.round(list.boo / count * 1000) / 1000;\r\n      list.neutral = Math.round(list.neutral / count * 1000) / 1000;\r\n    });\r\n  });\r\n  // sort\r\n  communityWordArr.forEach((e) => {\r\n    e.wordList.sort((a, b) => b.score - a.score);\r\n  });\r\n  return communityWordArr;\r\n}\r\n\r\nfunction relationToMatrix(sim: SimilarityObjType, us: Array<string>): NestedArray<number> {\r\n  const mat = [];\r\n  const origMat = [];\r\n  for (let i = 0; i < us.length; i += 1) {\r\n    mat.push(Array(us.length).fill(1));\r\n    origMat.push(Array(us.length).fill(1));\r\n  }\r\n\r\n  sim.forEach((e) => {\r\n    const sourceUserIndex = us.findIndex(u => u === e.source);\r\n    const targetUserIndex = us.findIndex(u => u === e.target);\r\n    mat[sourceUserIndex][targetUserIndex] = e.value;\r\n    mat[targetUserIndex][sourceUserIndex] = e.value;\r\n    origMat[sourceUserIndex][targetUserIndex] = e.value;\r\n    origMat[targetUserIndex][sourceUserIndex] = e.value;\r\n  });\r\n\r\n  // console.log('origMat', origMat);\r\n  return [mat, origMat];\r\n}\r\n\r\nfunction matrixReordering(mat: NestedArray<number>, origMat: NestedArray<number>, userAxis: Array<string>, us: Array<string>, com: CommunityObjType): NestedArray<number> {\r\n  // console.log(mat, origMat, userAxis, users);\r\n  for (let i = 0; i < us.length; i += 1) {\r\n    userAxis.push(Array(us.length).fill(''));\r\n  }\r\n\r\n  const gra = reorder.mat2graph(mat);\r\n  // const perm = reorder.spectral_order(gra);\r\n  const perm = reorder.pca_order(mat);\r\n\r\n  const origGra = reorder.mat2graph(origMat);\r\n  const origPerm = reorder.spectral_order(origGra);\r\n\r\n  let tempUser = [...us];\r\n  for (let j = 0; j < us.length; j += 1) {\r\n    userAxis[j] = tempUser[perm[j]];\r\n  }\r\n  tempUser = [...userAxis];\r\n  // console.log(userAxis);\r\n  let permutedMat = reorder.permute(mat, perm);\r\n  permutedMat = reorder.transpose(permutedMat);\r\n  permutedMat = reorder.permute(permutedMat, perm);\r\n  permutedMat = reorder.transpose(permutedMat);\r\n\r\n  let originalMat = reorder.permute(origMat, perm);\r\n  originalMat = reorder.transpose(originalMat);\r\n  originalMat = reorder.permute(originalMat, perm);\r\n  originalMat = reorder.transpose(originalMat);\r\n  for (let i = 0; i < originalMat.length; i += 1) {\r\n    for (let j = 0; j < originalMat.length; j += 1) {\r\n      const val = JSON.parse(JSON.stringify(originalMat[i][j]));\r\n      const iCom = com.find(e => e.id === userAxis[i]).community;\r\n      const jCom = com.find(e => e.id === userAxis[j]).community;\r\n      const matCom = iCom === jCom ? iCom + 1 : 0;\r\n      originalMat[i][j] = { com: matCom, value: val };\r\n    }\r\n  }\r\n  return [permutedMat, originalMat];\r\n}\r\n\r\nfunction testMatrixReordering(objmat: NestedArray<number>): NestedArray<number> {\r\n  const mat = [];\r\n  for (let i = 0; i < objmat.length; i += 1) {\r\n    mat.push([]);\r\n    for (let j = 0; j < objmat[0].length; j += 1) {\r\n      mat[i].push(objmat[i][j].value);\r\n    }\r\n  }\r\n  console.log(mat);\r\n  const gra = reorder.mat2graph(mat);\r\n  const perm = reorder.pca_order(mat);\r\n  console.log(perm);\r\n  let permutedMat = reorder.permute(objmat, perm);\r\n  permutedMat = reorder.transpose(permutedMat);\r\n  permutedMat = reorder.permute(permutedMat, perm);\r\n  permutedMat = reorder.transpose(permutedMat);\r\n  return permutedMat;\r\n}\r\n\r\nfunction testRandomMatrixReordering(mat: NestedArray<number>): NestedArray<number> {\r\n  const gra = reorder.mat2graph(mat);\r\n  const perm = [];\r\n  for (let i = 0; i < mat.length; i += 1) {\r\n    perm.push(i);\r\n  }\r\n  // perm[2] = 12;\r\n  // perm[12] = 2;\r\n  // perm[3] = 13;\r\n  // perm[13] = 3;\r\n  // perm[18] = 5;\r\n  // perm[5] = 18;\r\n  randomSort(perm);\r\n  let permutedMat = reorder.permute(mat, perm);\r\n  permutedMat = reorder.transpose(permutedMat);\r\n  permutedMat = reorder.permute(permutedMat, perm);\r\n  permutedMat = reorder.transpose(permutedMat);\r\n  return permutedMat;\r\n  function randomSort(array: Array<number>) {\r\n    array.sort(() => Math.random() - 0.5);\r\n  }\r\n}\r\n\r\nfunction testMatrixReorderingByCommunity(mat: NestedArray<number>): NestedArray<number> {\r\n  const maxCommunity = 3;\r\n  const perm = [];\r\n  const comArr = [];\r\n  for (let i = 0; i < mat.length; i += 1) {\r\n    perm.push(i);\r\n  }\r\n  for (let i = 0; i < mat.length; i += 1) {\r\n    if (!comArr.includes(mat[i][i].com)) comArr.push(mat[i][i].com);\r\n  }\r\n  let index = 0;\r\n  for (let i = 0; i < maxCommunity; i += 1) {\r\n    for (let j = 0; j < mat.length; j += 1) {\r\n      if (comArr[i] === mat[j][j].com) {\r\n        perm[index] = j;\r\n        index += 1;\r\n      }\r\n    }\r\n  }\r\n  console.log(perm);\r\n  //   console.log('community permutation for matrix', perm);\r\n  let permutedMat = reorder.permute(mat, perm);\r\n  permutedMat = reorder.transpose(permutedMat);\r\n  permutedMat = reorder.permute(permutedMat, perm);\r\n  permutedMat = reorder.transpose(permutedMat);\r\n  return permutedMat;\r\n  // return [mat, origMat];\r\n}\r\n\r\nfunction matrixReorderingByCommunity(mat: NestedArray<number>, origMat: NestedArray<number>, com: CommunityObjType, userAxis: Array<string>, us: Array<string>): NestedArray<number> {\r\n  const maxCommunity = Math.max(...com.map(p => p.community)) + 1;\r\n  const perm = [];\r\n  const comArr = [];\r\n  for (let i = 0; i < mat.length; i += 1) {\r\n    perm.push(i);\r\n  } \r\n  for (let i = 0; i < mat.length; i += 1) {\r\n    if (!comArr.includes(origMat[i][i].com - 1)) comArr.push(origMat[i][i].com - 1);\r\n  }\r\n  let index = 0;\r\n  for (let i = 0; i < maxCommunity; i += 1) {\r\n    for (let j = 0; j < mat.length; j += 1) {\r\n      if (comArr[i] === origMat[j][j].com - 1) {\r\n        perm[index] = j;\r\n        index += 1;\r\n      }\r\n    }\r\n  }\r\n  //   console.log('community permutation for matrix', perm);\r\n  const tempUser = userAxis.slice();\r\n  for (let j = 0; j < us.length; j += 1) {\r\n    userAxis[j] = tempUser[perm[j]];\r\n  }\r\n  let permutedMat = reorder.permute(mat, perm);\r\n  permutedMat = reorder.transpose(permutedMat);\r\n  permutedMat = reorder.permute(permutedMat, perm);\r\n  permutedMat = reorder.transpose(permutedMat);\r\n  let permutedOrigMat = reorder.permute(origMat, perm);\r\n  permutedOrigMat = reorder.transpose(permutedOrigMat);\r\n  permutedOrigMat = reorder.permute(permutedOrigMat, perm);\r\n  permutedOrigMat = reorder.transpose(permutedOrigMat);\r\n  return [permutedMat, permutedOrigMat];\r\n  // return [mat, origMat];\r\n}\r\n\r\nfunction communityInnerMatrixReordering(mat: NestedArray<number>, origMat: NestedArray<number>, userAxis: Array<string>, us: Array<string>, communityData: CommunityObjType): NestedArray<number> {\r\n  let copyMat = mat.slice();\r\n  let copyOriginalMat = origMat.slice();\r\n  communityData.forEach((com) => {\r\n    const onlyCommunity = [];\r\n    for (let i = com.index; i < com.index + com.num; i += 1) {\r\n      onlyCommunity.push(mat[i].slice(com.index, com.index + com.num));\r\n    }\r\n    // console.log(onlyCommunity);\r\n    const gra = reorder.mat2graph(onlyCommunity);\r\n    // const prePerm = reorder.spectral_order(gra);\r\n    const prePerm = reorder.pca_order(onlyCommunity);\r\n    // const orig_gra = reorder.mat2graph(origMat);\r\n    // const orig_perm = reorder.spectral_order(orig_gra);\r\n    const perm = [];\r\n    for (let i = 0; i < mat.length; i += 1) {\r\n      if (i < com.index || i >= com.index + com.num) {\r\n        perm.push(i);\r\n      } else {\r\n        perm.push(prePerm[i - com.index] + com.index);\r\n      }\r\n    }\r\n    const tempUser = userAxis.slice();\r\n    for (let j = 0; j < us.length; j += 1) {\r\n      userAxis[j] = tempUser[perm[j]];\r\n    }\r\n    // console.log(userAxis);\r\n    copyMat = reorder.permute(copyMat, perm);\r\n    copyMat = reorder.transpose(copyMat);\r\n    copyMat = reorder.permute(copyMat, perm);\r\n    copyMat = reorder.transpose(copyMat);\r\n    copyOriginalMat = reorder.permute(copyOriginalMat, perm);\r\n    copyOriginalMat = reorder.transpose(copyOriginalMat);\r\n    copyOriginalMat = reorder.permute(copyOriginalMat, perm);\r\n    copyOriginalMat = reorder.transpose(copyOriginalMat);\r\n  });\r\n\r\n  return [copyMat, copyOriginalMat];\r\n}\r\n\r\nexport {\r\n  computeUserSimilarityByArticles,\r\n  computeArticleSimilarity,\r\n  jLouvainClustering,\r\n  filterAlwaysNonSimilarUser,\r\n  relationToMatrix,\r\n  matrixReordering,\r\n  computeCommunityTitleWordScore,\r\n  matrixReorderingByCommunity,\r\n  communityInnerMatrixReordering,\r\n  testMatrixReordering,\r\n  testRandomMatrixReordering,\r\n  testMatrixReorderingByCommunity,\r\n};\r\n","/* eslint-disable max-len */\r\n/* eslint-disable no-underscore-dangle */\r\n/* eslint-disable no-console */\r\n/* eslint-disable linebreak-style */\r\n/* eslint-disable react/prop-types */\r\n/* eslint-disable no-unused-vars */\r\n/* eslint-disable no-use-before-define */\r\n/* eslint-disable camelcase */\r\n/* eslint-disable no-param-reassign */\r\nimport * as d3 from 'd3';\r\nimport * as slider from 'd3-simple-slider';\r\n// eslint-disable-next-line import/no-unresolved\r\n// import { userActivityTimeline } from './userActivityTimeline';\r\nimport { timelineView } from './timelineView';\r\nimport * as dp from './dataprocess';\r\n\r\nexport default function userActivityView(beginDateOfQuery, endDateOfQuery, data, svg, user, articles, submit) {\r\n  // console.log(user);\r\n  // doTest2();\r\n  const svgScale = d3.scaleSqrt().domain([0, 200]).range([0.5, 0.1]);\r\n  const commentTimelineSvg = d3.select('#context');\r\n  const h = parseFloat(d3.select('.heatMap').style('height'));\r\n  const focusHeight = 500;\r\n  svg.selectAll('*').remove();\r\n  const margin = {\r\n    top: 30, right: 30, bottom: 60, left: 30,\r\n  };\r\n  const width = 1300 - margin.left - margin.right;\r\n  const height = 450 - margin.top - margin.bottom;\r\n  const colorArray = [\r\n    d3.interpolateBlues,\r\n    d3.interpolateOranges,\r\n    d3.interpolateGreens,\r\n    d3.interpolatePurples,\r\n    d3.interpolateReds,\r\n    d3.interpolateYlOrBr,\r\n    d3.interpolateGnBu,\r\n    d3.interpolateGreys,\r\n    d3.interpolateBlues,\r\n    d3.interpolateOranges,\r\n    d3.interpolateGreens,\r\n    d3.interpolatePurples,\r\n    d3.interpolateReds,\r\n    d3.interpolateYlOrBr,\r\n    d3.interpolateGnBu,\r\n    d3.interpolateGreys,\r\n  ];\r\n  // Build color scale\r\n  const color = d => d3.schemeTableau10[d];\r\n  const leftMyColor = d3.scaleLinear()\r\n    .range(['white', color(9)])\r\n    .domain([0, 100]);\r\n  const userSimilarity = dp.computeUserSimilarityByArticles(data, user);\r\n  // const myGroups = getAllAuthorId(data); // author\r\n  const clickedUser = [];\r\n  let newUserAxisValues = [];\r\n  let datas = [];\r\n  let users = [];\r\n  let similaritys = [];\r\n  // const [filteredArticles, articleSimilarity] = dp.computeArticleSimilarity(data);\r\n  // console.log('articleSimilarity: ', articleSimilarity.length);\r\n  // const articleIds = filteredArticles.map(e => e.article_id);\r\n  // const articlesCommunity = dp.jLouvainClustering(articleIds, articleSimilarity);\r\n  // // const articlesCommunity = articleGroupByTag(articleIds, filteredArticles);\r\n  // console.log('[articlesCommunity]', [articlesCommunity]);\r\n\r\n  const selectedUser = user.slice();\r\n  // Similarity & Reply Count Filter Div\r\n  drawFilterDiv();\r\n  // 5-Level & Reply Quantile visibility Option Div\r\n  drawOptionDiv();\r\n\r\n  function drawFilterDiv() {\r\n    const similarThresh = 0.2;\r\n    const articleThresh = 1;\r\n    d3.select('.option').selectAll('*').remove();\r\n    const similarThreshDiv = d3.select('.option').append('div')\r\n      .style('padding', '0px')\r\n      .style('padding-left', '10px')\r\n      .attr('class', 'col-sm-3')\r\n      .style('display', 'flex')\r\n      .append('div')\r\n      .style('display', 'flex')\r\n      .style('margin-left', 'auto')\r\n      .style('margin-right', '0px')\r\n      .style('align-items', 'center');\r\n    similarThreshDiv.append('h6')\r\n      .text('Similarity >=')\r\n      .style('margin-right', '10px')\r\n      .style('margin-top', 'auto')\r\n      .style('margin-bottom', 'auto');\r\n    similarThreshDiv.append('input')\r\n      .attr('type', 'number')\r\n      .attr('id', 'similarThresh')\r\n      .style('width', '50px')\r\n      .style('height', 'fit-content')\r\n      .attr('value', similarThresh);\r\n    // .on('keypress', (d, index, nodes) => {\r\n    //   if (d3.event.keyCode === 13) {\r\n    //     const val = d3.select(nodes[index]).property('value');\r\n    //     similarThresh = val;\r\n    //     adjacencyMatrixNoAuthor(userSimilarity, similarThresh, articleThresh);\r\n    //   }\r\n    // });\r\n    const articleThreshDiv = d3.select('.option').append('div')\r\n      .style('padding', '0px')\r\n      .attr('class', 'col-sm-3')\r\n      .style('display', 'flex')\r\n      .append('div')\r\n      .style('display', 'flex')\r\n      .style('margin-left', 'auto')\r\n      .style('margin-right', '0px')\r\n      .style('align-items', 'center');\r\n    articleThreshDiv.append('h6')\r\n      .text('Reply >=')\r\n      .style('margin-right', '10px')\r\n      .style('margin-top', 'auto')\r\n      .style('margin-bottom', 'auto');\r\n    articleThreshDiv.append('input')\r\n      .attr('type', 'number')\r\n      .attr('id', 'articleThresh')\r\n      .style('width', '50px')\r\n      .style('height', 'fit-content')\r\n      .attr('value', articleThresh);\r\n    const filterButton = d3.select('.option').append('div')\r\n      .style('padding-left', '10px')\r\n      .attr('class', 'col-sm-1')\r\n      .style('display', 'flex');\r\n    filterButton.append('button')\r\n      .style('type', 'button')\r\n      .style('font-size', 'smaller')\r\n      .attr('class', 'btn btn-primary')\r\n      .attr('id', 'submitUsers')\r\n      .text('Filter')\r\n      .on('click', () => {\r\n        const simThresh = d3.select('#similarThresh').property('value');\r\n        const artThresh = d3.select('#articleThresh').property('value');\r\n        adjacencyMatrixNoAuthor(userSimilarity, simThresh, artThresh);\r\n      });\r\n    adjacencyMatrixNoAuthor(userSimilarity, similarThresh, articleThresh);\r\n  }\r\n\r\n  function drawOptionDiv() {\r\n    let simOptionsDiv = d3.select('.heatMap').select('.option').append('div')\r\n      .attr('class', 'col-sm-5 filterDiv d-flex align-items-center');\r\n    simOptionsDiv = simOptionsDiv.append('div')\r\n      .style('margin-right', '0px')\r\n      .style('margin-left', 'auto')\r\n      .style('align-self', 'center')\r\n      .style('display', 'flex')\r\n      .style('font-size', 'x-small');\r\n    simOptionsDiv.append('h6')\r\n      .text('Options:')\r\n      .style('margin-top', 'auto')\r\n      .style('margin-bottom', 'auto');\r\n    simOptionsDiv = simOptionsDiv.append('div').style('margin-left', '10px');\r\n    const fiveLevelOption = simOptionsDiv.append('div')\r\n      .style('float', 'left')\r\n      .style('display', 'flex');\r\n    fiveLevelOption.append('input')\r\n      .attr('type', 'checkbox')\r\n      .attr('id', 'fiveLevel')\r\n      .attr('name', 'similarity')\r\n      .attr('value', 'fiveLevel')\r\n      .property('checked', true);\r\n    fiveLevelOption.append('label')\r\n      .attr('for', 'fiveLevel')\r\n      .text('5-Level')\r\n      .style('margin-right', '10px')\r\n      .style('margin-bottom', '0px');\r\n    const replyQuantileOption = simOptionsDiv.append('div')\r\n      .style('float', 'left')\r\n      .style('display', 'flex');\r\n    replyQuantileOption.append('input')\r\n      .attr('type', 'checkbox')\r\n      .attr('id', 'replyQuantile')\r\n      .attr('name', 'similarity')\r\n      .attr('value', 'replyQuantile')\r\n      .property('checked', true);\r\n    replyQuantileOption.append('label')\r\n      .attr('for', 'replyQuantile')\r\n      .text('Quantile')\r\n      .style('margin-right', '0px')\r\n      .style('margin-bottom', '0px');\r\n    const getActivityDiv = d3.select('.option')\r\n      .append('div')\r\n      .style('padding-left', '10px')\r\n      .style('margin-bottom', '5px')\r\n      .style('margin-top', '5px');\r\n    getActivityDiv.append('span')\r\n      .style('margin-left', '5px')\r\n      .style('margin-right', '5px')\r\n      .text('From');\r\n    getActivityDiv.append('input')\r\n      .attr('type', 'date')\r\n      .attr('name', 'since')\r\n      .attr('id', 'userDate1')\r\n      .each((d, index, nodes) => {\r\n        // if (!d3.select(nodes[index]).property('value')) {\r\n        //   d3.select(nodes[index]).property('value', d3.select('#date1').attr('value'));\r\n        // }\r\n        d3.select(nodes[index]).property('value', beginDateOfQuery);\r\n      })\r\n      .attr('placeholder', 'since');\r\n\r\n    getActivityDiv.append('span')\r\n      .style('margin-left', '5px')\r\n      .style('margin-right', '5px')\r\n      .text('to');\r\n\r\n    getActivityDiv.append('input')\r\n      .style('margin-right', '5px')\r\n      .attr('type', 'date')\r\n      .attr('name', 'until')\r\n      .attr('id', 'userDate2')\r\n      .each((d, index, nodes) => {\r\n        // if (!d3.select(nodes[index]).property('value')) {\r\n        //   d3.select(nodes[index]).property('value', d3.select('#date2').attr('value'));\r\n        // }\r\n        d3.select(nodes[index]).property('value', endDateOfQuery);\r\n      })\r\n      .attr('placeholder', 'until');\r\n\r\n    getActivityDiv.append('button')\r\n      .style('type', 'button')\r\n      .style('font-size', 'smaller')\r\n      .attr('class', 'btn btn-primary')\r\n      .attr('id', 'submitUsers')\r\n      .text('Get Activity!')\r\n      .on('click', d => {\r\n        const usr = [];\r\n        selectedUser.forEach(e => {\r\n          usr.push({ id: e });\r\n        });\r\n        submit(usr, 0);\r\n      });\r\n    simOptionsDiv.selectAll('input').on('change', (d, index, nodes) => {\r\n      const type = d3.select(nodes[index]).attr('value');\r\n      const checked = d3.select(nodes[index]).property('checked');\r\n      switch (type) {\r\n        case 'userArticle':\r\n          d3.selectAll('.articleSimilarity')\r\n            .attr('visibility', checked ? 'visible' : 'hidden');\r\n          break;\r\n        case 'userAuthor':\r\n          d3.selectAll('.authorSimilarity')\r\n            .attr('visibility', checked ? 'visible' : 'hidden');\r\n          break;\r\n        case 'community':\r\n          d3.selectAll('.avgSimilarityPath')\r\n            .attr('visibility', checked ? 'visible' : 'hidden');\r\n          break;\r\n\r\n        case 'quantile':\r\n          d3.selectAll('.quantilePath')\r\n            .attr('visibility', checked ? 'visible' : 'hidden');\r\n          break;\r\n        case 'fiveLevel':\r\n          d3.select('.leftSvg')\r\n            .selectAll('.articleSimilarity')\r\n            .attr('fill', (_d, _index, _nodes) => {\r\n              const className = d3.select(_nodes[_index]).attr('class');\r\n              console.log(className);\r\n              const xID = className.split(' ')[1];\r\n              const yID = className.split(' ')[2];\r\n              console.log(xID, yID);\r\n              const user1 = datas.find(e => e.id === xID);\r\n              const user2 = datas.find(e => e.id === yID);\r\n              // if (index1 > index2) return leftMyColor(100);\r\n              if (user1.community === user2.community) {\r\n                if (checked) {\r\n                  console.log('checked');\r\n                  return colorArray[user1.community](Math.floor(_d * 100 / 20) * 0.2);\r\n                }\r\n                return colorArray[user1.community](_d);\r\n              }\r\n              if (checked) {\r\n                console.log('checked');\r\n                return colorArray[7](Math.floor(_d * 100 / 20) * 0.2);\r\n              }\r\n              return colorArray[7](_d);\r\n            });\r\n          break;\r\n        case 'replyQuantile':\r\n          d3.selectAll('.betweenUsers.quantilePath')\r\n            .attr('visibility', checked ? 'hidden' : 'visible');\r\n          const simThresh = d3.select('#similarThresh').property('value');\r\n          const artThresh = d3.select('#articleThresh').property('value');\r\n          adjacencyMatrixNoAuthor(userSimilarity, simThresh, artThresh);\r\n          break;\r\n\r\n        default:\r\n          break;\r\n      }\r\n    });\r\n  }\r\n  // heatMapWithAuthor();\r\n\r\n  function adjacencyMatrixNoAuthor(similarity, simThresh, artThresh) {\r\n    newUserAxisValues = [];\r\n    svg.selectAll('*').remove();\r\n    svg.call(d3.zoom()\r\n      .extent([[0, 0], [width, height]])\r\n      .scaleExtent([0.1, 8])\r\n      .on('zoom', zoomed));\r\n    const position = svg.append('g').attr('class', 'position');\r\n    const group = position.append('g').attr('class', 'group')\r\n      .attr('transform', 'translate(-30, 200)');\r\n    function zoomed() {\r\n      group.attr('transform', d3.event.transform);\r\n    }\r\n    // Article Similarity\r\n    [datas, users, similaritys] = dp.filterAlwaysNonSimilarUser(data, user, similarity, simThresh, artThresh);\r\n\r\n    console.log('[datas]:', [datas], '[users]:', [users], '[similaritys]:', [similaritys]);\r\n    if (!datas.length) {\r\n      svg.append('text')\r\n        .text('No users meet the conditions. Please adjust the filter value')\r\n        .attr('x', 100)\r\n        .attr('y', height / 2)\r\n        .attr('font-size', 20)\r\n        .attr('fill', 'red');\r\n      return;\r\n    }\r\n    // similarity for articles grouping\r\n    // let filteredArticles = articles;\r\n    // filteredArticles = filteredArticles.filter(\r\n    //   e => e.messages.some(mes => datas.some(usr => usr.id === mes.push_userid)),\r\n    // );\r\n\r\n    // articlesOrderByCommunity = articlesOrdering(articles, articlesCommunity);\r\n    // console.log('articlesOrderByCommunity', articlesOrderByCommunity);\r\n    const articlesOrderByCommunity = filteredArticles;\r\n    // responderCommunityDetecting(nodes, similaritys);\r\n    const axisDomain = [];\r\n    for (let i = 0; i < users.length; i += 1) {\r\n      axisDomain.push(i);\r\n    }\r\n    console.log('Similarity: ', similaritys.length);\r\n    const community = dp.jLouvainClustering(users, similaritys);\r\n    community.forEach(e => {\r\n      datas.find(e1 => e1.id === e.id).community = e.community;\r\n    });\r\n    // console.log(community);\r\n    const communityWord = dp.computeCommunityTitleWordScore(datas);\r\n    // console.log('communityWord: ', communityWord);\r\n    if (communityWord.length) {\r\n      const score = communityWord[0].wordList.reduce((acc, obj) => acc + obj.score, 0);\r\n    }\r\n    // similarity for articles grouping\r\n    const [filteredArticles, articleSimilarity] = dp.computeArticleSimilarity(datas);\r\n    console.log('articleSimilarity: ', articleSimilarity.length);\r\n    const articleIds = filteredArticles.map(e => e.article_id);\r\n    const articlesCommunity = dp.jLouvainClustering(articleIds, articleSimilarity);\r\n    // console.log('articlesCommunity', articlesCommunity);\r\n\r\n    const [matrix, origMatrix] = dp.relationToMatrix(similaritys, users);\r\n    const similarityScale = d3.scalePow().exponent(0.5).range([0, 100]);\r\n    // console.log('[matrix]', [matrix]);\r\n    const [permuted_mat, permuted_origMat] = dp.matrixReordering(\r\n      matrix, origMatrix, newUserAxisValues, users, community,\r\n    );\r\n    // console.log('[permuted_mat], [permuted_origMat]: ', [permuted_mat], [permuted_origMat]);\r\n\r\n    const [secondOrdering_mat, secondOrdering_origMat] = dp.matrixReorderingByCommunity(\r\n      permuted_mat, permuted_origMat, community, newUserAxisValues, users,\r\n    );\r\n    // console.log(newUserAxisValues);\r\n    // find user group index\r\n    const groupIndex = [];\r\n    newUserAxisValues.forEach((e, index) => {\r\n      const tempCom = community.find(e1 => e1.id === e).community;\r\n      const existedCommunity = groupIndex.find(e1 => e1.community === tempCom);\r\n      if (existedCommunity) existedCommunity.num += 1;\r\n      else groupIndex.push({ community: tempCom, num: 1, index });\r\n    });\r\n    // console.log('position Index of each user community:', groupIndex);\r\n\r\n    // const [secondOrdering_mat, secondOrdering_origMat] = [permuted_mat, permuted_origMat];\r\n    // [secondOrdering_mat, secondOrdering_origMat] = moveNonSimilarUsersToCorner(\r\n    //   secondOrdering_mat, secondOrdering_origMat, groupIndex, newUserAxisValues, users,\r\n    // );\r\n\r\n    // [secondOrdering_mat, secondOrdering_origMat] = dp.communityInnerMatrixReordering(secondOrdering_mat, secondOrdering_origMat, newUserAxisValues, users, groupIndex);\r\n    // console.log('secondOrdering_mat, secondOrdering_origMat: ', secondOrdering_mat, secondOrdering_origMat);\r\n\r\n    const gridSize = 20;\r\n    d3.select('.position').attr('transform', `scale(1) translate(${2 * margin.left},${4 * margin.top})`);\r\n    const leftSvg = group.append('g')\r\n      .attr('class', 'leftSvg')\r\n      .attr('transform', `rotate(-45) scale(${svgScale(datas.length) > 0 ? svgScale(datas.length) : 0.4}) translate(0,0)`);\r\n\r\n    d3.select('.tooltip').remove();\r\n    const Tooltip = d3.select('.heatMap')\r\n      .append('div')\r\n      .style('opacity', 0)\r\n      .attr('class', 'tooltip')\r\n      .style('background-color', 'black')\r\n      .style('border', 'solid')\r\n      .style('border-width', '2px')\r\n      .style('border-radius', '5px')\r\n      .style('padding', '5px');\r\n\r\n    // Three function that change the tooltip when user hover / move / leave a cell\r\n    const mouseover = (d, index, i) => {\r\n      if (typeof d === 'string') {\r\n        // user axis\r\n        d3.selectAll(`circle.id_${d}`).attr('r', 10);\r\n      }\r\n      const xUser = newUserAxisValues[index];\r\n      const yUser = newUserAxisValues[i];\r\n      Tooltip\r\n        .style('opacity', 1)\r\n        .html(`<p style=\"color: white;\">Similarity between ${xUser} and ${yUser} is ${Math.round(d.value * 100) / 100}</p>`)\r\n        .style('left', `${d3.event.pageX + 25}px`)\r\n        .style('top', `${d3.event.pageY}px`);\r\n      d3.select(this)\r\n        .style('stroke', 'black')\r\n        .style('opacity', 1);\r\n    };\r\n    const mouseout = d => {\r\n      if (typeof d === 'string') {\r\n        // user axis\r\n        d3.selectAll(`circle.${d}`)\r\n          .attr('r', 3);\r\n      }\r\n      Tooltip\r\n        .style('opacity', 0)\r\n        .style('left', '0px')\r\n        .style('top', '0px');\r\n      d3.select(this)\r\n        .style('stroke', 'none')\r\n        .style('opacity', 0.8);\r\n    };\r\n    const selectedArticles = [];\r\n    const rectClick = (d, index, i) => {\r\n      let bothRepliedArticles = [];\r\n      const beginDate = d3.select('#userDate1').property('value');\r\n      const endDate = d3.select('#userDate2').property('value');\r\n      const us = datas.filter(_d => selectedUser.includes(_d.id));\r\n      if (us.length === 2) {\r\n        bothRepliedArticles = us[0].repliedArticle.filter(a => us[1].repliedArticle.some(_a => a.article_id === _a.article_id));\r\n      } else {\r\n        us.forEach(usr => {\r\n          usr.repliedArticle.forEach(art => {\r\n            if (!bothRepliedArticles.some(e => e.article_id === art.article_id)) {\r\n              bothRepliedArticles.push(art);\r\n            }\r\n          });\r\n        });\r\n      }\r\n      const sortedUs = [];\r\n      newUserAxisValues.forEach(e => {\r\n        const usr = us.find(u => u.id === e);\r\n        if (usr) sortedUs.push(usr);\r\n      });\r\n      bothRepliedArticles = selectedArticles.length >= 1 ? selectedArticles : bothRepliedArticles;\r\n      timelineView(bothRepliedArticles, sortedUs, commentTimelineSvg, beginDate, endDate);\r\n\r\n      articles.sort((a, b) => {\r\n        if (bothRepliedArticles.find(e => e.article_title === b.article_title)) return 1;\r\n        return -1;\r\n      });\r\n      console.log('sorted articles', articles);\r\n      console.log('bothRepliedArticles', bothRepliedArticles);\r\n      // updateArticleMatrix(bothRepliedArticles);\r\n    };\r\n\r\n    const tickClick = d => {\r\n      const beginDate = beginDateOfQuery;\r\n      const endDate = endDateOfQuery;\r\n      const repliedArticles = [];\r\n      const us = datas.filter(_d => selectedUser.includes(_d.id));\r\n      us.forEach(usr => {\r\n        usr.repliedArticle.forEach(art => {\r\n          if (!repliedArticles.some(e => e.article_id === art.article_id)) {\r\n            repliedArticles.push(art);\r\n          }\r\n        });\r\n      });\r\n      const sortedUs = [];\r\n      newUserAxisValues.forEach(e => {\r\n        const usr = us.find(u => u.id === e);\r\n        if (usr) sortedUs.push(usr);\r\n      });\r\n      if (selectedArticles.length > 0) timelineView(selectedArticles, sortedUs, commentTimelineSvg, beginDate, endDate);\r\n      else timelineView(repliedArticles, sortedUs, commentTimelineSvg, beginDate, endDate);\r\n      console.log('tickclick');\r\n      // updateArticleMatrix(repliedArticles);\r\n    };\r\n\r\n    // reorder community inner matrix\r\n    // [secondOrdering_mat, secondOrdering_origMat] = dp.communityInnerMatrixReordering(secondOrdering_mat, secondOrdering_origMat, newUserAxisValues, users, groupIndex);\r\n    // console.log(secondOrdering_mat, secondOrdering_origMat);\r\n\r\n    // draw userGroup legends\r\n    const groupLegend = d3.select('#timeLine')\r\n      .append('g').attr('class', 'groupLegends')\r\n      .attr('transform', `translate(${margin.left}, ${margin.top})`);\r\n    const legendSize = 15;\r\n    groupLegend.selectAll('rect')\r\n      .data(groupIndex)\r\n      .enter()\r\n      .append('g')\r\n      .attr('class', (d, index) => `group_${index}`)\r\n      .attr('transform', (d, index) => `translate(${110 * (index % 2)}, ${70 * Math.floor(index / 2)})`)\r\n      // .attr('transform', (d, index) => `translate(0 ${20 * index})`)\r\n      .each((d, index, nodes) => {\r\n        d3.select(nodes[index]).append('text')\r\n          .text(`Community ${index + 1}`)\r\n          .attr('x', 0)\r\n          .attr('font-size', 14)\r\n          .attr('fill', colorArray[d.community](1));\r\n\r\n        d3.select(nodes[index])\r\n          .selectAll()\r\n          .data([1, 0.8, 0.6, 0.4, 0.2])\r\n          .enter()\r\n          .append('rect')\r\n          .attr('x', (_d, _index) => _index * legendSize)\r\n          .attr('y', 10)\r\n          .attr('width', legendSize)\r\n          .attr('height', legendSize)\r\n          .attr('fill', _d => colorArray[d.community](_d));\r\n        d3.select(nodes[index])\r\n          .selectAll()\r\n          .data(['1', '.8', '.6', '.4', '.2'])\r\n          .enter()\r\n          .append('text')\r\n          .text(_d => _d)\r\n          .attr('x', (_d, _index) => _index * legendSize + 5)\r\n          .attr('y', 35)\r\n          .attr('font-size', 10)\r\n          .attr('fill', 'black');\r\n      });\r\n\r\n    const rectMargin = 20;\r\n    const maxReplied = Math.max(...datas.map(usr => usr.repliedArticle.length));\r\n    const maxSize = 80;\r\n    const fixedSize = maxSize - 10;\r\n    const bandWidthScale = d3.scaleSqrt().domain([0, maxReplied])\r\n      .range([0, fixedSize]);\r\n    const positionScale = computePosition(datas, bandWidthScale);\r\n\r\n    const activityTranslateX = 120;\r\n    const brushHeight = 20;\r\n    // Upper Part Of UserActivityView\r\n    drawNewHeatmap();\r\n    // Bottom Part Of UserActivityView\r\n    drawUserGroupBipartiteRelations();\r\n\r\n    function computePosition(userArr, scale) {\r\n      const arr = [];\r\n      let init = 0;\r\n      for (let i = 0; i <= userArr.length; i += 1) {\r\n        arr.push(init);\r\n        if (i < userArr.length) {\r\n          const usr = userArr.find(e => e.id === newUserAxisValues[i]);\r\n          init += scale(usr.repliedArticle.length);\r\n        }\r\n      }\r\n      return arr;\r\n    }\r\n\r\n    function drawNewHeatmap() {\r\n      // const max = datas.reduce((prev, current) => {\r\n      //   const preLen = prev.repliedArticle ? prev.repliedArticle.length : prev;\r\n      //   const curLen = current.repliedArticle ? current.repliedArticle.length : current;\r\n      //   return (preLen > curLen) ? preLen : curLen;\r\n      // });\r\n      // const min = datas.reduce((prev, current) => {\r\n      //   const preLen = prev.repliedArticle ? prev.repliedArticle.length : prev;\r\n      //   const curLen = current.repliedArticle ? current.repliedArticle.length : current;\r\n      //   return (preLen < curLen) ? preLen : curLen;\r\n      // });\r\n      for (let i = 0; i < permuted_mat.length; i += 1) {\r\n        const leftSvgGroup = leftSvg.append('g');\r\n        leftSvgGroup.selectAll()\r\n          .data(secondOrdering_mat[i])\r\n          .enter()\r\n          // .append('rect')\r\n          .each((d, index, nodes) => {\r\n            if (index >= i) {\r\n              const xUser = datas.find(e => e.id === newUserAxisValues[index]);\r\n              const yUser = datas.find(e => e.id === newUserAxisValues[i]);\r\n              if (i < index || xUser.community === yUser.community) {\r\n                const xSize = datas.find(e => e.id === xUser.id).repliedArticle.length;\r\n                const ySize = datas.find(e => e.id === yUser.id).repliedArticle.length;\r\n                const bothReplied = getBothRepliedArticle(xUser, yUser);\r\n                const bothSize = bothReplied.length;\r\n                // user rect\r\n                drawUserRect(nodes, index, i);\r\n\r\n                // draw article similarity between users\r\n                drawArticleSimilarity(d, nodes, index, i, xUser, yUser, bothSize);\r\n\r\n                // draw user reply time quantile\r\n                const quantileFilter = d3.select('#replyQuantile');\r\n                const checked = quantileFilter.empty() ? null : quantileFilter.property('checked');\r\n                if (i === index || checked === false) {\r\n                  drawNewReplyTimeWithQuantile(nodes, index, i, xUser, yUser, bothReplied);\r\n                }\r\n              }\r\n            }\r\n          });\r\n        // user self path\r\n        drawUserPath(leftSvgGroup, i);\r\n      }\r\n\r\n      // brush & focus Users\r\n      rangeSelectingUsers();\r\n\r\n      function drawUserRect(n, indX, indY) {\r\n        d3.select(n[indX])\r\n          .append('rect')\r\n          .attr('class', () => {\r\n            const xUserID = newUserAxisValues[indX];\r\n            const yUserID = newUserAxisValues[indY];\r\n            return `userRect ${xUserID} ${yUserID} y${indY} x${indX}`;\r\n          })\r\n          .attr('x', (indX % newUserAxisValues.length) * (maxSize + rectMargin))\r\n          .attr('y', indY * (maxSize + rectMargin))\r\n          .attr('width', maxSize)\r\n          .attr('height', maxSize)\r\n          .attr('fill', 'white')\r\n          .attr('stroke', colorArray[7](1))\r\n          .attr('stroke-width', '2px')\r\n          .attr('opacity', indY > indX ? 0 : 1);\r\n      }\r\n\r\n      function drawNewReplyTimeWithQuantile(n, indX, indY, user1, user2, bothRepliedArticles) {\r\n        const xUserRepliedTime = getAllReplyTime(user1, bothRepliedArticles);\r\n        const yUserRepliedTime = getAllReplyTime(user2, bothRepliedArticles);\r\n        // for user study\r\n        if (user1.id === user2.id) datas.find(e => e.id === user1.id).replyTime = xUserRepliedTime;\r\n        const threeHours = 60 * 60 * 3;\r\n        const thisTimeRectwidth = 10;\r\n        const thisTimeMaxLong = maxSize - 10;\r\n        d3.select(n[indX])\r\n          .selectAll()\r\n          .data([xUserRepliedTime, yUserRepliedTime])\r\n          .enter()\r\n          .append('g')\r\n          .attr('class', () => {\r\n            if (user1.id === user2.id) return 'userSelf quantilePath';\r\n            return 'betweenUsers quantilePath';\r\n          })\r\n          .each((_d, _index, _n) => {\r\n            const quantile = [\r\n              Math.max(0, d3.quantile(_d, 0.25)),\r\n              Math.max(0, d3.quantile(_d, 0.5)),\r\n              Math.max(0, d3.quantile(_d, 0.75)),\r\n            ];\r\n            d3.select(_n[_index])\r\n              .selectAll()\r\n              .data([[quantile[0], quantile[2]], quantile[1]])\r\n              .enter()\r\n              .append('path')\r\n              .attr('d', (q, type) => {\r\n                const initX = ((indX % newUserAxisValues.length) + 1) * (maxSize + rectMargin) - rectMargin - (thisTimeRectwidth / 2);\r\n                const initY = indY * (maxSize + rectMargin) + (thisTimeRectwidth / 2);\r\n                if (type === 0) {\r\n                  // quantile q3 - q1\r\n                  const q1_minutes = q[0] / 60;\r\n                  const q1_long = Math.min(thisTimeMaxLong * 2, (q1_minutes / (6 * 60)) * thisTimeMaxLong * 2);\r\n                  const q3_minutes = q[1] / 60;\r\n                  const q3_long = Math.min(thisTimeMaxLong * 2, (q3_minutes / (6 * 60)) * thisTimeMaxLong * 2);\r\n                  if (q3_long <= thisTimeMaxLong) {\r\n                    return `\r\n                      M ${initX - ((_index % 2) * q1_long)} ${initY + (((_index + 1) % 2) * q1_long)} \r\n                      L ${initX - ((_index % 2) * q3_long)} ${initY + (((_index + 1) % 2) * q3_long)}\r\n                      L ${initX - ((_index % 2) * q3_long) + (((_index + 1) % 2) * thisTimeRectwidth)} ${initY + (((_index + 1) % 2) * q3_long) - ((_index % 2) * thisTimeRectwidth)} \r\n                      L ${initX - ((_index % 2) * q1_long) + (((_index + 1) % 2) * thisTimeRectwidth)} ${initY + (((_index + 1) % 2) * q1_long) - ((_index % 2) * thisTimeRectwidth)} \r\n                      L ${initX - ((_index % 2) * q1_long)} ${initY + (((_index + 1) % 2) * q1_long)} \r\n                    `;\r\n                  }\r\n                  if (q3_long > thisTimeMaxLong && q1_long < thisTimeMaxLong) {\r\n                    if (_index === 0) {\r\n                      // right side\r\n                      const fixedLong = q3_long - thisTimeMaxLong;\r\n                      return `\r\n                      M ${initX} ${initY + (((_index + 1) % 2) * q1_long)} \r\n                      L ${initX} ${initY + thisTimeMaxLong} \r\n                      L ${initX - fixedLong} ${initY + thisTimeMaxLong} \r\n                      L ${initX - fixedLong} ${initY + thisTimeMaxLong + thisTimeRectwidth} \r\n                      L ${initX + thisTimeRectwidth} ${initY + thisTimeMaxLong + thisTimeRectwidth}\r\n                      L ${initX + thisTimeRectwidth} ${initY + (((_index + 1) % 2) * q1_long)} \r\n                      L ${initX} ${initY + (((_index + 1) % 2) * q1_long)} \r\n                      `;\r\n                    }\r\n                    // left side\r\n                    const fixedLong = q3_long - thisTimeMaxLong;\r\n                    return `\r\n                      M ${initX - ((_index % 2) * q1_long)} ${initY} \r\n                      L ${initX - thisTimeMaxLong} ${initY} \r\n                      L ${initX - thisTimeMaxLong} ${initY + fixedLong} \r\n                      L ${initX - thisTimeMaxLong - thisTimeRectwidth} ${initY + fixedLong} \r\n                      L ${initX - thisTimeMaxLong - thisTimeRectwidth} ${initY - thisTimeRectwidth} \r\n                      L ${initX - ((_index % 2) * q1_long)} ${initY - thisTimeRectwidth} \r\n                      L ${initX - ((_index % 2) * q1_long)} ${initY} \r\n                    `;\r\n                  }\r\n                  if (q3_long > thisTimeMaxLong && q1_long > thisTimeMaxLong) {\r\n                    if (_index === 0) {\r\n                      // right side\r\n                      const fixedLong = q3_long - thisTimeMaxLong;\r\n                      return `\r\n                        M ${initX - (q1_long - thisTimeMaxLong)} ${initY + thisTimeMaxLong} \r\n                        L ${initX - fixedLong} ${initY + thisTimeMaxLong} \r\n                        L ${initX - fixedLong} ${initY + thisTimeMaxLong + thisTimeRectwidth} \r\n                        L ${initX - (q1_long - thisTimeMaxLong)} ${initY + thisTimeMaxLong + thisTimeRectwidth} \r\n                        L ${initX - (q1_long - thisTimeMaxLong)} ${initY + thisTimeMaxLong} \r\n                        `;\r\n                    }\r\n                    // left side\r\n                    const fixedLong = q3_long - thisTimeMaxLong;\r\n                    return `\r\n                      M ${initX - thisTimeMaxLong} ${initY + (q1_long - thisTimeMaxLong)} \r\n                      L ${initX - thisTimeMaxLong} ${initY + fixedLong}\r\n                      L ${initX - thisTimeMaxLong - thisTimeRectwidth} ${initY + fixedLong}\r\n                      L ${initX - thisTimeMaxLong - thisTimeRectwidth} ${initY + (q1_long - thisTimeMaxLong)}\r\n                      L ${initX - thisTimeMaxLong} ${initY + (q1_long - thisTimeMaxLong)}\r\n                    `;\r\n                  }\r\n                }\r\n                const q2_minutes = q / 60;\r\n                const q2_long = Math.min(thisTimeMaxLong * 2 - 1, (q2_minutes / (6 * 60)) * thisTimeMaxLong * 2);\r\n                if (q2_long <= thisTimeMaxLong) {\r\n                  // right side\r\n                  if (_index === 0) {\r\n                    return `\r\n                      M ${initX} ${initY + q2_long} \r\n                      L ${initX} ${initY + (q2_long + 1)} \r\n                      L ${initX + thisTimeRectwidth} ${initY + (q2_long + 1)} \r\n                      L ${initX + thisTimeRectwidth} ${initY + q2_long} \r\n                      `;\r\n                  }\r\n                  // left side\r\n                  return `\r\n                    M ${initX - q2_long} ${initY} \r\n                    L ${initX - (q2_long + 1)} ${initY} \r\n                    L ${initX - (q2_long + 1)} ${initY - thisTimeRectwidth} \r\n                    L ${initX - q2_long} ${initY - thisTimeRectwidth} \r\n                    `;\r\n                }\r\n                // right side\r\n                if (_index === 0) {\r\n                  return `\r\n                    M ${initX - (q2_long - thisTimeMaxLong)} ${initY + thisTimeMaxLong} \r\n                    L ${initX - (q2_long - thisTimeMaxLong + 1)} ${initY + thisTimeMaxLong}\r\n                    L ${initX - (q2_long - thisTimeMaxLong + 1)} ${initY + thisTimeMaxLong + thisTimeRectwidth}\r\n                    L ${initX - (q2_long - thisTimeMaxLong)} ${initY + thisTimeMaxLong + thisTimeRectwidth}\r\n                    `;\r\n                }\r\n                // left side\r\n                return `\r\n                  M ${initX - thisTimeMaxLong} ${initY + (q2_long - thisTimeMaxLong)} \r\n                  L ${initX - thisTimeMaxLong} ${initY + (q2_long - thisTimeMaxLong + 1)}\r\n                  L ${initX - thisTimeMaxLong - thisTimeRectwidth} ${initY + (q2_long - thisTimeMaxLong + 1)}\r\n                  L ${initX - thisTimeMaxLong - thisTimeRectwidth} ${initY + (q2_long - thisTimeMaxLong)}\r\n                  `;\r\n              })\r\n              .attr('fill', () => {\r\n                if (_index === 0) return colorArray[user1.community](secondOrdering_mat[indX][indY]);\r\n                return colorArray[user2.community](secondOrdering_mat[indX][indY]);\r\n              })\r\n              .attr('stroke', (q, step) => 'black')\r\n              .attr('stroke-width', (q, step) => (step === 1 ? '3px' : '3px'));\r\n          });\r\n      }\r\n      function drawArticleSimilarity(_d, n, indX, indY, user1, user2, size) {\r\n        d3.select(n[indX])\r\n          .append('rect')\r\n          .attr('class', () => {\r\n            const xUserID = newUserAxisValues[indX];\r\n            const yUserID = newUserAxisValues[indY];\r\n            return `articleSimilarity ${xUserID} ${yUserID} y${indY} x${indX}`;\r\n          })\r\n          .attr('x', (indX % newUserAxisValues.length) * (maxSize + rectMargin) + ((maxSize - fixedSize) / 2))\r\n          .attr('y', indY * (maxSize + rectMargin) + ((maxSize - fixedSize) / 2))\r\n          .attr('rx', () => {\r\n            if (indY > indX) return 0;\r\n            return Math.min(15, bandWidthScale(size) / 10);\r\n          })\r\n          .attr('width', fixedSize)\r\n          .attr('height', fixedSize)\r\n          .attr('fill', () => {\r\n            if (indY > indX) return leftMyColor(100);\r\n            if (user1.community === user2.community) {\r\n              const communityColor = d3.scaleLinear()\r\n                .range(['white', color(user1.community)])\r\n                .domain([0, 1]);\r\n              // return communityColor(_d);\r\n              return colorArray[user1.community](Math.floor(_d * 100 / 20) * 0.2);\r\n            }\r\n            // return leftMyColor(_d);\r\n            return colorArray[7](Math.floor(_d * 100 / 20) * 0.2);\r\n          })\r\n          .attr('opacity', indY >= indX ? 0 : 1)\r\n          .on('mouseover', () => mouseover(secondOrdering_origMat[indY][indX], indX, indY))\r\n          .on('mouseout', mouseout)\r\n          .on('click', () => {\r\n            selectedUser.splice(0, selectedUser.length);\r\n            selectedUser.push(newUserAxisValues[indY]);\r\n            selectedUser.push(newUserAxisValues[indX]);\r\n            rectClick(_d, indX, indY);\r\n          });\r\n      }\r\n\r\n      function drawUserPath(selectedGroup, ind) {\r\n        const tempUser = community.find(e => e.id === newUserAxisValues[ind]);\r\n        selectedGroup.append('path')\r\n          .attr('d', () => {\r\n            const size = datas.find(e => e.id === tempUser.id).repliedArticle.length;\r\n            const offset = (bandWidthScale.range()[1] - bandWidthScale(size)) / 2 + ((maxSize - fixedSize) / 2);\r\n            const start = ind * (maxSize + rectMargin) + offset;\r\n            const end = start + bandWidthScale(size);\r\n            return `M ${start} ${start} L ${end} ${start} L ${end} ${end} L ${start} ${end} L ${start} ${start}`;\r\n          })\r\n          .attr('fill', colorArray[tempUser.community](0.8))\r\n          .on('click', () => {\r\n            selectedUser.splice(0, selectedUser.length);\r\n            selectedUser.push(newUserAxisValues[ind]);\r\n            rectClick();\r\n          });\r\n      }\r\n\r\n      function rangeSelectingUsers() {\r\n        const reverseScale = svgScale(datas.length) > 0 ? svgScale(datas.length) : 0.4;\r\n        const widthOfHeatmap = (maxSize + rectMargin) * datas.length - rectMargin;\r\n        const brush = d3.brushX()\r\n          .extent([[0, 0], [widthOfHeatmap * reverseScale * Math.sqrt(2), brushHeight]])\r\n          .on('end', brushed);\r\n\r\n        leftSvg.append('defs').append('clipPath')\r\n          .attr('id', 'clip')\r\n          .append('rect')\r\n          .attr('width', width)\r\n          .attr('height', height);\r\n\r\n        const context = group;\r\n\r\n        context.append('g')\r\n          .attr('class', 'brush')\r\n          .attr('transform', `translate(0, ${maxSize * reverseScale})`)\r\n          .call(brush)\r\n          .call(brush.move, [0, 0])\r\n          .on('mouseover', () => {\r\n            d3.selectAll('.avgSimilarityPath')\r\n              .attr('opacity', 0);\r\n          })\r\n          .on('mouseout', () => {\r\n            d3.selectAll('.avgSimilarityPath')\r\n              .attr('opacity', 1);\r\n          });\r\n\r\n        context.select('.handle.handle--n')\r\n          .attr('fill', 'slategray');\r\n        context.select('.handle.handle--s')\r\n          .attr('fill', 'slategray');\r\n\r\n        d3.select('.brush').append('path')\r\n          .attr('d', 'M 0 0 L 0 0 L 0 0');\r\n        function brushed(d) {\r\n          if (d3.event.sourceEvent && d3.event.sourceEvent.type === 'zoom') return; // ignore brush-by-zoom\r\n          const s = d3.event.selection;\r\n          const focusUserIndex = [];\r\n          selectedUser.splice(0, selectedUser.length);\r\n          const start = Math.round((s[0] / reverseScale) / ((maxSize + rectMargin) * Math.sqrt(2)));\r\n          const end = Math.floor((s[1] / reverseScale) / ((maxSize + rectMargin) * Math.sqrt(2)));\r\n          for (let i = start; i <= end; i += 1) {\r\n            d3.selectAll(`circle.id_${newUserAxisValues[i]}`).attr('r', 7.5);\r\n            selectedUser.push(newUserAxisValues[i]);\r\n          }\r\n          // resize brush controller\r\n          const fixedX1 = start * (maxSize + rectMargin) * reverseScale * Math.sqrt(2);\r\n          const fixedX2 = (end * (maxSize + rectMargin) + maxSize) * reverseScale * Math.sqrt(2);\r\n\r\n          d3.select('.brush').nodes()[0].__brush.selection[0][0] = fixedX1;\r\n          d3.select('.brush').nodes()[0].__brush.selection[1][0] = fixedX2;\r\n          context.select('.handle.handle--w')\r\n            .attr('x', fixedX1)\r\n            .attr('fill', 'slategray');\r\n          context.select('.handle.handle--e')\r\n            .attr('x', fixedX2)\r\n            .attr('fill', 'slategray');\r\n          context.select('.selection')\r\n            .attr('x', fixedX1)\r\n            .attr('width', fixedX2 - fixedX1);\r\n          // setting all co-cluster rect stroke-width to 1\r\n          // d3.select('.radialGroup').selectAll('rect')\r\n          //   .attr('stroke', 'slategray')\r\n          //   .attr('stroke-width', '0.3px');\r\n          // highlight selected grid of heatmap\r\n          const brushPathOffset = maxSize * reverseScale;\r\n          d3.select('.brush').select('path')\r\n            .transition()\r\n            .attr('d', () => `\r\n                M ${fixedX1} ${-brushPathOffset} \r\n                L ${(fixedX2 + fixedX1) / 2} ${-(fixedX2 - fixedX1) / 2 - brushPathOffset} \r\n                L ${fixedX2} ${-brushPathOffset} \r\n                L ${fixedX1} ${-brushPathOffset}\r\n              `)\r\n            .attr('stroke', 'black')\r\n            .attr('stroke-width', '2px')\r\n            .attr('fill', 'gray')\r\n            .attr('opacity', '0.5')\r\n            .style('pointer-events', 'none');\r\n          tickClick();\r\n        }\r\n      }\r\n\r\n      function getBothRepliedArticle(usr1, usr2) {\r\n        const articleArr = usr1.repliedArticle.filter(\r\n          a => usr2.repliedArticle.some(_a => _a.article_id === a.article_id),\r\n        );\r\n        return articleArr;\r\n      }\r\n\r\n      function getAllReplyTime(usr, articleArr) {\r\n        // simArr.sort((a, b) => a - b);\r\n        const arr = [];\r\n        articleArr.forEach(a => {\r\n          const postYear = new Date(a.date).getFullYear();\r\n          const mes = a.messages.find(m => m.push_userid === usr.id);\r\n          const date = dateFormat(mes);\r\n          const commentTime = new Date(new Date(date).setFullYear(postYear));\r\n          const diff = commentTime - new Date(a.date);\r\n          arr.push(diff / 1000);\r\n        });\r\n        arr.sort((a, b) => a - b);\r\n        return arr;\r\n      }\r\n    }\r\n\r\n    function dateFormat(mes) {\r\n      let dat = '';\r\n      const splitedDate = mes.push_ipdatetime.split(' ');\r\n      if (splitedDate.length === 3) {\r\n        dat = dat.concat('', splitedDate[1]);\r\n        dat = dat.concat(' ', splitedDate[2]);\r\n        return dat;\r\n      }\r\n      return mes.push_ipdatetime;\r\n    }\r\n\r\n    function drawUserGroupBipartiteRelations() {\r\n      const radialGroupMargin = 50;\r\n      const radial = group.append('g')\r\n        .attr('class', 'radialGroup')\r\n        .attr('transform', `translate(0, ${maxSize + brushHeight}) scale(${svgScale(datas.length) > 0 ? svgScale(datas.length) : 0.4})`)\r\n        .attr('stroke', 'slategray')\r\n        .attr('stroke-width', '0.3px');\r\n      // const articleGroupHeatmap = leftSvg.append('g').attr('class', 'articleGroupHeatmap');\r\n      const numOfArtCom = Math.max(...articlesCommunity.map(e => e.community)) + 1;\r\n      const numOfArtOfEachComunity = [];\r\n      for (let i = 0; i < numOfArtCom; i += 1) {\r\n        const tempCommunity = articlesCommunity.filter(e => e.community === i);\r\n        if (tempCommunity.length) numOfArtOfEachComunity.push({ community: i, articles: tempCommunity });\r\n      }\r\n      numOfArtOfEachComunity.sort((a, b) => b.articles.length - a.articles.length);\r\n      // console.log('numOfArtOfEachComunity', numOfArtOfEachComunity);\r\n      const existedCommunityOfArticle = [];\r\n      numOfArtOfEachComunity.forEach(e => {\r\n        existedCommunityOfArticle.push(e.community);\r\n      });\r\n      // console.log('existedCommunityOfArticle', existedCommunityOfArticle);\r\n      const artComPie = d3.pie()\r\n        .value(d => d.length)\r\n        .sort(null);\r\n      const dataReady = artComPie(numOfArtOfEachComunity);\r\n      const numOfUserCom = Math.max(...community.map(e => e.community)) + 1;\r\n      const comunityIndexY = [];\r\n      const temp = [];\r\n\r\n      for (let j = 0; j < newUserAxisValues.length; j += 1) {\r\n        const com = datas.find(e => e.id === newUserAxisValues[j]).community;\r\n        if (!temp.includes(com)) {\r\n          temp.push(com);\r\n          comunityIndexY.push(j);\r\n        }\r\n      }\r\n\r\n      const articleGroupWidthScale = d3.scaleLinear().domain([0, filteredArticles.length]).range([0, 2000]);\r\n      const articleGroupIndexArray = [];\r\n      const articleGroupYScale = [0];\r\n      const padding = 2;\r\n      for (let i = 0; i < numOfArtCom; i += 1) {\r\n        articleGroupIndexArray.push(i);\r\n        if (i < numOfArtCom - 1) {\r\n          const articlesOfCommunityI = numOfArtOfEachComunity.find(e => e.community === i);\r\n          if (articlesOfCommunityI) {\r\n            articleGroupYScale.push(padding + articleGroupYScale[i] + articleGroupWidthScale(articlesOfCommunityI.articles.length));\r\n          } else {\r\n            articleGroupYScale.push(0);\r\n          }\r\n        }\r\n      }\r\n\r\n      const articleGroupOfUserCommunity = [];\r\n      for (let i = 0; i < numOfUserCom; i += 1) {\r\n        let numOfUser = 0;\r\n        if (i === numOfUserCom - 1) numOfUser = newUserAxisValues.length - comunityIndexY[i];\r\n        else numOfUser = comunityIndexY[i + 1] - comunityIndexY[i];\r\n        // draw bipartite graph visualization\r\n        const arr = drawRelationRatio(i, numOfUser);\r\n        articleGroupOfUserCommunity.push(arr);\r\n      }\r\n      // console.log('articleGroupOfUserCommunity: ', articleGroupOfUserCommunity);\r\n\r\n      // draw bipartite co-cluster graph\r\n      drawNewCoClusterGraph(articleGroupOfUserCommunity);\r\n\r\n      function drawRelationRatio(index, userCount) {\r\n        const communityIndexDatas = datas.filter(e => e.community === index);\r\n        const communityIndexArticles = computeNumOfArticlesOfEachCommunity();\r\n        const communityEachLevelCount = [];\r\n        communityIndexArticles.forEach(e => {\r\n          const levelOne = e.articles.filter(a => a.count > 0);\r\n          const levelTwo = e.articles.filter(a => a.count >= 0.2);\r\n          const levelThree = e.articles.filter(a => a.count >= 0.4);\r\n          const levelFour = e.articles.filter(a => a.count >= 0.6);\r\n          const levelFive = e.articles.filter(a => a.count >= 0.8);\r\n          communityEachLevelCount.push({\r\n            community: e.community,\r\n            level: [levelOne, levelTwo, levelThree, levelFour, levelFive],\r\n          });\r\n        });\r\n        // console.log('communityEachLevelCount', communityEachLevelCount);\r\n        let nex = positionScale.length - 1;\r\n        if (comunityIndexY[index + 1]) nex = comunityIndexY[index + 1];\r\n\r\n        return communityEachLevelCount;\r\n\r\n        function computeNumOfArticlesOfEachCommunity() {\r\n          const arr = [];\r\n          communityIndexDatas.forEach(u => {\r\n            u.repliedArticle.forEach(article => {\r\n              const findArticle = articlesCommunity.find(a => a.id === article.article_id);\r\n              if (findArticle) {\r\n                const existedComunity = arr.find(e => e.community === findArticle.community);\r\n                if (existedComunity) {\r\n                // same community\r\n                  const existedArticle = existedComunity.articles.find(e => e.article_id === findArticle.id);\r\n                  if (existedArticle) {\r\n                  // same aritcle\r\n                    existedArticle.count += 1 / communityIndexDatas.length;\r\n                  } else {\r\n                  // can't find article\r\n                    existedComunity.articles.push({ article_id: findArticle.id, count: 1 / communityIndexDatas.length });\r\n                  }\r\n                } else {\r\n                // can't find community\r\n                  arr.push({\r\n                    community: findArticle.community,\r\n                    articles: [{\r\n                      article_id: findArticle.id,\r\n                      count: 1 / communityIndexDatas.length,\r\n                    }],\r\n                  });\r\n                }\r\n              }\r\n            });\r\n          });\r\n          arr.sort((a, b) => b.articles.length - a.articles.length);\r\n          return arr;\r\n        }\r\n      }\r\n\r\n      function drawNewCoClusterGraph(arr) {\r\n        const positionOfArticleCom = [];\r\n        const numberOfArticles = numOfArtOfEachComunity.reduce((acc, obj) => acc + obj.articles.length, 0);\r\n        const scale = d3.scaleLinear().domain([0, numberOfArticles]).range([0, datas.length * maxSize]);\r\n        // calculate all article community position\r\n\r\n        // article community position\r\n        for (let j = 0; j < numOfArtOfEachComunity.length; j += 1) {\r\n          const prePosition = j <= 0 ? 0 : positionOfArticleCom[j - 1].position;\r\n          if (j > 0) {\r\n            positionOfArticleCom.push({\r\n              community: numOfArtOfEachComunity[j].community,\r\n              position: prePosition + scale(numOfArtOfEachComunity[j - 1].articles.length) * (3 / 2),\r\n            });\r\n          } else {\r\n            positionOfArticleCom.push({\r\n              community: numOfArtOfEachComunity[j].community,\r\n              position: prePosition,\r\n            });\r\n          }\r\n        }\r\n\r\n        for (let i = 0; i < arr.length; i += 1) {\r\n          // user Community i\r\n          // const groupRadial = radial.select(`.group_${i}`);\r\n          const groupRadial = radial;\r\n          const tem = comunityIndexY[i];\r\n          const nex_tem = comunityIndexY[i + 1] ? comunityIndexY[i + 1] : positionScale.length - 1;\r\n          const maxWidth_tem = ((nex_tem - tem) * (maxSize + rectMargin) - rectMargin) * Math.sqrt(2);\r\n          // blank area\r\n          drawBlankAreaOfArticleCommunity(groupRadial, i, maxWidth_tem);\r\n          // bipartite relations with articles and users\r\n          drawBipartiteOfUserAndArticles(groupRadial, i, maxWidth_tem);\r\n          // visual intersection\r\n          drawIntersectionOfUserCommunities(groupRadial, i);\r\n        }\r\n        radial.selectAll('rect')\r\n          .attr('stroke-width', '5px');\r\n        function coClusterMouseover(arts, communityIndex) {\r\n          const usrs = datas.filter(e => e.community === communityIndex);\r\n          usrs.forEach(u => {\r\n            u.haveReplied = u.repliedArticle.filter(a => arts.some(_a => _a.article_id === a.article_id));\r\n          });\r\n        }\r\n\r\n        function drawBlankAreaOfArticleCommunity(svgGroup, com, maxWidth) {\r\n          const tempIndex = comunityIndexY[com];\r\n          svgGroup.append('g')\r\n            .attr('class', `co-cluster_${com}`)\r\n            .selectAll('path')\r\n            .data(positionOfArticleCom)\r\n            .enter()\r\n            .append('rect')\r\n            .attr('class', d => `blank_group_${d.community}`)\r\n            .attr('x', () => (tempIndex * (maxSize + rectMargin)) * Math.sqrt(2))\r\n            .attr('y', d => d.position)\r\n            .attr('height', d => {\r\n              const { articles: art } = numOfArtOfEachComunity.find(e => e.community === d.community);\r\n              return scale(art.length);\r\n            })\r\n            .attr('width', maxWidth)\r\n            .attr('fill', 'gray')\r\n            .attr('stroke', 'black');\r\n          // .attr('stroke-width', '1px');\r\n        }\r\n\r\n        function drawBipartiteOfUserAndArticles(svgGroup, com, maxWidth) {\r\n          const tempIndex = comunityIndexY[com];\r\n          const tempCom = temp[com];\r\n          svgGroup.append('g')\r\n            .attr('class', `co-cluster_${com}`)\r\n            .selectAll('path')\r\n            .data(arr[tempCom])\r\n            .enter()\r\n            .append('g')\r\n            .each((d, index, nodes) => {\r\n              // for i === k show density of replied articles of userCommunity\r\n              d3.select(nodes[index]).selectAll('path')\r\n                .data(d.level)\r\n                .enter()\r\n                .append('rect')\r\n                .attr('x', (_d, _index) => (tempIndex * (maxSize + rectMargin)) * Math.sqrt(2))\r\n                .attr('y', (_d, _index) => {\r\n                  const { position: pos } = positionOfArticleCom.find(e => e.community === d.community);\r\n                  return pos;\r\n                })\r\n                // .attr('x', (_d, _index) => positionScale[tem] * Math.sqrt(2) + d.position)\r\n                .attr('height', _d => {\r\n                  const { articles: art } = numOfArtOfEachComunity.find(e => e.community === d.community);\r\n                  return scale(art.length);\r\n                })\r\n                .attr('width', _d => {\r\n                  const totalArticlesOfThisCommunityOfArticle = numOfArtOfEachComunity.find(e => e.community === d.community).articles;\r\n                  const thisWidthScale = d3.scaleLinear().domain([0, totalArticlesOfThisCommunityOfArticle.length]).range([0, maxWidth]);\r\n                  const sameArticles = d.level[0].filter(e => _d.some(e1 => e1.article_id === e.article_id));\r\n                  return thisWidthScale(sameArticles.length);\r\n                })\r\n                .attr('stroke', 'black')\r\n                // .attr('stroke-width', '1px')\r\n                .attr('fill', (_d, _index) => colorArray[tempCom]((_index + 1) * 0.2))\r\n                // .attr('stroke', (_d, _index) => (_index === 0 ? 'black' : 'none'))\r\n                .on('click', (_d, _index, _nodes) => {\r\n                  selectedArticles.splice(0, selectedArticles.length);\r\n                  if (d3.select(_nodes[_index]).attr('stroke-width') === '10px') {\r\n                    // already has been selected\r\n                    svgGroup.selectAll('rect').attr('stroke-width', '3px');\r\n                  } else {\r\n                    svgGroup.selectAll('rect').attr('stroke-width', '3px');\r\n                    d3.select(_nodes[_index]).attr('stroke-width', '10px');\r\n                    articles.forEach(e => {\r\n                      if (_d.some(e1 => e1.article_id === e.article_id)) selectedArticles.push(e);\r\n                    });\r\n                  }\r\n                  rectClick(_d, com);\r\n                })\r\n                .on('mouseover', _d => coClusterMouseover(_d, com))\r\n                .each(() => {\r\n                  // svgGroup.select(`.co-cluster_${com}`).select(`.blank_group_${d.community}`).attr('fill', 'none');\r\n                });\r\n            });\r\n        }\r\n\r\n        function drawIntersectionOfUserCommunities(svgGroup, com) {\r\n          let positionIndex = com;\r\n          let diffAterSame = 0;\r\n          const tempCom = temp[com];\r\n          for (let j = 0; j < arr.length; j += 1) {\r\n            if (com !== j) {\r\n              // cluster between community_i & community_k\r\n              const nextCom = temp[j];\r\n              positionIndex += diffAterSame;\r\n              diffAterSame = 0;\r\n              const pIndex = positionIndex;\r\n              const nex = comunityIndexY[j];\r\n              const nex_nex = comunityIndexY[j + 1] ? comunityIndexY[j + 1] : positionScale.length - 1;\r\n              const maxWidth_nex = ((nex_nex - nex) * (maxSize + rectMargin) - rectMargin) * Math.sqrt(2);\r\n              const numOfArticlesOfUserCommunity = arr[j].reduce((acc, obj) => acc + obj.level[0].length, 0);\r\n              svgGroup.append('g')\r\n                .attr('class', `co-cluster_${tempCom}_${nextCom}`)\r\n                .selectAll('path')\r\n                .data(arr[tempCom])\r\n                .enter()\r\n                .append('g')\r\n                .each((d, index, nodes) => {\r\n                  const temCommunity = d.community;\r\n                  const nextArticleCommunity = arr[nextCom].find(e => e.community === temCommunity);\r\n\r\n                  // visual co-cluster's maxWidth\r\n                  d3.select(nodes[index]).selectAll('path')\r\n                    .data([1])\r\n                    .enter()\r\n                    .append('rect')\r\n                    .attr('x', _d => (nex * (maxSize + rectMargin)) * Math.sqrt(2))\r\n                    .attr('y', (_d, _index) => {\r\n                      if (nextArticleCommunity) {\r\n                        const artNum = numOfArtOfEachComunity.find(e => e.community === nextArticleCommunity.community).articles.length;\r\n                        const offset = scale(artNum) + (pIndex - 1) * (scale(artNum) / 2 / arr.length);\r\n                        return positionOfArticleCom.find(e => e.community === nextArticleCommunity.community).position + offset;\r\n                      }\r\n                      return 0;\r\n                    })\r\n                    .attr('height', (_d, _index) => {\r\n                      if (nextArticleCommunity) {\r\n                        const artNum = numOfArtOfEachComunity.find(e => e.community === nextArticleCommunity.community).articles.length;\r\n                        return scale(artNum) / 2 / arr.length;\r\n                      }\r\n                      return 0;\r\n                    })\r\n                    .attr('width', _d => {\r\n                      if (!nextArticleCommunity) return 0;\r\n                      const totalArticlesOfThisCommunityOfArticle = numOfArtOfEachComunity.find(e => e.community === nextArticleCommunity.community).articles;\r\n                      const thisWidthScale = d3.scaleLinear().domain([0, totalArticlesOfThisCommunityOfArticle.length]).range([0, maxWidth_nex]);\r\n                      const maxWidth = thisWidthScale(nextArticleCommunity.level[0].length);\r\n                      const heightScale = d3.scaleLinear().domain([0, nextArticleCommunity.level[0].length]).range([0, maxWidth]);\r\n                      return maxWidth;\r\n                    })\r\n                    .attr('fill', 'none')\r\n                    .attr('stroke', 'black');\r\n\r\n                  d3.select(nodes[index]).selectAll('path')\r\n                    .data(d.level)\r\n                    .enter()\r\n                    .append('rect')\r\n                    .attr('x', _d => (nex * (maxSize + rectMargin)) * Math.sqrt(2))\r\n                    .attr('y', (_d, _index) => {\r\n                      if (nextArticleCommunity) {\r\n                        const artNum = numOfArtOfEachComunity.find(e => e.community === nextArticleCommunity.community).articles.length;\r\n                        const offset = scale(artNum) + (pIndex - 1) * (scale(artNum) / 2 / arr.length);\r\n                        return positionOfArticleCom.find(e => e.community === nextArticleCommunity.community).position + offset;\r\n                      }\r\n                      return 0;\r\n                    })\r\n                    .attr('height', (_d, _index) => {\r\n                      if (nextArticleCommunity) {\r\n                        const artNum = numOfArtOfEachComunity.find(e => e.community === nextArticleCommunity.community).articles.length;\r\n                        return scale(artNum) / 2 / arr.length;\r\n                      }\r\n                      return 0;\r\n                    })\r\n                    .attr('width', _d => {\r\n                      if (!nextArticleCommunity) return 0;\r\n                      const totalArticlesOfThisCommunityOfArticle = numOfArtOfEachComunity.find(e => e.community === nextArticleCommunity.community).articles;\r\n                      const thisWidthScale = d3.scaleLinear().domain([0, totalArticlesOfThisCommunityOfArticle.length]).range([0, maxWidth_nex]);\r\n                      const maxWidth = thisWidthScale(nextArticleCommunity.level[0].length);\r\n                      const heightScale = d3.scaleLinear().domain([0, nextArticleCommunity.level[0].length]).range([0, maxWidth]);\r\n                      const sameArticles = nextArticleCommunity.level[0].filter(e => _d.some(e1 => e1.article_id === e.article_id));\r\n                      return heightScale(sameArticles.length);\r\n                    })\r\n                    .attr('fill', (_d, _index) => colorArray[tempCom](_index * 0.25))\r\n                    .attr('stroke', 'black')\r\n                    .attr('stroke', (_d, _index) => (_index === 0 ? 'black' : 'none'))\r\n                    .on('click', (_d, _index, _nodes, levelIndex) => {\r\n                      if (!nextArticleCommunity) return 0;\r\n                      const sameArticles = nextArticleCommunity.level[0].filter(e => _d.some(e1 => e1.article_id === e.article_id));\r\n                      selectedArticles.splice(0, selectedArticles.length);\r\n                      if (d3.select(_nodes[_index]).attr('stroke-width') === '10px') {\r\n                        // already has been selected\r\n                        svgGroup.selectAll('rect').attr('stroke-width', '1px');\r\n                      } else {\r\n                        svgGroup.selectAll('rect').attr('stroke-width', '1px');\r\n                        d3.select(_nodes[_index]).attr('stroke-width', '10px');\r\n                        articles.forEach(e => {\r\n                          if (sameArticles.some(e1 => e1.article_id === e.article_id)) {\r\n                            selectedArticles.push(e);\r\n                          }\r\n                        });\r\n                      }\r\n                      console.log('selectedArticles: ', selectedArticles);\r\n                      console.log(sameArticles);\r\n                      rectClick(sameArticles, com);\r\n                      return 0;\r\n                    });\r\n                });\r\n            } else {\r\n              diffAterSame = 1;\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nexport { userActivityView };\r\n","/* eslint-disable no-unused-vars */\r\n/* eslint-disable max-len */\r\n/* eslint-disable no-console */\r\n/* eslint-disable prefer-const */\r\n/* eslint-disable react/prop-types */\r\nimport React from 'react';\r\nimport * as d3 from 'd3';\r\nimport { userActivityView } from './userActivityView';\r\nimport { loading } from '../loading';\r\n\r\nclass UserBehavior extends React.Component {\r\n  componentDidUpdate() {\r\n    const { data } = this.props;\r\n    const userData = data || undefined;\r\n    if (userData) {\r\n      const userSimilaritySvg = d3.select('#timeLine');\r\n      userActivityView(\r\n        userData.beginDate,\r\n        userData.endDate,\r\n        userData.userListArray,\r\n        userSimilaritySvg,\r\n        userData.fixedUserArr,\r\n        userData.articles,\r\n        userData.submit,\r\n      );\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { data } = this.props;\r\n    return (\r\n      <div className=\"opinionLeaderView\">\r\n        <div className=\"heatMap\">\r\n          <div className=\"optionDiv\" style={{ width: '100%', display: 'grid' }}>\r\n            <div className=\"row option d-flex justify-content-start\" style={{ paddingLeft: '10px', width: '100%', display: 'inline' }} />\r\n          </div>\r\n          {/* <div className=\"option\"/> */}\r\n          <div className=\"timeline\" style={{ width: '100%', display: 'grid' }}>\r\n            {/* <svg id=\"timeLine\" width=\"100%\" height=\"100%\" /> */}\r\n            <svg id=\"timeLine\" viewBox=\"0 0 826 755\" />\r\n          </div>\r\n        </div>\r\n        <div className=\"contextDiv\" style={{ display: 'block' }}>\r\n          <div className=\"row align-items-center p-0 col-sm\" style={{ borderBottom: '2px solid slategray' }}>\r\n            <div className=\"col-sm-4\" style={{ padding: 0 }}><p id=\"value-range\" /></div>\r\n            <div className=\"col-sm-8\" style={{ paddingLeft: '10px' }}><div id=\"slider-range\" /></div>\r\n          </div>\r\n          {/* <div className=\"option \" style={{width: '100%', height: '50px', display: 'block', borderBottom: '2px solid slategray' }}/> */}\r\n          <div style={{ height: '100%' }}>\r\n            {/* <svg id=\"context\" width=\"100%\" height=\"100%\" /> */}\r\n            <svg id=\"context\" viewBox=\"0 0 500 1000\" />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default UserBehavior;\r\n","/* eslint-disable no-underscore-dangle */\r\n/* eslint-disable no-console */\r\n/* eslint-disable linebreak-style */\r\n/* eslint-disable react/prop-types */\r\n/* eslint-disable no-unused-vars */\r\n/* eslint-disable no-use-before-define */\r\n/* eslint-disable camelcase */\r\n/* eslint-disable no-param-reassign */\r\nimport * as d3 from 'd3';\r\n\r\nexport default function articleSummaryView(data, svg, $this) {\r\n  svg.selectAll('*').remove();\r\n  // svg.attr('viewBox', '0 0 960 500');\r\n  // console.log(data, svg, $this);\r\n  // const h = parseFloat(d3.select('#articleStatus').style('height'));\r\n  // const w = parseFloat(d3.select('#articleStatus').style('width'));\r\n  const w = 464;\r\n  const h = 229;\r\n  const xScaleWidth = w - 110;\r\n  const timePeriod = 3;\r\n  const yAxisRange = 120;\r\n  // const opinionLeader = nodes.find(e => e.id === $this.state.mouseOverUser);\r\n  const timeScaleObjArr = [];\r\n  timeScale(data, timeScaleObjArr);\r\n\r\n  const numOfArticleScale = d3.scaleLinear()\r\n    .domain([0, 1])\r\n    .range([0, h]);\r\n  let articleIndex = -1; // control each article lines position\r\n  const offset = -60;\r\n  const articleTime = svg.selectAll('g')\r\n    .data([data])\r\n    .enter()\r\n    .append('g')\r\n    .attr('class', 'articles')\r\n    .attr('id', (d, i) => `article_${i}`)\r\n    .attr('transform', () => {\r\n      articleIndex += 1;\r\n      return `translate(40,${150 + articleIndex * 150})`;\r\n    })\r\n    .each((d, index, nodes) => {\r\n      const xAxis = makeXAxis(d);\r\n      const yAxis_left = makeYAxis('left');\r\n      const yAxis_right = makeYAxis('right');\r\n      const line = d3.line()\r\n        .x((m, j) => {\r\n          const time = dateFormat(m);\r\n          const articleYear = new Date(m.articleDate).getFullYear();\r\n          return xScale(m.articleId, new Date(time).setFullYear(articleYear));\r\n        })\r\n        .y((m) => { // set the y values for the line generator\r\n          const commentScoreScale = d3.scaleLinear().domain([0, 100])\r\n            .range([yAxisRange, 0]);\r\n          return commentScoreScale(m.value);\r\n        })\r\n        .curve(d3.curveMonotoneX); // apply smoothing to the line\r\n      const axis = d3.select(nodes[index]);\r\n      const info = axis.append('g');\r\n      info.append('text')\r\n        .text(`Title: ${d.article_title}`)\r\n        .attr('x', 0)\r\n        .attr('y', -130);\r\n      info.append('text')\r\n        .text(`Author: ${d.author}`)\r\n        .attr('x', 0)\r\n        .attr('y', -110);\r\n      info.append('text')\r\n        .text(`Push: ${d.message_count.push}  Boo: ${d.message_count.boo}  →: ${d.message_count.neutral}`)\r\n        .attr('x', 0)\r\n        .attr('y', -90);\r\n      info.append('text')\r\n        .text(d.url)\r\n        .attr('x', 0)\r\n        .attr('y', -70)\r\n        .attr('fill', 'blue')\r\n        .on('mouseover', (_d, i, n) => {\r\n          d3.select(n[i]).attr('text-decoration', 'underline');\r\n        })\r\n        .on('mouseout', (_d, i, n) => {\r\n          d3.select(n[i]).attr('text-decoration', 'none');\r\n        })\r\n        .on('click', () => { window.open(d.url); });\r\n      axis.append('g')\r\n        .attr('transform', `translate(10, ${offset})`)\r\n        .call(yAxis_left)\r\n        .append('text')\r\n        .attr('fill', 'black')\r\n        .attr('font-size', 12)\r\n        .attr('text-anchor', 'middle')\r\n        .attr('transform', `translate(-30, ${yAxisRange / 2}) rotate(-90)`)\r\n        .text('Push - Boo');\r\n      axis.append('g')\r\n        .attr('transform', `translate(${xScaleWidth}, ${offset})`)\r\n        .call(yAxis_right)\r\n        .append('text')\r\n        .attr('fill', 'black')\r\n        .attr('font-size', 12)\r\n        .attr('text-anchor', 'middle')\r\n        .attr('transform', `translate(40, ${yAxisRange / 2}) rotate(-90)`)\r\n        .text('comments per 10 mins');\r\n      axis.append('g')\r\n        .attr('transform', `translate(0, ${offset + yAxisRange})`)\r\n        .call(xAxis)\r\n        .append('g')\r\n        .attr('transform', `translate(0, ${-yAxisRange})`)\r\n        .append('path')\r\n        .datum(makeDataFitLineChart(d)) // 10. Binds data to the line\r\n        .attr('class', 'line') // Assign a class for styling\r\n        .attr('fill', 'none')\r\n        .attr('stroke', 'steelblue')\r\n        .attr('stroke-width', 1.5)\r\n        .attr('d', line); // 11. Calls the line g;\r\n    });\r\n\r\n  const commentTime = articleTime.selectAll('circle')\r\n    .data((d) => {\r\n      const newData = commentTimeData(d);\r\n      const removeOverTimeData = newData.filter((mes) => {\r\n        let t = dateFormat(mes);\r\n        const art = new Date(mes.articleDate).getFullYear();\r\n        t = new Date(t).setFullYear(art);\r\n        if ((new Date(t) - new Date(mes.articleDate)) / (timePeriod * 60 * 60000) < 1) return true;\r\n        return false;\r\n      });\r\n      return removeOverTimeData;\r\n    })\r\n    .enter()\r\n    .append('circle')\r\n    .attr('class', d => `id_${d.push_userid}`)\r\n    .attr('fill', (d) => {\r\n      let color = 'green';\r\n      switch (d.push_tag) {\r\n        case '推':\r\n          color = 'green';\r\n          break;\r\n        case '噓':\r\n          color = 'red';\r\n          break;\r\n        case '→':\r\n          color = 'yellow';\r\n          break;\r\n        default:\r\n          break;\r\n      }\r\n      return color;\r\n    })\r\n    .attr('r', 3)\r\n    .attr('cx', (d) => {\r\n      const time = dateFormat(d);\r\n      const articleYear = new Date(d.articleDate).getFullYear();\r\n      return xScale(d.articleId, new Date(time).setFullYear(articleYear));\r\n    })\r\n    .attr('cy', (d) => {\r\n      let value = d.value > 150 ? 150 : d.value;\r\n      value = d.value < -150 ? -150 : value;\r\n      return yScale(d.articleId, value) + offset;\r\n    })\r\n    .attr('stroke', 'black')\r\n    .attr('stroke-width', '0.5px');\r\n\r\n  commentTime.append('title')\r\n    .text(d => d.push_ipdatetime);\r\n\r\n  const linkCoordinateWithSameUser = [];\r\n\r\n  svg.selectAll('.articles')\r\n    .each((d, i, n) => {\r\n      d3.select(n[i]).selectAll('circle')\r\n        .each((_d, _i, _n) => {\r\n          const x = parseFloat(d3.select(_n[_i]).attr('cx'));\r\n          const y = parseFloat(d3.select(_n[_i]).attr('cy'));\r\n          d3.selectAll('.articles').each((d2, i2, n2) => {\r\n            // console.log(d2);\r\n            d3.select(n2[i2]).selectAll(`.id_${_d.push_userid}`).each((_d2, _i2, _n2) => {\r\n              // console.log(d3.select(this).attr('cx'));\r\n              if (i < i2) {\r\n                linkCoordinateWithSameUser.push({\r\n                  class: `id_${_d.push_userid}`,\r\n                  x1: x,\r\n                  y1: y + (100 + (i * 130)),\r\n                  x2: parseFloat(d3.select(_n2[_i2]).attr('cx')),\r\n                  y2: parseFloat(d3.select(_n2[_i2]).attr('cy')) + (100 + (i2 * 130)),\r\n                });\r\n              }\r\n            });\r\n          });\r\n        });\r\n    });\r\n\r\n  svg.append('g')\r\n    .attr('class', 'link')\r\n    .attr('transform', 'translate(40,0)')\r\n    .selectAll('line')\r\n    .data(linkCoordinateWithSameUser)\r\n    .enter()\r\n    .append('line')\r\n    .attr('class', d => d.class)\r\n    .attr('x1', d => d.x1)\r\n    .attr('y1', d => d.y1)\r\n    .attr('x2', d => d.x2)\r\n    .attr('y2', d => d.y2)\r\n    .attr('stroke', 'gray')\r\n    .attr('stroke-opacity', 0.1)\r\n    .attr('stroke-width', 1);\r\n\r\n  function dateFormat(mes) {\r\n    let dat = '';\r\n    const splitedDate = mes.push_ipdatetime.split(' ');\r\n    if (splitedDate.length === 3) {\r\n      dat = dat.concat('', splitedDate[1]);\r\n      dat = dat.concat(' ', splitedDate[2]);\r\n      return dat;\r\n    }\r\n    return mes.push_ipdatetime;\r\n  }\r\n\r\n  function timeScale(d, arr) {\r\n    const begin = new Date(d.date);\r\n    const afterThreeDays = new Date(d.date);\r\n    afterThreeDays.setHours(begin.getHours() + timePeriod);\r\n\r\n    const scaleX = d3.scaleTime().domain([begin, afterThreeDays]).range([10, w - 100]);\r\n    const scaleY = d3.scaleLinear().domain([-150, 150]).range([yAxisRange, 0]);\r\n    arr.push({ article_id: d.article_id, scaleX, scaleY });\r\n  }\r\n\r\n  function xScale(id, date) {\r\n    const { scaleX } = timeScaleObjArr.find(e => e.article_id === id);\r\n    return scaleX(date);\r\n  }\r\n\r\n  function yScale(id, date) {\r\n    const { scaleY } = timeScaleObjArr.find(e => e.article_id === id);\r\n    return scaleY(date);\r\n  }\r\n\r\n  function makeXAxis(d) {\r\n    const articleDate = new Date(d.date);\r\n    const afterSixHours = new Date(d.date);\r\n    afterSixHours.setHours(articleDate.getHours() + timePeriod);\r\n    const commentTimeScale = d3.scaleTime().domain([articleDate, afterSixHours])\r\n      .range([10, w - 110]);\r\n    const afterArticlePostTimeFormat = (date) => {\r\n      const dateMinusPostTime = d3.timeMinute.count(articleDate, new Date(date));\r\n      return `${Math.floor(dateMinusPostTime / 60)}h${dateMinusPostTime % 60}m`;\r\n    };\r\n    return d3.axisBottom(commentTimeScale)\r\n      .ticks(3).tickFormat(date => afterArticlePostTimeFormat(date));\r\n  }\r\n\r\n  function makeYAxis(direction) {\r\n    if (direction === 'left') {\r\n      const commentScoreScale = d3.scaleLinear().domain([-150, 150])\r\n        .range([yAxisRange, 0]);\r\n      return d3.axisLeft(commentScoreScale).ticks(7);\r\n    } if (direction === 'right') {\r\n      const commentScoreScale = d3.scaleLinear().domain([0, 100])\r\n        .range([yAxisRange, 0]);\r\n      return d3.axisRight(commentScoreScale).ticks(5);\r\n    }\r\n    return null;\r\n  }\r\n\r\n  function makeDataFitLineChart(d) {\r\n    const newData = JSON.parse(JSON.stringify(d));\r\n    newData.messages.forEach((mes) => {\r\n      mes.articleId = d.article_id;\r\n      mes.articleDate = d.date;\r\n      mes.value = 1;\r\n    });\r\n    // date type need to preprocess ip format\r\n    for (let i = 0; i < newData.messages.length; i += 1) {\r\n      for (let j = i + 1; j < newData.messages.length; j += 1) {\r\n        const pre = newData.messages[i];\r\n        const nex = newData.messages[j];\r\n        const preTime = dateFormat(pre);\r\n        const nexTime = dateFormat(nex);\r\n        if (new Date(nexTime) - new Date(preTime) > 300000) break;\r\n        pre.value += nex.value;\r\n        newData.messages.splice(j, 1);\r\n        j -= 1;\r\n      }\r\n    }\r\n    const message = newData.messages.filter((mes) => {\r\n      let t = dateFormat(mes);\r\n      const art = new Date(mes.articleDate).getFullYear();\r\n      t = new Date(t).setFullYear(art);\r\n      if ((new Date(t) - new Date(mes.articleDate)) / (timePeriod * 60 * 60000) < 1) return true;\r\n      return false;\r\n    });\r\n    return message;\r\n  }\r\n\r\n  function commentTimeData(d) {\r\n    const newData = JSON.parse(JSON.stringify(d));\r\n    newData.messages.forEach((mes) => {\r\n      mes.articleId = d.article_id;\r\n      mes.articleDate = d.date;\r\n      switch (mes.push_tag) {\r\n        case '推':\r\n          mes.value = 1;\r\n          break;\r\n        case '噓':\r\n          mes.value = -1;\r\n          break;\r\n        case '→':\r\n          mes.value = 0;\r\n          break;\r\n        default:\r\n          break;\r\n      }\r\n    });\r\n\r\n    for (let i = 0; i < newData.messages.length - 1; i += 1) {\r\n      const pre = newData.messages[i];\r\n      const nex = newData.messages[i + 1];\r\n      nex.value += pre.value;\r\n    }\r\n    return newData.messages;\r\n  }\r\n}\r\n\r\nexport { articleSummaryView };\r\n","/* eslint-disable max-len */\r\n/* eslint-disable no-underscore-dangle */\r\n/* eslint-disable no-console */\r\n/* eslint-disable linebreak-style */\r\n/* eslint-disable react/prop-types */\r\n/* eslint-disable no-unused-vars */\r\n/* eslint-disable no-use-before-define */\r\n/* eslint-disable camelcase */\r\n/* eslint-disable no-param-reassign */\r\n// import React, { Component, PureComponent } from 'react';\r\n// import PropTypes from 'prop-types';\r\n// import { connect } from 'react-redux';\r\n// import { push } from 'react-router-redux';\r\nimport * as d3 from 'd3';\r\n// import * as sententree from 'sententree';\r\n// import { max } from 'moment';\r\n// import { Row, Form } from 'antd';\r\n// eslint-disable-next-line import/no-unresolved\r\n// import netClustering from 'netclustering';\r\n// import * as jsnx from 'jsnetworkx';\r\n// import Chart from 'react-google-charts';\r\nimport { articleSummaryView } from '../userBehaviorView/articleSummaryView';\r\n// import fetch from '../../../reducers/fetch';\r\n// import jieba from 'nodejieba';\r\n\r\nexport default function treemap(cellNodes, svg, submit) {\r\n  const margin = {\r\n    top: 10, right: 10, bottom: 10, left: 10,\r\n  };\r\n  const w = parseFloat(d3.select('.treemap').style('width'));\r\n  const h = parseFloat(d3.select('.treemap').style('height'));\r\n  const width = w - margin.left - margin.right;\r\n  const height = h - margin.top - margin.bottom;\r\n  const mostUserNum = 1000;\r\n  // append the svg object to the body of the page\r\n  svg.selectAll('*').remove();\r\n  d3.select('.treemap').selectAll('div').remove();\r\n  const articleTreemap = svg.append('g')\r\n    .attr('transform',\r\n      `translate(${margin.left},${margin.top})`);\r\n  const selectedArticleNodes = [];\r\n  const data = { children: [] };\r\n  const authorNodes = cellNodes.filter(e => e.responder);\r\n  authorNodes.sort((a, b) => b.pageRank - a.pagrRank);\r\n  const articleNodes = [];\r\n  authorNodes.forEach(u => {\r\n    u.responder.forEach(a => {\r\n      if (!articleNodes.some(_a => _a.article_id === a.articleId)) {\r\n        articleNodes.push({\r\n          article_id: a.articleId, ...a,\r\n        });\r\n      }\r\n    });\r\n  });\r\n  const top20Authors = authorNodes.filter((d, index) => index < 20);\r\n  top20Authors.forEach(n => {\r\n    const articles = [];\r\n    let totalComments = 0;\r\n    n.responder.forEach(a => {\r\n      totalComments += a.messages.length;\r\n    });\r\n    n.responder.forEach(a => {\r\n      articles.push({\r\n        name: a.article_title,\r\n        id: a.article_id,\r\n        group: 'A',\r\n        value: (a.messages.length * n.pageRank) / totalComments,\r\n        message_count: a.message_count,\r\n        colname: 'level3',\r\n        messages: a.messages.slice(0, mostUserNum),\r\n        tag: 0,\r\n      });\r\n    });\r\n    data.children.push({ name: n.id, children: articles });\r\n  });\r\n  // Give the data to this cluster layout:\r\n  const root = d3.hierarchy(data).sum(d => d.value); // Here the size of each leave is given in the 'value' field in input data\r\n  // Then d3.treemap computes the position of each element of the hierarchy\r\n  // console.log(width, height);\r\n  d3.treemap()\r\n    .size([w, h])\r\n    // .paddingTop(15)\r\n    // .paddingRight(10)\r\n    .paddingInner(0)(root);\r\n\r\n  // prepare a color scale\r\n  const color = d3.scaleOrdinal()\r\n    .domain(['boss1', 'boss2', 'boss3'])\r\n    .range(d3.schemeTableau10);\r\n\r\n  // And a opacity scale\r\n  const opacity = d3.scaleLinear()\r\n    .domain([0, 1])\r\n    .range([0.5, 1]);\r\n\r\n  // use this information to add rectangles:\r\n  d3.select('.treemap')\r\n    .datum(root)\r\n    .selectAll()\r\n    .data(root.leaves())\r\n    .enter()\r\n    .append('div')\r\n    .attr('class', 'node')\r\n    .style('position', 'absolute')\r\n    .style('overflow', 'hidden')\r\n    .style('left', d => `${d.x0}px`)\r\n    .style('top', d => `${d.y0}px`)\r\n    .style('width', d => `${Math.max(0, d.x1 - d.x0 - 1)}px`)\r\n    .style('height', d => {\r\n      if (Math.max(0, d.x1 - d.x0 - 1) <= 1) return '0px';\r\n      return `${Math.max(0, d.y1 - d.y0 - 1)}px`;\r\n    })\r\n    .style('background', d => color(d.parent.data.name))\r\n    .style('border', '1px solid black')\r\n    .on('click', (d, index, nodes) => articleNodeClicked(d, d.data.id, index, nodes))\r\n    .append('title')\r\n    .text(d => {\r\n      const title = d.data.name.replace('mister_', '');\r\n      return title;\r\n    });\r\n  // .text(d => d.data.name);\r\n  // articleTreemap\r\n  //   .selectAll('rect')\r\n  //   .data(root.leaves())\r\n  //   .enter()\r\n  // .append('rect')\r\n  // .attr('x', d => d.x0)\r\n  // .attr('y', d => d.y0)\r\n  // // .attr('rx', d => Math.min(d.x1 - d.x0, d.y1 - d.y0) / 20)\r\n  // // .attr('ry', d => Math.min(d.x1 - d.x0, d.y1 - d.y0) / 20)\r\n  // .attr('width', d => d.x1 - d.x0)\r\n  // .attr('height', d => d.y1 - d.y0)\r\n  // .style('stroke', 'black')\r\n  // .style('fill', d => color(d.parent.data.name))\r\n  // .style('opacity', d => opacity(d.data.value))\r\n  // .on('click', (d, index, nodes) => articleNodeClicked(d, d.data.id, index, nodes))\r\n  // .append('title')\r\n  // .text((d) => {\r\n  //   const title = d.data.name.replace('mister_', '');\r\n  //   return title;\r\n  // });\r\n\r\n  // and to add the text labels\r\n  articleTreemap\r\n    .selectAll('text')\r\n    .data(root.leaves())\r\n    .enter()\r\n    // .append('text')\r\n    // .attr('x', d => d.x0 + 5) // +10 to adjust position (more right)\r\n    // .attr('y', d => d.y0 + 15) // +20 to adjust position (lower)\r\n    // .text((d) => {\r\n    //   const length = d.x1 - d.x0;\r\n    //   const title = d.data.name.replace('mister_', '');\r\n    //   if (title.length > 10) {\r\n    //     const shortTitle = title.slice(0, 10 + ((length - 150) / 20));\r\n    //     return shortTitle;\r\n    //   }\r\n    //   return title;\r\n    //   // const name = d.data.name.split(' ')[0];\r\n    //   // return name;\r\n    // })\r\n    // .attr('font-size', '11px')\r\n    // .attr('fill', 'white')\r\n    .append('title')\r\n    .text(d => {\r\n      const title = d.data.name.replace('mister_', '');\r\n      return title;\r\n    });\r\n\r\n  // and to add the text labels\r\n  articleTreemap\r\n    .selectAll('vals')\r\n    .data(root.leaves())\r\n    .enter()\r\n    .append('text')\r\n    .attr('x', d => d.x0 + 5) // +10 to adjust position (more right)\r\n    .attr('y', d => d.y0 + 35) // +20 to adjust position (lower)\r\n    .text(d => {\r\n      // const { message_count } = d.data;\r\n      // return `Total Comment: ${message_count[0].count + message_count[1].count + message_count[2].count}<br>\r\n      //   push: ${message_count[0].count}, boo: ${message_count[1].count}, neutral: ${message_count[2].count}`;\r\n    })\r\n    .attr('font-size', '8px')\r\n    .attr('fill', 'white');\r\n\r\n  // Add title for the 3 groups\r\n  d3.select('.treemap')\r\n    .selectAll()\r\n    .data(root.descendants().filter(d => d.depth === 1))\r\n    .enter()\r\n    .append('div')\r\n    .style('position', 'absolute')\r\n    .style('overflow', 'hidden')\r\n    .style('text-align', 'center')\r\n    .style('left', d => `${Math.max(0, (d.x1 + d.x0) / 2 - Math.max(0, d.x1 - d.x0 - 11) / 2)}px`)\r\n    .style('top', d => `${Math.max(0, d.y1 + d.y0) / 2 - 9}px`)\r\n    .style('width', d => `${Math.max(0, d.x1 - d.x0 - 11)}px`)\r\n    .style('height', d => ((d.y1 - d.y0) > 20 ? '20px' : '0px'))\r\n    .attr('fill', d => color(d.data.name))\r\n    .append('p')\r\n    .text(d => {\r\n      const name = d.data.name.split(' ')[0];\r\n      return name;\r\n    })\r\n    .style('color', 'black')\r\n    .attr('font-size', '12px')\r\n    .style('font-weight', 800)\r\n    .style('-webkit-text-stroke', '0.5px white');\r\n  // articleTreemap\r\n  //   .selectAll('titles')\r\n  //   .data(root.descendants().filter(d => d.depth === 1))\r\n  //   .enter()\r\n  //   .append('text')\r\n  //   .attr('x', d => d.x0)\r\n  //   .attr('y', d => d.y0 + 11)\r\n  //   .text((d) => {\r\n  //     const name = d.data.name.split(' ')[0];\r\n  //     return name;\r\n  //   })\r\n  //   .attr('font-size', '12px')\r\n  //   .attr('fill', d => color(d.data.name));\r\n  let selectedUser = [];\r\n\r\n  function articleNodeClicked(d, article_id, index, nodes) {\r\n    const commentTimelineSvg = d3.select('#articleStatus');\r\n    // console.log(articleNodes);\r\n    const article = articleNodes.find(e => e.article_id === article_id);\r\n    articleSummaryView(article, commentTimelineSvg, data.$this);\r\n    const clickType = d3.select('input[name=\"set\"]:checked').property('value');\r\n    // submit(d);\r\n    // const adj = cellLinks.filter(e => e.target.index === d.index);\r\n    // const index = selectedArticleNodes.findIndex(e => e === d.title);\r\n    // if (index !== -1) selectedArticleNodes.splice(index, 1);\r\n    // else if (!d.containUsers) selectedArticleNodes.push(d.title);\r\n    // // article nodes\r\n    // adj.forEach((n) => {\r\n    //   const data = d3.selectAll(`circle.nodes.circle_${n.source.index}`).data();\r\n    //   data.forEach((e) => {\r\n    //     e.tag += index === -1 ? 1 : -1;\r\n    //   });\r\n    //   d3.selectAll('circle.nodes')\r\n    //     .style('stroke', e => (e.tag === selectedArticleNodes.length ? 'red' : 'black'))\r\n    //     .style('stroke-width', e => (e.tag === selectedArticleNodes.length ? 2 : 1))\r\n    //     .style('stroke-opacity', 0.6);\r\n    // });\r\n\r\n    // // push userid to selectedUser (intersection)\r\n    // if (d.data.tag === 0) {\r\n    //   if (selectedUser.length === 0) {\r\n    //     console.log('push');\r\n    //     console.log(d.data.messages);\r\n    //     d.data.messages.forEach((e) => {\r\n    //       if (!selectedUser.some(id => id === e.push_userid)) {\r\n    //         selectedUser.push(e.push_userid);\r\n    //       }\r\n    //     });\r\n    //   } else {\r\n    //     selectedUser = selectedUser.filter(e => d.data.messages.some(m => e === m.push_userid));\r\n    //   }\r\n    // }\r\n\r\n    // // push userid to selectedUser (union)\r\n    if (d.data.tag === 0) {\r\n      d3.select(nodes[index])\r\n        .style('background', 'black');\r\n      d.data.tag = 1;\r\n      // console.log('push');\r\n      selectedArticleNodes.push(article_id);\r\n      if (clickType === 'union') {\r\n        d.data.messages.forEach(e => {\r\n          if (!selectedUser.some(u => u.id === e.push_userid)) {\r\n            selectedUser.push({ id: e.push_userid, group: selectedArticleNodes.length });\r\n          }\r\n        });\r\n      } else if (clickType === 'intersection' && selectedUser.length > 0) {\r\n        // intersection\r\n        console.log('intersection');\r\n        selectedUser = selectedUser.filter(e => d.data.messages.some(e1 => e1.push_userid === e.id));\r\n      } else {\r\n        d.data.messages.forEach(e => {\r\n          if (!selectedUser.some(u => u.id === e.push_userid)) {\r\n            selectedUser.push({ id: e.push_userid, group: selectedArticleNodes.length });\r\n          }\r\n        });\r\n      }\r\n    } else {\r\n      d3.select(nodes[index])\r\n        .style('background', color(d.parent.data.name));\r\n      d.data.tag = 0;\r\n      selectedUser = selectedUser.filter(e => !d.data.messages.some(mes => mes.push_userid === e.id));\r\n    }\r\n    // console.log(cellNodes);\r\n    drawSelectedUserTable(selectedUser);\r\n  }\r\n\r\n  function drawSelectedUserTable(nodes) {\r\n    const userArr = nodes;\r\n    const selectedUserDiv = d3.selectAll('.selectedUserTable');\r\n    selectedUserDiv.selectAll('*').remove();\r\n\r\n    const buttonDiv = selectedUserDiv.append('div')\r\n      .attr('class', 'p-1 d-flex justify-content-center')\r\n      .attr('id', 'submitDiv');\r\n    buttonDiv.append('button')\r\n      .style('type', 'button')\r\n      .style('padding', '2px')\r\n      .attr('class', 'btn btn-primary')\r\n      .attr('id', 'submitUsers')\r\n      .text('Get Activity!')\r\n      .on('click', d => {\r\n        const test = [];\r\n        d3.selectAll('.userDataRow')\r\n          .each((_d, _index, _nodes) => {\r\n            test.push(d3.select(_nodes[_index]).selectAll('td').data()[0]);\r\n          });\r\n        selectedUserClick(test);\r\n      });\r\n\r\n    let network_h = parseFloat(d3.select('.selectedUserTable.d-flex.flex-column').style('height'));\r\n    network_h -= parseFloat(d3.select('#submitDiv').style('height'));\r\n    const tableDiv = selectedUserDiv.append('div')\r\n      .style('border', 'gray 1px solid')\r\n      .style('border-right', '0px')\r\n      .style('border-bottom', '0px')\r\n      .style('border-radius', '5px')\r\n      .style('max-height', `${parseInt(network_h, 10)}px`)\r\n      .style('overflow-y', 'scroll');\r\n    const table = tableDiv.append('table');\r\n    table.append('tr').append('td')\r\n      .text(`ID(${userArr.length})`)\r\n      .style('background', d3.schemeTableau10[0])\r\n      .style('color', 'white');\r\n    const tr = table.selectAll('tr.user')\r\n      .data(userArr)\r\n      .enter()\r\n      .append('tr')\r\n      .attr('class', 'userDataRow')\r\n      .style('padding', '0px')\r\n      .append('td')\r\n      .text(d => d.id)\r\n      .on('click', d => {\r\n        clickUserTable(d, userArr);\r\n      });\r\n\r\n    d3.selectAll('.userDataRow').filter(':nth-child(even)')\r\n      .style('background', 'whitesmoke');\r\n  }\r\n\r\n  function clickUserTable(d, arr) {\r\n    const index = arr.findIndex(e => e.id === d.id);\r\n    arr.splice(index, 1);\r\n    drawSelectedUserTable(arr);\r\n  }\r\n\r\n  function selectedUserClick(d) {\r\n    // console.log(d);\r\n    submit(d);\r\n  }\r\n}\r\n\r\nexport { treemap };\r\n","/* eslint-disable no-undef */\r\n/* eslint-disable max-len */\r\n/* eslint-disable no-underscore-dangle */\r\n/* eslint-disable no-console */\r\n/* eslint-disable linebreak-style */\r\n/* eslint-disable react/prop-types */\r\n/* eslint-disable no-unused-vars */\r\n/* eslint-disable no-use-before-define */\r\n/* eslint-disable camelcase */\r\n/* eslint-disable no-param-reassign */\r\nimport React, { Component } from 'react';\r\n// import PropTypes from 'prop-types';\r\n// import { connect } from 'react-redux';\r\n// import { push } from 'react-router-redux';\r\nimport * as d3 from 'd3';\r\n// eslint-disable-next-line import/no-unresolved\r\nimport { AuthorTable } from './opinionLeaderView/authorTable';\r\nimport UserBehavior from './userBehaviorView/uerBehavior';\r\nimport { treemap } from './opinionLeaderView/opinionleaderTreemap';\r\nimport { loading } from './loading';\r\n// import request from 'request';\r\n\r\nclass Graph extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.myRef = React.createRef();\r\n    this.state = {\r\n      ...props,\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    // console.log(this.props.name);\r\n    // console.log('vis_DidMount');\r\n  }\r\n\r\n  // componentWillReceiveProps(nextProps) {\r\n  //   const { word } = this.props;\r\n  //   // console.log(nextProps.word, word);\r\n  //   if (JSON.stringify(nextProps.word) !== JSON.stringify(word)) {\r\n  //     console.log('componentWillReceiveProps');\r\n  //     this.setState({ word: nextProps.word });\r\n  //   }\r\n  // }\r\n\r\n  shouldComponentUpdate(nextProps, nextState) {\r\n    const { set: thisSet } = this.props;\r\n    const { set: nextSet } = nextProps;\r\n    const { userData: thisUserData } = this.state;\r\n    const { userData: nextUserData } = nextState;\r\n\r\n    if (!thisSet && !nextSet) {\r\n      console.log('No Update!');\r\n      return false;\r\n    }\r\n\r\n    if (!thisSet && nextSet) {\r\n      this.props = nextProps;\r\n      console.log('update');\r\n      this.drawwithlabels();\r\n      return true;\r\n    }\r\n\r\n    if (thisSet.length !== nextSet.length || !thisSet.every((e, index) => e.id === nextSet[index].id)) {\r\n      this.props = nextProps;\r\n      console.log('Update');\r\n      this.drawwithlabels();\r\n      return true;\r\n    }\r\n\r\n    if (!thisUserData && nextUserData) {\r\n      console.log('Update');\r\n      return true;\r\n    }\r\n    if (thisUserData && nextUserData) {\r\n      const thisBeginDate = JSON.stringify(thisUserData.beginDate);\r\n      const nextBeginDate = JSON.stringify(nextUserData.beginDate);\r\n      if (thisBeginDate !== nextBeginDate) {\r\n        console.log('Update');\r\n        return true;\r\n      }\r\n\r\n      const thisEndDate = JSON.stringify(thisUserData.endDate);\r\n      const nextEndDate = JSON.stringify(nextUserData.endDate);\r\n      if (thisEndDate !== nextEndDate) {\r\n        console.log('Update');\r\n        return true;\r\n      }\r\n\r\n      if (JSON.stringify(thisUserData.fixedUserArr) !== JSON.stringify(nextUserData.fixedUserArr)) {\r\n        console.log('Update');\r\n        return true;\r\n      }\r\n    }\r\n\r\n    console.log('No Update!');\r\n    return false;\r\n  }\r\n\r\n  drawwithlabels() {\r\n    const refData = this.props;\r\n    function handleSubmit(e, type = 1) {\r\n      function getReqstr(id, begin, end) {\r\n        const boardname = d3.select('#pagename1').attr('value');\r\n        const beginDate = d3.select('#date1').attr('value');\r\n        const endDate = d3.select('#date2').attr('value');\r\n        const searchBegin = begin || beginDate;\r\n        const searchEnd = end || endDate;\r\n        const {\r\n          menuprops: {\r\n            initParameter: {\r\n              var1: varname1, min1: minvar1, max1: maxvar1, posttype,\r\n            },\r\n            initPage1: {\r\n              pagename: pagename1,\r\n              contentfilter: keyword3,\r\n            },\r\n          },\r\n        } = refData.opState;\r\n\r\n        // make url string for request data\r\n        const strminvar1 = `min${varname1}=${minvar1}` || '';\r\n        const strmaxvar1 = `max${varname1}=${maxvar1}` || '';\r\n        const strposttype = `posttype=${posttype}` || '';\r\n        const strpage1 = `page1=${boardname}` || '';\r\n        const strtime1 = `time1=${searchBegin}` || '';\r\n        const strtime2 = `time2=${searchEnd}` || '';\r\n        const struser1 = `user1=${id}` || '';\r\n        const strauthor1 = `author1=${''}` || '';\r\n        const strkeyword1 = `keyword1=${''}` || '';\r\n        const strkeyword3 = `keyword3=${keyword3}` || '';\r\n        const stractivity = `activity=${1}` || '';\r\n        const searchurl = '/searching?';\r\n        const str = `${searchurl + strminvar1}&${strmaxvar1}&${strposttype}&`\r\n        + `${strpage1}&${strtime1}&${strtime2}&${strauthor1}&${struser1}&${strkeyword1}&${strkeyword3}&${stractivity}&`;\r\n        return str;\r\n      }\r\n      // e.preventDefault();\r\n      const beginDate = type === 1 ? d3.select('#date1').attr('value') : d3.select('#userDate1').property('value');\r\n      const endDate = type === 1 ? d3.select('#date2').attr('value') : d3.select('#userDate2').property('value');\r\n      console.log(`beginDate: ${beginDate}, endDate: ${endDate}`);\r\n      const myRequest = [];\r\n      // split date into many pieces by one day\r\n      const fixedUserArr = e.map(usr => usr.id || usr);\r\n      const url = [];\r\n      const betweenDate = (new Date(endDate) - new Date(beginDate)) / (1000 * 3600 * 24);\r\n      for (let i = 0; i < betweenDate; i += 5) {\r\n        const newBeginDate = new Date(beginDate);\r\n        const newEndDate = new Date(beginDate);\r\n        newBeginDate.setDate(newBeginDate.getDate() + i);\r\n        newBeginDate.setHours(0, 0, 0);\r\n        newEndDate.setDate(newEndDate.getDate() + (i + 5));\r\n        newEndDate.setHours(23, 59, 59);\r\n        if (new Date(newEndDate) > new Date(endDate)) url.push(encodeURI(getReqstr(fixedUserArr, newBeginDate, new Date(endDate))));\r\n        else url.push(encodeURI(getReqstr(fixedUserArr, newBeginDate, newEndDate)));\r\n      }\r\n      url.forEach(u => {\r\n        myRequest.push(new Request(u, {\r\n          method: 'get',\r\n        }));\r\n      });\r\n      const userSimilaritySvg = d3.select('#timeLine');\r\n      loading(0, myRequest.length, userSimilaritySvg);\r\n      const resArr = { articles: [], userListArray: [] };\r\n\r\n      function recursiveFetch(req, index) {\r\n        fetch(req[index])\r\n          .then(response => response.json())\r\n          .then(response => {\r\n            // concat userlist because spliting user\r\n            // resArr.userListArray = resArr.userListArray.concat(response.userListArray);\r\n\r\n            // concat user repliedArticle because spliting date\r\n            for (let i = 0; i < resArr.userListArray.length; i += 1) {\r\n              const existedUser = resArr.userListArray[i];\r\n              const responseUser = response.userListArray[i];\r\n              existedUser.totalReplyCount += responseUser.totalReplyCount;\r\n              existedUser.repliedArticle = existedUser.repliedArticle.concat(responseUser.repliedArticle);\r\n              responseUser.titleWordScore.forEach(wordList => {\r\n                const wordScore = existedUser.titleWordScore.find(wl => wl.word === wordList.word);\r\n                if (wordScore) {\r\n                  wordScore.score += wordList.score;\r\n                } else {\r\n                  existedUser.titleWordScore.push(wordList);\r\n                }\r\n              });\r\n            }\r\n            // remove duplicated articles\r\n            response.articles.forEach(a => {\r\n              if (!resArr.articles.some(_a => _a.article_id === a.article_id)) {\r\n                resArr.articles.push(a);\r\n              }\r\n            });\r\n            // remove messages which pushUserid is not included in request users\r\n            resArr.articles.forEach(a => {\r\n              a.messages = a.messages.filter(mes => e.some(usr => usr.id === mes.push_userid));\r\n            });\r\n            loading((index + 1), myRequest.length, userSimilaritySvg);\r\n            if (myRequest.length === index + 1) {\r\n              resArr.userListArray.forEach(usr => {\r\n                usr.orig_group = e.find(u => u.id === usr.id).group;\r\n              });\r\n              const userIdArr = e.map(usr => usr.id);\r\n              $this.setState({\r\n                userData: {\r\n                  beginDate,\r\n                  endDate,\r\n                  userListArray: resArr.userListArray,\r\n                  fixedUserArr: userIdArr,\r\n                  articles: resArr.articles,\r\n                  submit: handleSubmit,\r\n                },\r\n              });\r\n            }\r\n            return response;\r\n          })\r\n          .then(() => {\r\n            if (req.length > index + 1) recursiveFetch(req, index + 1);\r\n          })\r\n          .catch(err => {\r\n            console.log(err);\r\n          });\r\n      }\r\n      const i = 0;\r\n      fetch(myRequest[0])\r\n        .then(response => response.json())\r\n        .then(response => {\r\n          resArr.articles = response.articles;\r\n          resArr.userListArray = response.userListArray;\r\n          resArr.articles.forEach(a => {\r\n            a.messages = a.messages.filter(mes => e.some(usr => usr.id === mes.push_userid));\r\n          });\r\n          loading((i + 1), myRequest.length, userSimilaritySvg);\r\n          if (myRequest.length === i + 1) {\r\n            response.userListArray.forEach(usr => {\r\n              usr.orig_group = e.find(u => u.id === usr.id).group;\r\n            });\r\n            $this.setState({\r\n              userData: {\r\n                beginDate,\r\n                endDate,\r\n                userListArray: response.userListArray,\r\n                fixedUserArr,\r\n                articles: response.articles,\r\n                submit: handleSubmit,\r\n              },\r\n            });\r\n          }\r\n          return response;\r\n        })\r\n        .then(() => {\r\n          if (myRequest.length > i + 1) recursiveFetch(myRequest, i + 1);\r\n        })\r\n        .catch(err => {\r\n          userSimilaritySvg.append('text')\r\n            .text(`${err}. Reduce the amount of users being queried`)\r\n            .attr('x', 100)\r\n            .attr('y', 200)\r\n            .attr('font-size', 20)\r\n            .attr('fill', 'red');\r\n        });\r\n    }\r\n    console.log('draw');\r\n    console.log('this.props', this.props);\r\n    const $this = this;\r\n    const { set: propsSet } = this.props;\r\n    const set = JSON.parse(JSON.stringify(propsSet));\r\n    if (!set.length) return;\r\n    const authorSet = set;\r\n    const authorTable = d3.select('#authorList');\r\n    AuthorTable(authorSet, authorTable, this, (n, index) => {\r\n      const articleCellSvg = d3.select('#graph');\r\n      treemap(n, articleCellSvg, handleSubmit);\r\n    });\r\n  }\r\n\r\n  render() {\r\n    console.log('render: ', this.state);\r\n    const { userData } = this.state;\r\n    const $this = this;\r\n    return (\r\n      <div className=\"graph\" ref={this.myRef}>\r\n        <div className=\"network\">\r\n          <div className=\"termMap\">\r\n            <div className=\"termMapFilter\">\r\n              <div style={{ marginLeft: '10px', alignSelf: 'center', fontSize: 'x-small' }}>\r\n                <div style={{ display: 'flex' }}>\r\n                  <fieldset style={{ display: 'flex' }}>\r\n                    <label htmlFor=\"union\">\r\n                      union:\r\n                      <input\r\n                        checked\r\n                        type=\"radio\"\r\n                        id=\"union\"\r\n                        name=\"set\"\r\n                        value=\"union\"\r\n                      />\r\n                    </label>\r\n                    <label htmlFor=\"intersection\">\r\n                      intersection:\r\n                      <input\r\n                        type=\"radio\"\r\n                        id=\"intersection\"\r\n                        name=\"set\"\r\n                        value=\"intersection\"\r\n                      />\r\n                    </label>\r\n                  </fieldset>\r\n                  <fieldset>\r\n                    <label htmlFor=\"intersection\">\r\n                      full cal:\r\n                      <input\r\n                        chekced\r\n                        type=\"checkbox\"\r\n                        id=\"quickTest\"\r\n                        name=\"pageRank\"\r\n                        value=\"quickTest\"\r\n                      />\r\n                    </label>\r\n                  </fieldset>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className=\"treemap\" style={{ position: 'relative' }}>\r\n              <svg id=\"graph\" width=\"100%\" height=\"100%\" style={{}} />\r\n            </div>\r\n          </div>\r\n          <div className=\"selectedUserTable d-flex flex-column\" />\r\n          <div className=\"authorList\" id=\"authorList\" style={{ overflowY: 'scroll' }} />\r\n          <div className=\"articleStatus\">\r\n            <svg id=\"articleStatus\" viewBox=\"0 0 468 275\" />\r\n          </div>\r\n        </div>\r\n        <UserBehavior data={userData} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Graph;\r\n","/* eslint-disable no-unused-vars */\r\n/* eslint-disable no-console */\r\n/* eslint-disable max-len */\r\n// @flow\r\nimport React from 'react';\r\nimport Lodash from 'lodash';\r\nimport { Provider } from 'react-redux';\r\nimport Menu from './menu';\r\nimport Loading from './loading';\r\n// import './style/bbs.css';\r\nimport Graph from './graph';\r\n\r\nclass Grid extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      isLoading: false,\r\n      responseError: false,\r\n      errorType: '',\r\n      menuprops: {\r\n        initParameter: {\r\n          var1: 'reaction',\r\n          min1: '0',\r\n          max1: '',\r\n          var2: 'comment',\r\n          min2: '0',\r\n          max2: '',\r\n          posttype: 'PTT',\r\n        },\r\n        initPage1: {\r\n          pagename: 'Gossiping',\r\n          since: '2020-07-20',\r\n          until: '2020-07-21',\r\n          wordfilter: '吳益政',\r\n          idfilter: '',\r\n          contentfilter: '',\r\n          authorfilter: '',\r\n          commentfilter: 1,\r\n        },\r\n        submitType: 'All',\r\n      },\r\n      visprops: {\r\n        list: [],\r\n        date: [{ $gte: '', $lt: '' }],\r\n        word: [['']],\r\n      },\r\n    };\r\n\r\n    this.getFilename = this.getFilename.bind(this);\r\n    this.getReqstr = this.getReqstr.bind(this);\r\n    this.changeList = this.changeList.bind(this);\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n    this.handleTab = this.handleTab.bind(this);\r\n  }\r\n\r\n  /*\r\n  componentDidUpdate() {\r\n    console.log(this.state);\r\n    this.forceUpdate(console.log('update'));\r\n  }\r\n  */\r\n  getFilename() {\r\n    const {\r\n      menuprops: {\r\n        initPage1: { pagename: pagename1, since: date1, until: date2 },\r\n      },\r\n    } = this.state;\r\n\r\n    const filename = `${pagename1}_${date1}_${date2}.csv`;\r\n    return filename;\r\n  }\r\n\r\n  getReqstr() {\r\n    const {\r\n      menuprops: {\r\n        initParameter: {\r\n          var1: varname1, min1: minvar1, max1: maxvar1, posttype,\r\n        },\r\n        initPage1: {\r\n          pagename: pagename1,\r\n          since: date1,\r\n          until: date2,\r\n          wordfilter: keyword1,\r\n          contentfilter: keyword3,\r\n          idfilter: user1,\r\n          authorfilter: author1,\r\n          commentfilter: commentThreshold,\r\n        },\r\n        submitType: type,\r\n      },\r\n    } = this.state;\r\n\r\n    // make url string for request data\r\n    const strminvar1 = `min${varname1}=${minvar1}` || '';\r\n    const strmaxvar1 = `max${varname1}=${maxvar1}` || '';\r\n    const strposttype = `posttype=${posttype}` || '';\r\n    const strpage1 = `page1=${pagename1}` || '';\r\n    const strtime1 = `time1=${date1}` || '';\r\n    const strtime2 = `time2=${date2}` || '';\r\n    const struser1 = `user1=${user1}` || '';\r\n    const strauthor1 = `author1=${author1}` || '';\r\n    const strkeyword1 = `keyword1=${keyword1}` || '';\r\n    const strkeyword3 = `keyword3=${keyword3}` || '';\r\n    const strcommentThreshold = `commentThreshold=${commentThreshold}` || '';\r\n    const strco = `co=${type}` || '';\r\n    const searchurl = '/searching?';\r\n    const str = `${searchurl + strminvar1}&${strmaxvar1}&${strposttype}&`\r\n      + `${strpage1}&${strtime1}&${strtime2}&${strauthor1}&${struser1}&${strkeyword1}&${strkeyword3}&${strcommentThreshold}&${strco}`;\r\n    return str;\r\n  }\r\n\r\n  setResponseError() {\r\n    this.setState(prevState => ({ ...prevState, responseError: true }));\r\n  }\r\n\r\n  handleSubmit(e) {\r\n    e.preventDefault();\r\n    this.setState(prevState => ({\r\n      ...prevState, isLoading: true, responseError: false, errorType: '',\r\n    }));\r\n    const url = encodeURI(this.getReqstr());\r\n    const myRequest = new Request(url, {\r\n      method: 'get',\r\n    });\r\n    fetch(myRequest)\r\n      .then((response) => {\r\n        if (response.status >= 200 && response.status < 300) {\r\n          return response.json();\r\n        }\r\n        const error = new Error(response.statusText);\r\n        error.response = response;\r\n        throw error;\r\n      })\r\n      .then((res) => {\r\n        console.log(res);\r\n        // console.log('done!');\r\n        if (res.title === 'search') {\r\n          this.changeList(res, 0);\r\n        } else {\r\n          const error = {\r\n            message: 'Fail to fetch',\r\n          };\r\n          throw error;\r\n        }\r\n        // data 才是實際的 JSON 資料\r\n      })\r\n      .catch((error) => {\r\n        console.log('Error');\r\n        this.setState(prevState => ({ ...prevState, responseError: true, errorType: error }));\r\n        console.log(error);\r\n      });\r\n  }\r\n\r\n  changeList(datalist, collection) {\r\n    const { list, next, previous } = datalist;\r\n    this.setState(prevState => ({\r\n      isLoading: false,\r\n      ...prevState,\r\n      visprops: {\r\n        set: list[collection + 1][0],\r\n      },\r\n    }));\r\n    console.log('change');\r\n    this.setState(prevState => ({ ...prevState, isLoading: false }));\r\n  }\r\n\r\n  // should change to <input>\r\n  handleTab(e, tab) {\r\n    console.log(e, tab);\r\n    const { target } = e;\r\n    const { name, value } = target;\r\n    this.setState((prevState) => {\r\n      const state = Lodash.cloneDeep(prevState);\r\n      state.menuprops[tab][name] = value;\r\n      return state;\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      isLoading, responseError, errorType, menuprops, visprops,\r\n    } = this.state;\r\n    return (\r\n      <div className=\"container-fluid\">\r\n        <div className=\"navbar\">\r\n          <Menu\r\n            menuprops={menuprops}\r\n            onSubmit={this.handleSubmit}\r\n            handlePT={e => this.handleTab(e, 'initParameter')}\r\n            handlePT1={e => this.handleTab(e, 'initPage1')}\r\n          />\r\n        </div>\r\n        <div className=\"grid\">\r\n            <div className=\"grid1\">\r\n              <Loading isLoading={isLoading} responseError={responseError} errorType={errorType} />\r\n              <Graph\r\n                set={visprops.set}\r\n                opState={this.state}\r\n              />\r\n            </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Grid;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport Grid from './grid';\nimport reportWebVitals from './reportWebVitals';\nimport './styles.scss';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Grid />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","/* eslint no-undef: \"off\"*/\r\n\r\n/*\r\n Author: Corneliu S. (github.com/upphiminn)\r\n This is a javascript implementation of the Louvain\r\n community detection algorithm (http://arxiv.org/abs/0803.0476)\r\n Based on https://bitbucket.org/taynaud/python-louvain/overview\r\n Code style is very imperative, I know :)\r\n */\r\n\r\n// Constants\r\nconst __PASS_MAX = -1;\r\nconst __MIN = 0.0000001;\r\n\r\nlet original_graph_nodes;\r\nlet original_graph_edges;\r\nlet original_graph = {};\r\nlet partition_init;\r\nlet edge_index = {};\r\n\r\n// Helpers\r\nfunction make_set(array) {\r\n  const set = {};\r\n\r\n  array.forEach((d, i) => {\r\n    set[d] = true;\r\n  });\r\n\r\n  return Object.keys(set);\r\n}\r\n\r\nfunction obj_values(obj) {\r\n  const vals = [];\r\n\r\n  for (const key in obj) {\r\n    if (obj.hasOwnProperty(key)) {\r\n      vals.push(obj[key]);\r\n    }\r\n  }\r\n\r\n  return vals;\r\n}\r\n\r\nfunction get_degree_for_node(graph, node) {\r\n  const neighbours = graph._assoc_mat[node] ? Object.keys(graph._assoc_mat[node]) : [];\r\n  let weight = 0;\r\n\r\n  neighbours.forEach((neighbour, i) => {\r\n    let value = graph._assoc_mat[node][neighbour] || 1;\r\n    if (node === neighbour) {\r\n      value *= 2;\r\n    }\r\n    weight += value;\r\n  });\r\n\r\n  return weight;\r\n}\r\n\r\nfunction get_neighbours_of_node(graph, node) {\r\n  if (typeof graph._assoc_mat[node] === 'undefined') {\r\n    return [];\r\n  }\r\n\r\n  const neighbours = Object.keys(graph._assoc_mat[node]);\r\n\r\n  return neighbours;\r\n}\r\n\r\nfunction get_edge_weight(graph, node1, node2) {\r\n  return graph._assoc_mat[node1] ? graph._assoc_mat[node1][node2] : undefined;\r\n}\r\n\r\nfunction get_graph_size(graph) {\r\n  let size = 0;\r\n\r\n  graph.edges.forEach((edge) => {\r\n    size += edge.weight;\r\n  });\r\n\r\n  return size;\r\n}\r\n\r\nfunction add_edge_to_graph(graph, edge) {\r\n  update_assoc_mat(graph, edge);\r\n\r\n  if (edge_index[`${edge.source}_${edge.target}`]) {\r\n    graph.edges[edge_index[`${edge.source}_${edge.target}`]].weight = edge.weight;\r\n  } else {\r\n    graph.edges.push(edge);\r\n    edge_index[`${edge.source}_${edge.target}`] = graph.edges.length - 1;\r\n  }\r\n}\r\n\r\nfunction make_assoc_mat(edge_list) {\r\n  const mat = {};\r\n\r\n  edge_list.forEach((edge, i) => {\r\n    mat[edge.source] = mat[edge.source] || {};\r\n    mat[edge.source][edge.target] = edge.weight;\r\n    mat[edge.target] = mat[edge.target] || {};\r\n    mat[edge.target][edge.source] = edge.weight;\r\n  });\r\n\r\n  return mat;\r\n}\r\n\r\nfunction update_assoc_mat(graph, edge) {\r\n  graph._assoc_mat[edge.source] = graph._assoc_mat[edge.source] || {};\r\n  graph._assoc_mat[edge.source][edge.target] = edge.weight;\r\n  graph._assoc_mat[edge.target] = graph._assoc_mat[edge.target] || {};\r\n  graph._assoc_mat[edge.target][edge.source] = edge.weight;\r\n}\r\n\r\nfunction clone(obj) {\r\n  if (obj === null || typeof obj !== 'object') {\r\n    return obj;\r\n  }\r\n\r\n  const temp = obj.constructor();\r\n\r\n  for (const key in obj) {\r\n    temp[key] = clone(obj[key]);\r\n  }\r\n\r\n  return temp;\r\n}\r\n\r\n// Core-Algorithm Related\r\nfunction init_status(graph, status, part) {\r\n  status.nodes_to_com = {};\r\n  status.total_weight = 0;\r\n  status.internals = {};\r\n  status.degrees = {};\r\n  status.gdegrees = {};\r\n  status.loops = {};\r\n  status.total_weight = get_graph_size(graph);\r\n\r\n  if (typeof part === 'undefined') {\r\n    graph.nodes.forEach((node, i) => {\r\n      status.nodes_to_com[node] = i;\r\n\r\n      const deg = get_degree_for_node(graph, node);\r\n\r\n      if (deg < 0) {\r\n        throw new TypeError('Graph should only have positive weights.');\r\n      }\r\n\r\n      status.degrees[i] = deg;\r\n      status.gdegrees[node] = deg;\r\n      status.loops[node] = get_edge_weight(graph, node, node) || 0;\r\n      status.internals[i] = status.loops[node];\r\n    });\r\n  } else {\r\n    graph.nodes.forEach((node, i) => {\r\n      const com = part[node];\r\n      status.nodes_to_com[node] = com;\r\n      const deg = get_degree_for_node(graph, node);\r\n      status.degrees[com] = (status.degrees[com] || 0) + deg;\r\n      status.gdegrees[node] = deg;\r\n      let inc = 0.0;\r\n      const neighbours = get_neighbours_of_node(graph, node);\r\n\r\n      neighbours.forEach((neighbour) => {\r\n        const weight = graph._assoc_mat[node][neighbour];\r\n\r\n        if (weight <= 0) {\r\n          throw new TypeError('Graph should only have positive weights.');\r\n        }\r\n\r\n        if (part[neighbour] === com) {\r\n          if (neighbour === node) {\r\n            inc += weight;\r\n          } else {\r\n            inc += weight / 2.0;\r\n          }\r\n        }\r\n      });\r\n\r\n      status.internals[com] = (status.internals[com] || 0) + inc;\r\n    });\r\n  }\r\n}\r\n\r\nfunction __modularity(status) {\r\n  const links = status.total_weight;\r\n  let result = 0.0;\r\n  const communities = make_set(obj_values(status.nodes_to_com));\r\n\r\n  communities.forEach((com, i) => {\r\n    const in_degree = status.internals[com] || 0;\r\n    const degree = status.degrees[com] || 0;\r\n    if (links > 0) {\r\n      result = result + in_degree / links - Math.pow(degree / (2.0 * links), 2);\r\n    }\r\n  });\r\n\r\n  return result;\r\n}\r\n\r\nfunction __neighcom(node, graph, status) {\r\n  // compute the communities in the neighb. of the node, with the graph given by\r\n  // node_to_com\r\n  const weights = {};\r\n  const neighboorhood = get_neighbours_of_node(graph, node); // make iterable;\r\n\r\n  neighboorhood.forEach((neighbour) => {\r\n    if (neighbour !== node) {\r\n      const weight = graph._assoc_mat[node][neighbour] || 1;\r\n      const neighbourcom = status.nodes_to_com[neighbour];\r\n      weights[neighbourcom] = (weights[neighbourcom] || 0) + weight;\r\n    }\r\n  });\r\n\r\n  return weights;\r\n}\r\n\r\nfunction __insert(node, com, weight, status) {\r\n  // insert node into com and modify status\r\n  status.nodes_to_com[node] = +com;\r\n  status.degrees[com] = (status.degrees[com] || 0) + (status.gdegrees[node] || 0);\r\n  status.internals[com] = (status.internals[com] || 0) + weight + (status.loops[node] || 0);\r\n}\r\n\r\nfunction __remove(node, com, weight, status) {\r\n  // remove node from com and modify status\r\n  status.degrees[com] = (status.degrees[com] || 0) - (status.gdegrees[node] || 0);\r\n  status.internals[com] = (status.internals[com] || 0) - weight - (status.loops[node] || 0);\r\n  status.nodes_to_com[node] = -1;\r\n}\r\n\r\nfunction __renumber(dict) {\r\n  let count = 0;\r\n  const ret = clone(dict); // deep copy :)\r\n  const new_values = {};\r\n  const dict_keys = Object.keys(dict);\r\n\r\n  dict_keys.forEach((key) => {\r\n    const value = dict[key];\r\n    let new_value = typeof new_values[value] === 'undefined' ? -1 : new_values[value];\r\n\r\n    if (new_value === -1) {\r\n      new_values[value] = count;\r\n      new_value = count;\r\n      count += 1;\r\n    }\r\n\r\n    ret[key] = new_value;\r\n  });\r\n\r\n  return ret;\r\n}\r\n\r\nfunction __one_level(graph, status) {\r\n  // Compute one level of the Communities Dendogram.\r\n  let modif = true;\r\n  let nb_pass_done = 0;\r\n  let cur_mod = __modularity(status);\r\n  let new_mod = cur_mod;\r\n\r\n  while (modif && nb_pass_done !== __PASS_MAX) {\r\n    cur_mod = new_mod;\r\n    modif = false;\r\n    nb_pass_done += 1;\r\n\r\n    graph.nodes.forEach((node, i) => {\r\n      const com_node = status.nodes_to_com[node];\r\n      const degc_totw = (status.gdegrees[node] || 0) / (status.total_weight * 2.0);\r\n      const neigh_communities = __neighcom(node, graph, status);\r\n      __remove(node, com_node, neigh_communities[com_node] || 0.0, status);\r\n      let best_com = com_node;\r\n      let best_increase = 0;\r\n      const neigh_communities_entries = Object.keys(neigh_communities); // make iterable;\r\n\r\n      neigh_communities_entries.forEach((com) => {\r\n        const incr = neigh_communities[com] - (status.degrees[com] || 0.0) * degc_totw;\r\n\r\n        if (incr > best_increase) {\r\n          best_increase = incr;\r\n          best_com = com;\r\n        }\r\n      });\r\n\r\n      __insert(node, best_com, neigh_communities[best_com] || 0, status);\r\n\r\n      if (best_com !== com_node) {\r\n        modif = true;\r\n      }\r\n    });\r\n\r\n    new_mod = __modularity(status);\r\n\r\n    if (new_mod - cur_mod < __MIN) {\r\n      break;\r\n    }\r\n  }\r\n}\r\n\r\nfunction induced_graph(partition, graph) {\r\n  const ret = { nodes: [], edges: [], _assoc_mat: {} };\r\n  let w_prec,\r\n    weight;\r\n  // add nodes from partition values\r\n  const partition_values = obj_values(partition);\r\n  ret.nodes = ret.nodes.concat(make_set(partition_values)); // make set\r\n\r\n  graph.edges.forEach((edge, i) => {\r\n    weight = edge.weight || 1;\r\n    const com1 = partition[edge.source];\r\n    const com2 = partition[edge.target];\r\n    w_prec = get_edge_weight(ret, com1, com2) || 0;\r\n    const new_weight = w_prec + weight;\r\n    add_edge_to_graph(ret, { source: com1, target: com2, weight: new_weight });\r\n  });\r\n\r\n  edge_index = {};\r\n\r\n  return ret;\r\n}\r\n\r\nfunction partition_at_level(dendogram, level) {\r\n  const partition = clone(dendogram[0]);\r\n\r\n  for (let i = 1; i < level + 1; i++) {\r\n    Object.keys(partition).forEach((key, j) => {\r\n      const node = key;\r\n      const com = partition[key];\r\n      partition[node] = dendogram[i][com];\r\n    });\r\n  }\r\n\r\n  return partition;\r\n}\r\n\r\nfunction generate_dendogram(graph, part_init) {\r\n  if (graph.edges.length === 0) {\r\n    const part = {};\r\n    graph.nodes.forEach((node) => {\r\n      part[node] = node;\r\n    });\r\n\r\n    return part;\r\n  }\r\n\r\n  const status = {};\r\n\r\n  init_status(original_graph, status, part_init);\r\n  let mod = __modularity(status);\r\n  const status_list = [];\r\n  __one_level(original_graph, status);\r\n  let new_mod = __modularity(status);\r\n  let partition = __renumber(status.nodes_to_com);\r\n  status_list.push(partition);\r\n  mod = new_mod;\r\n  let current_graph = induced_graph(partition, original_graph);\r\n  init_status(current_graph, status);\r\n\r\n  while (true) {\r\n    __one_level(current_graph, status);\r\n    new_mod = __modularity(status);\r\n    if (new_mod - mod < __MIN) {\r\n      break;\r\n    }\r\n\r\n    partition = __renumber(status.nodes_to_com);\r\n    status_list.push(partition);\r\n\r\n    mod = new_mod;\r\n    current_graph = induced_graph(partition, current_graph);\r\n    init_status(current_graph, status);\r\n  }\r\n\r\n  return status_list;\r\n}\r\n\r\n(function (root, factory) {\r\n  if (typeof define === 'function' && define.amd) {\r\n    // AMD. Register as an anonymous module.\r\n    define([], factory);\r\n  } else if (typeof module === 'object' && module.exports) {\r\n    // Node. Does not work with strict CommonJS, but\r\n    // only CommonJS-like environments that support module.exports,\r\n    // like Node.\r\n    module.exports = factory();\r\n  } else {\r\n    // Browser globals (root is window)\r\n    root.jLouvain = factory();\r\n  }\r\n}(typeof self !== 'undefined' ? self : this, () => function () {  /* eslint-disable-line no-restricted-globals */\r\n  const core = function () {\r\n    const dendogram = generate_dendogram(original_graph, partition_init);\r\n\r\n    return partition_at_level(dendogram, dendogram.length - 1);\r\n  };\r\n\r\n  core.nodes = function (nds) {\r\n    if (arguments.length > 0) {\r\n      original_graph_nodes = nds;\r\n    }\r\n\r\n    return core;\r\n  };\r\n\r\n  core.edges = function (edgs) {\r\n    if (typeof original_graph_nodes === 'undefined') {\r\n      throw new TypeError('Graph nodes are undefined');\r\n    }\r\n\r\n    if (arguments.length > 0) {\r\n      original_graph_edges = edgs;\r\n      const assoc_mat = make_assoc_mat(edgs);\r\n      original_graph = {\r\n        nodes: original_graph_nodes,\r\n        edges: original_graph_edges,\r\n        _assoc_mat: assoc_mat,\r\n      };\r\n    }\r\n\r\n    return core;\r\n  };\r\n\r\n  core.partition_init = function (prttn) {\r\n    if (arguments.length > 0) {\r\n      partition_init = prttn;\r\n    }\r\n    return core;\r\n  };\r\n\r\n  return core;\r\n}));\r\n"],"sourceRoot":""}